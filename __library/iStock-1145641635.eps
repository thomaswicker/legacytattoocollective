%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1903.m10.i010.n006.S.c10.319001252 Art deco label. Retro luxury geometric ornaments, vintage ornament frame and hipster decorative lines labels vector illustration set.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: ≈фим “уркин
%%CreationDate: 3/4/2019
%%BoundingBox: 0 0 650 450
%%HiResBoundingBox: 0 0 650 450
%%CropBox: 0 0 650 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600X450</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-03-04T14:58:48+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-03-04T14:58:52+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-03-04T14:58:52+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8y5NXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqneje&#xA;TPMmsWcl7YWqvaRV5zyzQwJ8NORBmeOoXkKkdK5iZtbixS4ZHc+RP3BuhgnIWBsyvy/+Qf5ia5ZX&#xA;F5a29sIIo2aB/rdvKs8ikfuUaF5FVv8AXIHvmPk7WwxIG/yIrz3AUYJICL8mfzCluJ7aKytZLm2D&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:78a7c4d5-1c28-e848-bc7e-ae08f9bc67e0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:78a7c4d5-1c28-e848-bc7e-ae08f9bc67e0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:651818c3-7f23-b643-87b7-01b7361d15a9</stRef:instanceID>
            <stRef:documentID>xmp.did:651818c3-7f23-b643-87b7-01b7361d15a9</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dfcc0172-3c6d-ac40-961e-141c8ecc9efa</stEvt:instanceID>
                  <stEvt:when>2018-11-01T12:47:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:651818c3-7f23-b643-87b7-01b7361d15a9</stEvt:instanceID>
                  <stEvt:when>2019-03-04T14:09:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78a7c4d5-1c28-e848-bc7e-ae08f9bc67e0</stEvt:instanceID>
                  <stEvt:when>2019-03-04T14:58:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>650.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>–У—А—Г–њ–њ–∞ –Њ–±—А–∞–Ј—Ж–Њ–≤ –њ–Њ —Г–Љ–Њ–ї—З–∞–љ–Є—О</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
650 450 li
650 0 li
cp
clp
650 450 mo
1e-06 450 li
1e-06 0 li
650 0 li
650 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0509804 .0470588 .0666667 rgb
f
157.787 69.2705 mo
72.9404 69.2705 li
72.9404 67.2339 li
157.787 67.2339 li
157.787 69.2705 li
cp
level3{
gsave
clp
[48.3333 97.0001 -97.0001 48.3333 94.9012 27.186 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .603922 .223529 ]
/C1 [.905882 .698039 .145098 ]
/N 3.10628 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .894118 .470588 ]
/C1 [.905882 .698039 .145098 ]
/N 4.97729 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .894118 .470588 ]
/C1 [.964706 .92549 .505882 ]
/N 1.35692 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .764706 .254902 ]
/C1 [.964706 .92549 .505882 ]
/N 3.10628 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .764706 .254902 ]
/C1 [.87451 .658824 .196078 ]
/N 1.94336 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.87451 .658824 .196078 ]
/C1 [.8 .564706 .141176 ]
/N 1.27368 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .647059 .192157 ]
/C1 [.8 .564706 .141176 ]
/N 1.11829 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .729412 .247059 ]
/C1 [.85098 .647059 .192157 ]
/N 1.36839 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.992157 .92549 .505882 ]
/C1 [.905882 .729412 .247059 ]
/N 1.94336 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.992157 .92549 .505882 ]
/C1 [.976471 .772549 .223529 ]
/N 1.94336 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.976471 .772549 .223529 ]
/C1 [.819608 .580392 .207843 ]
/N 1.35692 
>>
]
/Bounds [.1 .2 .287008 .375197 .427165 .523819 .612205 .669882 .761811 .844685 ]
/Encode [0 1 1 0 0 1 1 0 0 1 0 1 1 0 1 0 1 0 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.3333 97.0001 -97.0001 48.3333 94.9012 27.186 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~g"G'3g"G'3g"G'4g=k<9gt^`Bhr*JRjQ>[km-a?3nac;CoCV\Io^qeJo^qeJo^qeJp%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%7nJo'u5;m-<frj5AeNh;-lAgY1B7f[n^*e^W'r
dEp4bcHXSWc-=P[cd:%ddaHUneCE+#f%8O+f\,!5h;7&IiSrnYjlPXekNV=!mdK]:oCVbNp\=R\qYU0f
r;?Kjr;?Kjr;?Kjr;?Hhqtp6dqYL$`q=saZp\+=Ro^h\FnaQ#8mHj0(l0.<mjl>@Zi8<DHgY1<3f%&6t
~>
<~R[T\6R[T\6R[T_8S=H.AT:hpRV5C2lXg#4I`QQWXf\50<i8N\Tj5]1[j5]1[j5]1[jQ,C_jQ5Lbk2tgh
kNM-ol07Kulg*fqhqQc4dE]tYaN)<>`5KR2_o'C0_ns:,^q[Rp\[JiKXf84rVPU,bUS=HTT:VUDS!ob4
Q^3l"P*(ifOckroQC!u+R@9V8SXuIHTq\<WUnsugX/rJ.Z*UgF\%&uZ]YMG*b0JDaf@es9i8WhZkNM0q
lg*m&lg*m%l0.<mjPo.UgtLE2da-.Z`Pf^4_ns7*^V7Co]=PP_\$`TLZEUO8XK/>!VPU&^TV%dFR[BG,
~>
<~3B/uX3&ilW3&iiU2`<NN1c$mA0.ne*-mgH)78HukA8#dtEH?5EG'A.SGB\7TGB\7TG^+IXH$O[]H?spb
I!g?jIXZcrJ:N#hD.[0[=&Vmg8k2?=6UF+*5s[e&5sR\#5<_4m4$#>Z1bpd?0eb:70.nk//M&G'.Olkq
-mp>g,pX`],palc-R^Al.Olr!/1iG+/h\k30JP==2)[BQ3BB5a4Zttm5t4LD<EWU9AS>muEHHAKH@1-i
It3'"J:N,uI!U$\F)Yr0ARShF;G9SG3]K)Y3&ilW3&ilW3&ilV2`EZS2`EZS2`<QP2E!HO2Dm?L2)R6K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
187.154 60.5332 mo
126.613 60.5332 li
140.071 47.0679 li
148.383 47.0679 li
156.741 56.106 li
183.053 56.106 li
187.154 60.5332 li
cp
49.1187 56.106 mo
75.6646 56.106 li
84.0225 47.0679 li
92.9639 47.0679 li
106.417 60.5112 li
45.0522 60.5112 li
49.1187 56.106 li
cp
57.4771 47.0679 mo
81.2476 47.0679 li
74.7734 54.0693 li
51.002 54.0693 li
57.4771 47.0679 li
cp
88.3184 42.4219 mo
90.9272 45.0308 li
85.9058 45.0308 li
88.3184 42.4219 li
cp
92.2671 38.1514 mo
92.7036 38.1514 li
99.583 45.0308 li
93.8076 45.0308 li
89.7017 40.9258 li
92.2671 38.1514 li
cp
122.318 38.1514 mo
136.821 38.1514 li
129.941 45.0308 li
102.463 45.0308 li
95.5835 38.1514 li
110.087 38.1514 li
108.728 39.5107 107.368 40.8701 106.008 42.2295 cv
112.805 42.2295 119.601 42.2295 126.397 42.2295 cv
125.038 40.8701 123.678 39.5107 122.318 38.1514 cv
cp
130.785 47.0679 mo
137.19 47.0679 li
123.733 60.5234 li
117.33 60.5234 li
130.785 47.0679 li
cp
104.5 47.0679 mo
127.905 47.0679 li
116.203 58.77 li
104.5 47.0679 li
cp
115.074 60.521 mo
109.297 60.521 li
95.8442 47.0679 li
101.62 47.0679 li
115.074 60.521 li
cp
143.006 41.2524 mo
139.228 45.0308 li
132.821 45.0308 li
139.701 38.1514 li
140.138 38.1514 li
143.006 41.2524 li
cp
146.5 45.0308 mo
142.107 45.0308 li
144.39 42.749 li
146.5 45.0308 li
cp
174.694 47.0679 mo
181.169 54.0693 li
157.632 54.0693 li
151.158 47.0679 li
174.694 47.0679 li
cp
195.313 52.9893 mo
195.313 54.0693 li
183.944 54.0693 li
175.586 45.0308 li
149.274 45.0308 li
141.03 36.1147 li
120.282 36.1147 li
118.922 34.7549 117.563 33.3955 116.203 32.0356 cv
114.843 33.3955 113.483 34.7549 112.124 36.1147 cv
91.376 36.1147 li
83.1313 45.0308 li
56.5859 45.0308 li
48.228 54.0693 li
37.0054 54.0693 li
37.0054 52.9893 li
32.8096 52.9893 li
32.8096 57.1851 li
37.0054 57.1851 li
37.0054 56.106 li
46.3447 56.106 li
40.395 62.5591 li
191.813 62.5591 li
185.828 56.106 li
195.313 56.106 li
195.313 57.1851 li
199.508 57.1851 li
199.508 52.9893 li
195.313 52.9893 li
cp
level3{
gsave
clp
[48.3227 96.9788 -96.9788 48.3227 100.793 24.2492 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.3227 96.9788 -96.9788 48.3227 100.793 24.2492 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
159.378 106.989 mo
74.5303 106.989 li
74.5303 104.953 li
159.378 104.953 li
159.378 106.989 li
cp
level3{
gsave
clp
[48.3333 97.0001 -97.0001 48.3333 81.1188 34.0533 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.3333 97.0001 -97.0001 48.3333 81.1188 34.0533 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
183.2 118.117 mo
156.653 118.117 li
148.296 127.155 li
139.354 127.155 li
125.901 113.712 li
187.266 113.712 li
183.2 118.117 li
cp
174.841 127.155 mo
151.07 127.155 li
157.544 120.154 li
181.316 120.154 li
174.841 127.155 li
cp
144 131.801 mo
141.39 129.192 li
146.413 129.192 li
144 131.801 li
cp
140.051 136.072 mo
139.614 136.072 li
132.734 129.192 li
138.51 129.192 li
142.616 133.298 li
140.051 136.072 li
cp
122.231 136.072 mo
123.59 134.712 124.95 133.353 126.309 131.993 cv
119.513 131.993 112.717 131.993 105.921 131.993 cv
107.28 133.353 108.64 134.712 109.999 136.072 cv
95.4971 136.072 li
102.376 129.192 li
129.854 129.192 li
136.734 136.072 li
122.231 136.072 li
cp
92.1797 136.072 mo
89.312 132.971 li
93.0908 129.192 li
99.4966 129.192 li
92.6172 136.072 li
92.1797 136.072 li
cp
85.8179 129.192 mo
90.21 129.192 li
87.9282 131.474 li
85.8179 129.192 li
cp
75.5767 118.117 mo
49.2651 118.117 li
45.1636 113.69 li
105.705 113.69 li
92.2466 127.155 li
83.9346 127.155 li
75.5767 118.117 li
cp
57.6235 127.155 mo
51.1489 120.154 li
74.6855 120.154 li
81.1597 127.155 li
57.6235 127.155 li
cp
114.987 113.7 mo
101.533 127.155 li
95.1274 127.155 li
108.584 113.7 li
114.987 113.7 li
cp
127.817 127.155 mo
104.413 127.155 li
116.115 115.453 li
127.817 127.155 li
cp
123.021 113.702 mo
136.473 127.155 li
130.698 127.155 li
117.243 113.702 li
123.021 113.702 li
cp
195.313 117.038 mo
195.313 118.117 li
185.973 118.117 li
191.923 111.664 li
40.5054 111.664 li
46.4907 118.117 li
37.0054 118.117 li
37.0054 117.038 li
32.8096 117.038 li
32.8096 121.234 li
37.0054 121.234 li
37.0054 120.154 li
48.374 120.154 li
56.7324 129.192 li
83.0435 129.192 li
91.2886 138.108 li
112.036 138.108 li
113.396 139.468 114.755 140.828 116.115 142.188 cv
117.475 140.828 118.834 139.468 120.194 138.108 cv
140.942 138.108 li
149.187 129.192 li
175.732 129.192 li
184.09 120.154 li
195.313 120.154 li
195.313 121.234 li
199.508 121.234 li
199.508 117.038 li
195.313 117.038 li
cp
level3{
gsave
clp
[48.3226 96.9787 -96.9787 48.3226 75.2395 37.0148 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.3226 96.9787 -96.9787 48.3226 75.2395 37.0148 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
45.0522 98.3657 mo
60.7134 98.3657 li
60.7134 94.2114 li
49.2954 94.2114 li
49.2954 88.7256 li
51.5 86.5215 li
49.2954 84.3169 li
49.2954 75.4995 li
45.0522 75.4995 li
45.0522 84.2671 li
42.7959 86.5215 li
45.0522 88.7759 li
45.0522 98.3657 li
cp
61.4902 99.1421 mo
44.2754 99.1421 li
44.2754 89.0972 li
41.6978 86.5215 li
44.2754 83.9453 li
44.2754 74.7227 li
50.0723 74.7227 li
50.0723 83.9951 li
52.5981 86.5215 li
50.0723 89.0474 li
50.0723 93.4351 li
61.4902 93.4351 li
61.4902 99.1421 li
cp
1 1 1 rgb
f
48.1299 88.2427 mo
48.7036 87.6685 49.2773 87.0947 49.8511 86.521 cv
49.2773 85.9473 48.7036 85.3735 48.1299 84.7998 cv
48.1299 76.665 li
46.2168 76.665 li
46.2168 84.7495 li
45.626 85.3403 45.0356 85.9307 44.4453 86.521 cv
45.0356 87.1118 45.626 87.7021 46.2168 88.2925 cv
46.2168 97.2007 li
59.5474 97.2007 li
59.5474 95.3774 li
48.1299 95.3774 li
48.1299 88.2427 li
cp
f
106.441 98.3657 mo
111.736 98.3657 li
104.013 88.2554 li
105.75 86.52 li
104.384 85.1572 li
111.767 75.4995 li
106.474 75.4995 li
100.354 83.4751 li
94.2617 75.4995 li
88.9678 75.4995 li
96.3296 85.1318 li
94.9395 86.5215 li
96.6968 88.2798 li
88.9634 98.3657 li
94.2617 98.3657 li
100.353 90.3901 li
106.441 98.3657 li
cp
113.307 99.1421 mo
106.058 99.1421 li
100.353 91.6704 li
94.6455 99.1421 li
87.3887 99.1421 li
95.667 88.3462 li
93.8408 86.5215 li
95.2998 85.062 li
87.396 74.7227 li
94.6455 74.7227 li
100.356 82.1973 li
106.092 74.7227 li
113.339 74.7227 li
105.414 85.0874 li
106.85 86.52 li
105.042 88.3252 li
113.307 99.1421 li
cp
f
107.048 76.665 mo
100.352 85.3931 li
93.6855 76.665 li
91.3247 76.665 li
97.8755 85.2329 li
97.4463 85.6621 97.0166 86.0918 96.5874 86.521 cv
97.1392 87.0732 97.6919 87.6255 98.2437 88.1777 cv
91.3247 97.2007 li
93.6855 97.2007 li
100.352 88.4712 li
107.018 97.2007 li
109.379 97.2007 li
102.468 88.1538 li
103.013 87.6094 103.557 87.0654 104.101 86.521 cv
103.68 86.1006 103.259 85.6797 102.838 85.2588 cv
109.409 76.665 li
107.048 76.665 li
cp
f
150.844 85.8418 mo
155.089 85.8418 li
156.968 85.8418 158.976 85.1348 158.976 83.1504 cv
158.976 81.1445 156.968 80.4302 155.089 80.4302 cv
150.844 80.4302 li
150.844 85.8418 li
cp
155.089 86.6182 mo
150.067 86.6182 li
150.067 79.6533 li
155.089 79.6533 li
157.343 79.6533 159.752 80.5728 159.752 83.1504 cv
159.752 85.7065 157.343 86.6182 155.089 86.6182 cv
cp
159.596 98.3657 mo
164.659 98.3657 li
158.899 90.1987 li
159.341 90.0107 li
162.256 88.7651 163.996 86.2012 163.996 83.1504 cv
163.996 78.7886 160.309 75.4995 155.418 75.4995 cv
145.824 75.4995 li
145.824 83.6768 li
142.978 86.5215 li
145.824 89.3657 li
145.824 98.3657 li
150.067 98.3657 li
150.067 90.7725 li
154.245 90.7725 li
159.596 98.3657 li
cp
166.158 99.1421 mo
159.193 99.1421 li
153.842 91.5493 li
150.844 91.5493 li
150.844 99.1421 li
145.047 99.1421 li
145.047 89.6875 li
141.879 86.5215 li
145.047 83.355 li
145.047 74.7227 li
155.418 74.7227 li
160.751 74.7227 164.772 78.3457 164.772 83.1504 cv
164.772 86.3667 163.028 89.0928 160.08 90.5264 cv
166.158 99.1421 li
cp
f
155.088 87.7842 mo
148.901 87.7842 li
148.901 78.4883 li
155.088 78.4883 li
158.526 78.4883 160.917 80.2817 160.917 83.1504 cv
160.917 85.9907 158.526 87.7842 155.088 87.7842 cv
cp
162.83 83.1504 mo
162.83 79.355 159.632 76.665 155.417 76.665 cv
146.988 76.665 li
146.988 84.1587 li
146.201 84.9463 145.413 85.7334 144.625 86.521 cv
145.413 87.3086 146.201 88.0962 146.988 88.8838 cv
146.988 97.2007 li
148.901 97.2007 li
148.901 89.6074 li
154.849 89.6074 li
160.199 97.2007 li
162.412 97.2007 li
156.971 89.4878 li
160.409 88.9204 162.83 86.4688 162.83 83.1504 cv
cp
f
61.6045 86.5215 mo
63.7832 88.6982 li
63.7832 88.8594 li
63.7832 94.5879 67.793 98.7236 73.3184 98.7236 cv
78.7959 98.7236 82.8057 94.6304 82.8516 88.9897 cv
82.8535 88.8306 li
85.1626 86.5215 li
82.8535 84.2109 li
82.8535 75.4995 li
78.6099 75.4995 li
78.6099 84.373 li
76.4619 86.5215 li
78.6099 88.6694 li
78.6099 88.8306 li
78.6099 92.2695 76.4336 94.6304 73.3184 94.6304 cv
70.2368 94.6304 68.0605 92.3018 68.0264 88.9683 cv
68.0249 88.8047 li
70.3081 86.5215 li
68.0264 84.2397 li
68.0264 75.4995 li
63.7832 75.4995 li
63.7832 84.3442 li
61.6045 86.5215 li
cp
73.3184 99.5005 mo
67.3857 99.5005 63.0684 95.1006 63.0068 89.0215 cv
60.5059 86.5215 li
63.0063 84.0225 li
63.0063 74.7227 li
68.8032 74.7227 li
68.8032 83.918 li
71.4067 86.5215 li
68.8071 89.1216 li
68.9028 91.916 70.7383 93.8535 73.3184 93.8535 cv
75.9458 93.8535 77.79 91.8584 77.8325 88.9912 cv
75.3633 86.5215 li
77.833 84.0513 li
77.833 74.7227 li
83.6299 74.7227 li
83.6299 83.8892 li
86.2607 86.5215 li
83.6265 89.1567 li
83.502 95.1597 79.1904 99.5005 73.3184 99.5005 cv
cp
f
81.6875 84.6934 mo
81.6875 76.665 li
79.7744 76.665 li
79.7744 84.856 li
79.2192 85.4111 78.6641 85.9658 78.1094 86.521 cv
78.6641 87.0762 79.2192 87.6313 79.7744 88.1865 cv
79.7744 88.8901 li
79.7744 92.9253 77.0845 95.7959 73.3174 95.7959 cv
69.5518 95.7959 66.8608 92.9253 66.8608 88.8901 cv
66.8608 88.3198 li
67.46 87.7202 68.0596 87.1206 68.6592 86.521 cv
68.0596 85.9214 67.46 85.3218 66.8608 84.7222 cv
66.8608 76.665 li
64.9473 76.665 li
64.9473 84.8271 li
64.3828 85.3916 63.8179 85.9565 63.2534 86.521 cv
63.8179 87.0859 64.3828 87.6504 64.9473 88.2153 cv
64.9473 88.8901 li
64.9473 93.9722 68.4155 97.5586 73.3174 97.5586 cv
78.2207 97.5586 81.6875 93.9722 81.6875 88.8901 cv
81.6875 88.3486 li
82.2969 87.7393 82.9058 87.1304 83.5151 86.521 cv
82.9058 85.9121 82.2969 85.3027 81.6875 84.6934 cv
cp
f
115.534 86.5215 mo
117.716 88.7046 li
117.716 88.8652 li
117.716 94.5879 121.726 98.7236 127.251 98.7236 cv
132.732 98.7236 136.742 94.6274 136.786 88.9819 cv
136.788 88.8228 li
139.089 86.5215 li
136.786 84.2183 li
136.786 75.4995 li
132.543 75.4995 li
132.543 84.3672 li
130.389 86.5215 li
132.543 88.6758 li
132.543 88.8364 li
132.543 92.2695 130.367 94.6304 127.251 94.6304 cv
124.166 94.6304 121.99 92.2983 121.959 88.9595 cv
121.958 88.7969 li
124.232 86.5215 li
121.959 84.2471 li
121.959 75.4995 li
117.716 75.4995 li
117.716 84.3384 li
115.534 86.5215 li
cp
127.251 99.5005 mo
121.321 99.5005 117.003 95.1035 116.94 89.0259 cv
114.436 86.5215 li
116.939 84.0166 li
116.939 74.7227 li
122.736 74.7227 li
122.736 83.9253 li
125.331 86.5215 li
122.739 89.1143 li
122.833 91.9131 124.669 93.8535 127.251 93.8535 cv
129.876 93.8535 131.721 91.8618 131.765 88.9956 cv
129.29 86.5215 li
131.766 84.0454 li
131.766 74.7227 li
137.563 74.7227 li
137.563 83.8965 li
140.188 86.5215 li
137.561 89.1489 li
137.439 95.1567 133.127 99.5005 127.251 99.5005 cv
cp
f
135.621 84.7002 mo
135.621 76.665 li
133.708 76.665 li
133.708 84.8496 li
133.15 85.4067 132.593 85.9639 132.036 86.521 cv
132.593 87.0786 133.15 87.6357 133.708 88.1929 cv
133.708 88.8901 li
133.708 92.9253 131.018 95.7959 127.25 95.7959 cv
123.485 95.7959 120.793 92.9253 120.793 88.8901 cv
120.793 88.3135 li
121.391 87.7158 121.988 87.1187 122.586 86.521 cv
121.988 85.9238 121.391 85.3262 120.793 84.729 cv
120.793 76.665 li
118.88 76.665 li
118.88 84.8203 li
118.313 85.3872 117.747 85.9541 117.18 86.521 cv
117.747 87.0879 118.313 87.6548 118.88 88.2217 cv
118.88 88.8901 li
118.88 93.9722 122.349 97.5586 127.25 97.5586 cv
132.154 97.5586 135.621 93.9722 135.621 88.8901 cv
135.621 88.3423 li
136.228 87.7349 136.834 87.1284 137.441 86.521 cv
136.834 85.9141 136.228 85.3071 135.621 84.7002 cv
cp
f
175.502 98.3657 mo
179.834 98.3657 li
179.834 91.9619 li
182.572 89.2266 li
180.929 87.582 li
189.151 75.4995 li
184.001 75.4995 li
177.656 84.8647 li
171.37 75.4995 li
166.15 75.4995 li
174.373 87.541 li
172.689 89.2246 li
175.502 92.0361 li
175.502 98.3657 li
cp
180.611 99.1421 mo
174.725 99.1421 li
174.725 92.3579 li
171.591 89.2246 li
173.369 87.4468 li
164.679 74.7227 li
171.784 74.7227 li
177.659 83.4751 li
183.588 74.7227 li
190.62 74.7227 li
181.933 87.4878 li
183.67 89.2266 li
180.611 92.2832 li
180.611 99.1421 li
cp
f
179.423 87.7231 mo
186.949 76.665 li
184.618 76.665 li
177.652 86.9482 li
170.748 76.665 li
168.357 76.665 li
175.88 87.6807 li
175.366 88.1948 174.852 88.7095 174.337 89.2241 cv
175.113 90.0005 175.89 90.7769 176.667 91.5532 cv
176.667 97.2007 li
178.669 97.2007 li
178.669 91.479 li
179.42 90.7275 180.172 89.9756 180.924 89.2241 cv
180.423 88.7236 179.923 88.2236 179.423 87.7231 cv
cp
f
536.797 44.7114 mo
525.159 56.3491 li
515.223 56.3491 li
522.528 49.043 529.835 41.7368 537.142 34.4307 cv
559.071 56.3555 li
548.437 56.3555 li
536.797 44.7114 li
cp
483.937 49.6968 mo
518.346 49.6968 li
511.693 56.3491 li
477.284 56.3491 li
483.937 49.6968 li
cp
590.984 49.6968 mo
597.693 56.3867 li
562.604 56.3867 li
555.936 49.6968 li
590.984 49.6968 li
cp
618.442 57.603 mo
614.354 53.5137 li
611.443 56.4175 li
601.022 56.4175 li
591.958 47.3457 li
553.585 47.3457 li
537.142 30.9009 li
520.696 47.3457 li
482.963 47.3457 li
473.959 56.3491 li
462.763 56.3491 li
459.928 53.5137 li
455.839 57.603 li
459.928 61.6919 li
462.919 58.7002 li
526.132 58.7002 li
536.797 48.0361 li
547.463 58.7378 li
611.437 58.7378 li
614.354 61.6919 li
618.442 57.603 li
cp
level3{
gsave
clp
[42.0001 110.667 -110.667 42.0001 525.549 27.0611 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0001 110.667 -110.667 42.0001 525.549 27.0611 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
525.843 65.9194 mo
475.009 65.9194 li
475.009 63.5679 li
525.843 63.5679 li
525.843 65.9194 li
cp
level3{
gsave
clp
[42 110.666 -110.666 42 491.088 40.1398 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42 110.666 -110.666 42 491.088 40.1398 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
531.526 60.2197 mo
537.141 54.605 li
542.756 60.2197 li
537.141 65.8345 li
531.526 60.2197 li
cp
level3{
gsave
clp
[42.0003 110.667 -110.667 42.0003 524.681 27.3906 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0003 110.667 -110.667 42.0003 524.681 27.3906 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
469.974 65.9194 mo
464.635 65.9194 li
464.635 63.5679 li
469.974 63.5679 li
469.974 65.9194 li
cp
level3{
gsave
clp
[41.9995 110.665 -110.665 41.9995 462.136 51.1277 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.9995 110.665 -110.665 41.9995 462.136 51.1277 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
599.273 65.9194 mo
548.438 65.9194 li
548.438 63.5679 li
599.273 63.5679 li
599.273 65.9194 li
cp
level3{
gsave
clp
[42 110.666 -110.666 42 555.273 15.7805 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42 110.666 -110.666 42 555.273 15.7805 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
609.646 65.9194 mo
604.308 65.9194 li
604.308 63.5679 li
609.646 63.5679 li
609.646 65.9194 li
cp
level3{
gsave
clp
[41.9992 110.664 -110.664 41.9992 584.225 4.79398 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.9992 110.664 -110.664 41.9992 584.225 4.79398 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
537.484 128.109 mo
549.122 116.471 li
559.059 116.471 li
551.753 123.777 544.446 131.083 537.14 138.39 cv
515.21 116.465 li
525.845 116.465 li
537.484 128.109 li
cp
590.345 123.124 mo
555.936 123.124 li
562.588 116.471 li
596.997 116.471 li
590.345 123.124 li
cp
483.297 123.124 mo
476.588 116.434 li
511.677 116.434 li
518.346 123.124 li
483.297 123.124 li
cp
455.839 115.217 mo
459.928 119.306 li
462.838 116.402 li
473.259 116.402 li
482.323 125.475 li
520.696 125.475 li
537.14 141.919 li
553.585 125.475 li
591.318 125.475 li
600.322 116.471 li
611.519 116.471 li
614.354 119.306 li
618.442 115.217 li
614.354 111.128 li
611.362 114.12 li
548.148 114.12 li
537.484 124.784 li
526.818 114.083 li
462.845 114.083 li
459.928 111.128 li
455.839 115.217 li
cp
level3{
gsave
clp
[42 110.666 -110.666 42 506.437 34.3147 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42 110.666 -110.666 42 506.437 34.3147 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
548.438 106.901 mo
599.272 106.901 li
599.272 109.252 li
548.438 109.252 li
548.438 106.901 li
cp
level3{
gsave
clp
[42.0001 110.667 -110.667 42.0001 540.898 21.2362 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0001 110.667 -110.667 42.0001 540.898 21.2362 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
542.756 112.601 mo
537.141 118.215 li
531.526 112.601 li
537.141 106.986 li
542.756 112.601 li
cp
level3{
gsave
clp
[41.9999 110.666 -110.666 41.9999 507.305 33.986 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.9999 110.666 -110.666 41.9999 507.305 33.986 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
604.308 106.901 mo
609.647 106.901 li
609.647 109.252 li
604.308 109.252 li
604.308 106.901 li
cp
level3{
gsave
clp
[42.0006 110.668 -110.668 42.0006 569.849 10.2471 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0006 110.668 -110.668 42.0006 569.849 10.2471 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
475.008 106.901 mo
525.844 106.901 li
525.844 109.252 li
475.008 109.252 li
475.008 106.901 li
cp
level3{
gsave
clp
[42.0002 110.667 -110.667 42.0002 476.713 45.5952 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0002 110.667 -110.667 42.0002 476.713 45.5952 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
464.635 106.901 mo
469.974 106.901 li
469.974 109.252 li
464.635 109.252 li
464.635 106.901 li
cp
level3{
gsave
clp
[42.0001 110.667 -110.667 42.0001 447.761 56.583 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0001 110.667 -110.667 42.0001 447.761 56.583 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
486.341 86.084 mo
490.512 86.084 li
492.36 86.084 494.335 85.3848 494.335 83.4253 cv
494.335 81.4429 492.36 80.7373 490.512 80.7373 cv
486.341 80.7373 li
486.341 86.084 li
cp
490.512 86.7627 mo
485.662 86.7627 li
485.662 80.0581 li
490.512 80.0581 li
492.688 80.0581 495.014 80.9429 495.014 83.4253 cv
495.014 85.8862 492.688 86.7627 490.512 86.7627 cv
cp
494.881 98.2754 mo
499.905 98.2754 li
494.28 90.3032 li
494.666 90.1387 li
497.52 88.9199 499.223 86.4111 499.223 83.4253 cv
499.223 79.1567 495.615 75.937 490.832 75.937 cv
481.453 75.937 li
481.453 83.9185 li
478.668 86.7056 li
481.453 89.4917 li
481.453 98.2754 li
485.662 98.2754 li
485.662 90.8838 li
489.671 90.8838 li
494.881 98.2754 li
cp
501.215 98.9541 mo
494.528 98.9541 li
489.318 91.563 li
486.341 91.563 li
486.341 98.9541 li
480.774 98.9541 li
480.774 89.7729 li
477.708 86.7056 li
480.774 83.6372 li
480.774 75.2583 li
490.832 75.2583 li
496.003 75.2583 499.901 78.7695 499.901 83.4253 cv
499.901 86.5557 498.194 89.2065 495.314 90.5898 cv
501.215 98.9541 li
cp
1 1 1 rgb
f
490.513 87.936 mo
484.489 87.936 li
484.489 78.8853 li
490.513 78.8853 li
493.859 78.8853 496.187 80.6309 496.187 83.4253 cv
496.187 86.1904 493.859 87.936 490.513 87.936 cv
cp
498.049 83.4253 mo
498.049 79.7285 494.936 77.1099 490.833 77.1099 cv
482.627 77.1099 li
482.627 84.4053 li
481.86 85.1719 481.093 85.9385 480.326 86.7051 cv
481.093 87.4717 481.86 88.2388 482.627 89.0054 cv
482.627 97.1021 li
484.489 97.1021 li
484.489 89.7114 li
490.279 89.7114 li
495.488 97.1021 li
497.642 97.1021 li
492.345 89.5947 li
495.692 89.041 498.049 86.6553 498.049 83.4253 cv
cp
f
505.146 98.2754 mo
521.432 98.2754 li
521.432 94.1538 li
509.384 94.1538 li
509.384 88.9917 li
520.327 88.9917 li
520.327 84.8413 li
509.384 84.8413 li
509.384 80.0581 li
521.432 80.0581 li
521.432 75.937 li
505.146 75.937 li
505.146 84.1543 li
502.549 86.752 li
505.146 89.3496 li
505.146 98.2754 li
cp
522.11 98.9541 mo
504.468 98.9541 li
504.468 89.6309 li
501.589 86.752 li
504.468 83.8735 li
504.468 75.2583 li
522.11 75.2583 li
522.11 80.7373 li
510.063 80.7373 li
510.063 84.1626 li
521.006 84.1626 li
521.006 89.6709 li
510.063 89.6709 li
510.063 93.4751 li
522.11 93.4751 li
522.11 98.9541 li
cp
f
506.32 84.6392 mo
505.616 85.3433 504.912 86.0474 504.208 86.7515 cv
504.912 87.4556 505.616 88.1597 506.32 88.8638 cv
506.32 97.1021 li
520.259 97.1021 li
520.259 95.3267 li
508.211 95.3267 li
508.211 87.8193 li
519.154 87.8193 li
519.154 86.0146 li
508.211 86.0146 li
508.211 78.8853 li
520.259 78.8853 li
520.259 77.1099 li
506.32 77.1099 li
506.32 84.6392 li
cp
f
533.362 98.2754 mo
537.57 98.2754 li
537.57 89.1338 li
539.952 86.752 li
537.57 84.3691 li
537.57 80.0581 li
544.497 80.0581 li
544.497 75.937 li
526.437 75.937 li
526.437 80.0581 li
533.362 80.0581 li
533.362 84.3691 li
530.98 86.752 li
533.362 89.1338 li
533.362 98.2754 li
cp
538.25 98.9541 mo
532.683 98.9541 li
532.683 89.4146 li
530.021 86.752 li
532.683 84.0879 li
532.683 80.7373 li
525.757 80.7373 li
525.757 75.2583 li
545.176 75.2583 li
545.176 80.7373 li
538.25 80.7373 li
538.25 84.0879 li
540.912 86.752 li
538.25 89.4146 li
538.25 98.9541 li
cp
f
527.609 78.8853 mo
534.535 78.8853 li
534.535 84.8545 li
533.903 85.4868 533.271 86.1191 532.639 86.7515 cv
533.271 87.3838 533.903 88.0161 534.535 88.6484 cv
534.535 97.1021 li
536.397 97.1021 li
536.397 88.6484 li
537.03 88.0161 537.662 87.3838 538.295 86.7515 cv
537.662 86.1191 537.03 85.4868 536.397 84.8545 cv
536.397 78.8853 li
543.323 78.8853 li
543.323 77.1099 li
527.609 77.1099 li
527.609 78.8853 li
cp
f
553.233 86.084 mo
557.405 86.084 li
559.253 86.084 561.227 85.3848 561.227 83.4253 cv
561.227 81.4429 559.253 80.7373 557.405 80.7373 cv
553.233 80.7373 li
553.233 86.084 li
cp
557.405 86.7627 mo
552.555 86.7627 li
552.555 80.0581 li
557.405 80.0581 li
559.581 80.0581 561.906 80.9429 561.906 83.4253 cv
561.906 85.8862 559.581 86.7627 557.405 86.7627 cv
cp
561.773 98.2754 mo
566.798 98.2754 li
561.173 90.3032 li
561.559 90.1387 li
564.412 88.9199 566.114 86.4111 566.114 83.4253 cv
566.114 79.1567 562.508 75.937 557.725 75.937 cv
548.346 75.937 li
548.346 84.0459 li
545.641 86.752 li
548.346 89.457 li
548.346 98.2754 li
552.555 98.2754 li
552.555 90.8838 li
556.563 90.8838 li
561.773 98.2754 li
cp
568.107 98.9541 mo
561.421 98.9541 li
556.211 91.563 li
553.233 91.563 li
553.233 98.9541 li
547.667 98.9541 li
547.667 89.7383 li
544.681 86.752 li
547.667 83.7646 li
547.667 75.2583 li
557.725 75.2583 li
562.896 75.2583 566.794 78.7695 566.794 83.4253 cv
566.794 86.5557 565.087 89.2065 562.207 90.5898 cv
568.107 98.9541 li
cp
f
557.405 87.936 mo
551.382 87.936 li
551.382 78.8853 li
557.405 78.8853 li
560.752 78.8853 563.079 80.6309 563.079 83.4253 cv
563.079 86.1904 560.752 87.936 557.405 87.936 cv
cp
564.941 83.4253 mo
564.941 79.7285 561.828 77.1099 557.726 77.1099 cv
549.52 77.1099 li
549.52 84.5313 li
548.779 85.2715 548.039 86.0112 547.299 86.7515 cv
548.039 87.4917 548.779 88.2319 549.52 88.9717 cv
549.52 97.1021 li
551.382 97.1021 li
551.382 89.7114 li
557.172 89.7114 li
562.381 97.1021 li
564.534 97.1021 li
559.237 89.5947 li
562.585 89.041 564.941 86.6553 564.941 83.4253 cv
cp
f
576.036 89.021 mo
576.877 91.876 579.404 93.853 582.246 93.853 cv
585.063 93.853 587.576 91.8877 588.42 89.0513 cv
586.076 86.7085 li
588.217 84.5669 li
587.204 82.0405 584.83 80.3594 582.246 80.3594 cv
579.639 80.3594 577.251 82.0527 576.237 84.5947 cv
578.35 86.707 li
576.036 89.021 li
cp
582.246 94.5317 mo
579.034 94.5317 576.189 92.2603 575.328 89.0088 cv
575.277 88.8193 li
577.39 86.707 li
575.45 84.7671 li
575.522 84.564 li
576.585 81.6431 579.286 79.6802 582.246 79.6802 cv
585.182 79.6802 587.868 81.6309 588.931 84.5337 cv
589.006 84.7363 li
587.037 86.7085 li
589.18 88.8496 li
589.128 89.0396 li
588.262 92.2734 585.433 94.5317 582.246 94.5317 cv
cp
568.811 86.707 mo
570.982 88.8789 li
571 88.9849 li
571.942 94.48 576.777 98.6255 582.246 98.6255 cv
587.734 98.6255 592.563 94.459 593.476 88.9346 cv
593.494 88.8271 li
595.613 86.7085 li
593.308 84.3984 li
593.285 84.3081 li
591.986 79.1738 587.448 75.5884 582.246 75.5884 cv
577.073 75.5884 572.531 79.1499 571.203 84.25 cv
571.179 84.3389 li
568.811 86.707 li
cp
582.246 99.3042 mo
576.487 99.3042 571.393 94.9707 570.35 89.2065 cv
567.851 86.707 li
570.568 83.9888 li
572.006 78.6382 576.795 74.9092 582.246 74.9092 cv
587.728 74.9092 592.515 78.6636 593.92 84.0508 cv
596.573 86.7085 li
594.128 89.1533 li
593.115 94.9482 588.027 99.3042 582.246 99.3042 cv
cp
f
582.246 95.7051 mo
578.147 95.7051 574.651 92.5005 574.009 88.4292 cv
574.583 87.855 575.157 87.2808 575.731 86.7065 cv
575.2 86.1748 574.669 85.6436 574.137 85.1118 cv
575.031 81.3755 578.369 78.5068 582.246 78.5068 cv
586.112 78.5068 589.421 81.3594 590.32 85.0801 cv
589.777 85.6226 589.235 86.1646 588.693 86.7065 cv
589.279 87.292 589.864 87.8774 590.449 88.4629 cv
589.798 92.5181 586.334 95.7051 582.246 95.7051 cv
cp
593.956 86.7065 mo
593.384 86.1338 592.811 85.561 592.238 84.9883 cv
591.252 80.3472 587.093 76.7612 582.246 76.7612 cv
577.444 76.7612 573.263 80.3184 572.244 84.9316 cv
571.652 85.5234 571.061 86.1152 570.469 86.7065 cv
571.009 87.2461 571.548 87.7861 572.088 88.3257 cv
572.717 93.3848 577.128 97.4521 582.246 97.4521 cv
587.407 97.4521 591.785 93.3599 592.385 88.2778 cv
592.909 87.7539 593.433 87.2305 593.956 86.7065 cv
cp
f
333.875 350.101 mo
332.435 348.66 li
344.257 336.837 li
410.067 336.837 li
410.067 338.874 li
345.101 338.874 li
333.875 350.101 li
cp
level3{
gsave
clp
[30.4999 81.9998 -81.9998 30.4999 357.13 304.783 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4999 81.9998 -81.9998 30.4999 357.13 304.783 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
328.202 350.101 mo
326.762 348.66 li
338.286 337.136 li
339.727 338.576 li
328.202 350.101 li
cp
level3{
gsave
clp
[30.5001 82.0004 -82.0004 30.5001 323.458 317.307 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.5001 82.0004 -82.0004 30.5001 323.458 317.307 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
316.126 350.101 mo
304.9 338.874 li
239.933 338.874 li
239.933 336.837 li
305.743 336.837 li
317.566 348.66 li
316.126 350.101 li
cp
level3{
gsave
clp
[30.4999 81.9999 -81.9999 30.4999 275.537 335.131 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4999 81.9999 -81.9999 30.4999 275.537 335.131 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
321.8 350.101 mo
310.274 338.576 li
311.714 337.136 li
323.24 348.66 li
321.8 350.101 li
cp
level3{
gsave
clp
[30.4999 81.9999 -81.9999 30.4999 308.974 322.694 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4999 81.9999 -81.9999 30.4999 308.974 322.694 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
316.812 338.381 mo
319.551 341.119 322.289 343.857 325.028 346.597 cv
327.767 343.857 330.505 341.119 333.243 338.381 cv
327.767 338.381 322.289 338.381 316.812 338.381 cv
cp
level3{
gsave
clp
[30.4998 81.9997 -81.9997 30.4998 317.951 319.355 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4998 81.9997 -81.9997 30.4998 317.951 319.355 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
328.331 328.729 mo
327.295 325.639 326.259 322.548 325.223 319.456 cv
324.164 322.628 323.105 325.799 322.046 328.97 cv
319.573 327.569 317.1 326.169 314.627 324.769 cv
316.355 328.407 318.083 332.046 319.811 335.686 cv
323.188 335.671 326.565 335.656 329.943 335.643 cv
331.753 332.018 333.563 328.393 335.374 324.769 cv
333.026 326.089 330.679 327.409 328.331 328.729 cv
cp
level3{
gsave
clp
[30.5 82.0002 -82.0002 30.5 322.375 317.709 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.5 82.0002 -82.0002 30.5 322.375 317.709 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
404.253 341.341 mo
403.329 341.341 402.539 341.881 402.159 342.658 cv
344.621 342.658 li
338.879 348.4 li
340.319 349.84 li
345.464 344.695 li
402.159 344.695 li
402.539 345.473 403.329 346.013 404.253 346.013 cv
405.543 346.013 406.589 344.967 406.589 343.677 cv
406.589 342.387 405.543 341.341 404.253 341.341 cv
cp
level3{
gsave
clp
[30.4998 81.9997 -81.9997 30.4998 357.426 304.672 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4998 81.9997 -81.9997 30.4998 357.426 304.672 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
305.186 342.658 mo
247.647 342.658 li
247.268 341.881 246.477 341.341 245.554 341.341 cv
244.264 341.341 243.218 342.387 243.218 343.677 cv
243.218 344.967 244.264 346.013 245.554 346.013 cv
246.477 346.013 247.268 345.473 247.647 344.695 cv
304.343 344.695 li
309.488 349.84 li
310.928 348.4 li
305.186 342.658 li
cp
level3{
gsave
clp
[30.4998 81.9997 -81.9997 30.4998 273.253 335.98 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4998 81.9997 -81.9997 30.4998 273.253 335.98 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
388.29 391.976 mo
261.71 391.976 li
261.71 389.939 li
388.29 389.939 li
388.29 391.976 li
cp
level3{
gsave
clp
[30.4999 81.9999 -81.9999 30.4999 300.748 325.754 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4999 81.9999 -81.9999 30.4999 300.748 325.754 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
366.552 402.257 mo
283.45 402.257 li
283.45 400.22 li
366.552 400.22 li
366.552 402.257 li
cp
level3{
gsave
clp
[30.4998 81.9997 -81.9997 30.4998 297.389 327.003 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4998 81.9997 -81.9997 30.4998 297.389 327.003 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
377.046 393.763 mo
376.123 393.763 375.332 394.303 374.953 395.08 cv
275.048 395.08 li
274.668 394.303 273.878 393.763 272.955 393.763 cv
271.665 393.763 270.619 394.809 270.619 396.099 cv
270.619 397.389 271.665 398.435 272.955 398.435 cv
273.878 398.435 274.668 397.895 275.048 397.117 cv
374.953 397.117 li
375.332 397.895 376.123 398.435 377.046 398.435 cv
378.336 398.435 379.382 397.389 379.382 396.099 cv
379.382 394.809 378.336 393.763 377.046 393.763 cv
cp
level3{
gsave
clp
[30.4998 81.9997 -81.9997 30.4998 299.068 326.379 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.4998 81.9997 -81.9997 30.4998 299.068 326.379 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
246.018 367.732 mo
250.252 367.732 li
252.129 367.732 254.134 367.022 254.134 365.031 cv
254.134 363.017 252.129 362.3 250.252 362.3 cv
246.018 362.3 li
246.018 367.732 li
cp
250.252 368.411 mo
245.339 368.411 li
245.339 361.62 li
250.252 361.62 li
252.457 361.62 254.813 362.517 254.813 365.031 cv
254.813 367.522 252.457 368.411 250.252 368.411 cv
cp
241.062 380.095 mo
245.339 380.095 li
245.339 372.601 li
250.577 372.601 li
255.43 372.601 259.089 369.346 259.089 365.031 cv
259.089 360.699 255.43 357.433 250.577 357.433 cv
241.062 357.433 li
241.062 365.464 li
238.246 368.278 li
241.062 371.093 li
241.062 380.095 li
cp
246.018 380.773 mo
240.383 380.773 li
240.383 371.373 li
237.286 368.278 li
240.383 365.183 li
240.383 356.754 li
250.577 356.754 li
255.817 356.754 259.769 360.312 259.769 365.031 cv
259.769 369.733 255.817 373.279 250.577 373.279 cv
246.018 373.279 li
246.018 380.773 li
cp
1 1 1 rgb
f
250.252 369.605 mo
244.145 369.605 li
244.145 360.427 li
250.252 360.427 li
253.646 360.427 256.007 362.197 256.007 365.031 cv
256.007 367.835 253.646 369.605 250.252 369.605 cv
cp
250.578 358.627 mo
242.256 358.627 li
242.256 365.958 li
241.483 366.731 240.709 367.505 239.936 368.278 cv
240.709 369.052 241.483 369.825 242.256 370.598 cv
242.256 378.9 li
244.145 378.9 li
244.145 371.405 li
250.578 371.405 li
254.738 371.405 257.896 368.778 257.896 365.031 cv
257.896 361.282 254.738 358.627 250.578 358.627 cv
cp
f
271.009 367.732 mo
275.243 367.732 li
277.12 367.732 279.125 367.022 279.125 365.031 cv
279.125 363.017 277.12 362.3 275.243 362.3 cv
271.009 362.3 li
271.009 367.732 li
cp
275.243 368.411 mo
270.33 368.411 li
270.33 361.62 li
275.243 361.62 li
277.448 361.62 279.803 362.517 279.803 365.031 cv
279.803 367.522 277.448 368.411 275.243 368.411 cv
cp
279.671 380.095 mo
284.777 380.095 li
279.071 372.007 li
279.458 371.843 li
282.354 370.607 284.081 368.062 284.081 365.031 cv
284.081 360.699 280.421 357.433 275.569 357.433 cv
266.053 357.433 li
266.053 365.605 li
263.3 368.359 li
266.053 371.107 li
266.053 380.095 li
270.33 380.095 li
270.33 372.601 li
274.388 372.601 li
279.671 380.095 li
cp
286.087 380.773 mo
279.318 380.773 li
274.035 373.279 li
271.009 373.279 li
271.009 380.773 li
265.375 380.773 li
265.375 371.388 li
262.34 368.359 li
265.375 365.324 li
265.375 356.754 li
275.569 356.754 li
280.809 356.754 284.76 360.312 284.76 365.031 cv
284.76 368.206 283.028 370.893 280.106 372.294 cv
286.087 380.773 li
cp
f
275.244 369.605 mo
269.136 369.605 li
269.136 360.427 li
275.244 360.427 li
278.638 360.427 280.998 362.197 280.998 365.031 cv
280.998 367.835 278.638 369.605 275.244 369.605 cv
cp
282.887 365.031 mo
282.887 361.282 279.729 358.627 275.569 358.627 cv
267.248 358.627 li
267.248 366.101 li
266.495 366.853 265.743 367.604 264.991 368.356 cv
265.743 369.109 266.495 369.861 267.248 370.613 cv
267.248 378.9 li
269.136 378.9 li
269.136 371.405 li
275.007 371.405 li
280.29 378.9 li
282.474 378.9 li
277.103 371.287 li
280.497 370.726 282.887 368.307 282.887 365.031 cv
cp
f
291.612 380.095 mo
308.135 380.095 li
308.135 375.906 li
295.917 375.906 li
295.917 370.682 li
307.015 370.682 li
307.015 366.462 li
295.917 366.462 li
295.917 361.62 li
308.135 361.62 li
308.135 357.433 li
291.612 357.433 li
291.612 365.768 li
288.976 368.404 li
291.612 371.041 li
291.612 380.095 li
cp
308.814 380.773 mo
290.933 380.773 li
290.933 371.322 li
288.016 368.404 li
290.933 365.486 li
290.933 356.754 li
308.814 356.754 li
308.814 362.3 li
296.596 362.3 li
296.596 365.783 li
307.693 365.783 li
307.693 371.36 li
296.596 371.36 li
296.596 375.227 li
308.814 375.227 li
308.814 380.773 li
cp
f
292.806 366.262 mo
292.092 366.977 291.378 367.69 290.665 368.404 cv
291.378 369.118 292.092 369.832 292.806 370.546 cv
292.806 378.9 li
306.94 378.9 li
306.94 377.1 li
294.724 377.1 li
294.724 369.486 li
305.82 369.486 li
305.82 367.656 li
294.724 367.656 li
294.724 360.427 li
306.94 360.427 li
306.94 358.627 li
292.806 358.627 li
292.806 366.262 li
cp
f
333.135 380.095 mo
337.411 380.095 li
337.411 370.989 li
340.042 368.358 li
337.411 365.726 li
337.411 357.433 li
333.612 357.433 li
326.596 370.604 li
319.582 357.433 li
315.781 357.433 li
315.781 365.726 li
313.151 368.358 li
315.781 370.989 li
315.781 380.095 li
320.059 380.095 li
320.059 367.425 li
326.596 379.701 li
333.135 367.423 li
333.135 380.095 li
cp
326.596 381.146 mo
320.738 370.143 li
320.738 380.773 li
315.102 380.773 li
315.102 371.271 li
312.191 368.358 li
315.102 365.444 li
315.102 356.754 li
319.99 356.754 li
326.596 369.159 li
333.203 356.754 li
338.09 356.754 li
338.09 365.444 li
341.002 368.358 li
338.09 371.271 li
338.09 380.773 li
332.456 380.773 li
332.456 370.142 li
326.596 381.146 li
cp
f
336.217 366.22 mo
336.217 358.627 li
334.328 358.627 li
326.596 373.146 li
318.864 358.627 li
316.976 358.627 li
316.976 366.22 li
316.263 366.933 315.55 367.646 314.838 368.357 cv
315.55 369.07 316.263 369.783 316.976 370.495 cv
316.976 378.9 li
318.864 378.9 li
318.864 362.641 li
326.596 377.16 li
334.328 362.641 li
334.328 378.9 li
336.217 378.9 li
336.217 370.495 li
336.93 369.783 337.643 369.07 338.354 368.357 cv
337.643 367.646 336.93 366.933 336.217 366.22 cv
cp
f
346.446 380.095 mo
350.723 380.095 li
350.723 370.623 li
352.942 368.406 li
350.723 366.184 li
350.723 357.433 li
346.446 357.433 li
346.446 366.184 li
344.226 368.406 li
346.446 370.623 li
346.446 380.095 li
cp
351.402 380.773 mo
345.768 380.773 li
345.768 370.904 li
343.266 368.406 li
345.768 365.902 li
345.768 356.754 li
351.402 356.754 li
351.402 365.902 li
353.902 368.406 li
351.402 370.904 li
351.402 380.773 li
cp
f
349.529 366.679 mo
349.529 358.627 li
347.641 358.627 li
347.641 366.679 li
347.065 367.254 346.491 367.828 345.916 368.403 cv
346.491 368.978 347.065 369.553 347.641 370.127 cv
347.641 378.9 li
349.529 378.9 li
349.529 370.127 li
350.104 369.553 350.679 368.978 351.253 368.403 cv
350.679 367.828 350.104 367.254 349.529 366.679 cv
cp
f
357.296 368.358 mo
359.529 370.591 li
359.529 370.73 li
359.545 376.362 363.521 380.449 368.986 380.449 cv
374.449 380.449 378.427 376.362 378.443 370.73 cv
378.443 370.591 li
380.677 368.358 li
378.443 366.124 li
378.443 357.433 li
374.166 357.433 li
374.166 366.154 li
371.959 368.355 li
374.166 370.562 li
374.166 370.702 li
374.163 374.01 372.033 376.319 368.986 376.319 cv
365.94 376.319 363.81 374.01 363.806 370.702 cv
363.806 370.562 li
366.012 368.355 li
363.806 366.154 li
363.806 357.433 li
359.529 357.433 li
359.529 366.124 li
357.296 368.358 li
cp
368.986 381.128 mo
363.176 381.128 358.934 376.823 358.852 370.874 cv
356.336 368.358 li
358.851 365.843 li
358.851 356.754 li
364.484 356.754 li
364.484 365.873 li
366.972 368.355 li
364.485 370.842 li
364.548 373.674 366.382 375.641 368.986 375.641 cv
371.591 375.641 373.425 373.674 373.485 370.842 cv
370.999 368.355 li
373.486 365.873 li
373.486 356.754 li
379.122 356.754 li
379.122 365.843 li
381.637 368.358 li
379.121 370.874 li
379.037 376.823 374.796 381.128 368.986 381.128 cv
cp
f
377.249 366.619 mo
377.249 358.627 li
375.36 358.627 li
375.36 366.647 li
374.79 367.218 374.221 367.788 373.65 368.357 cv
374.221 368.928 374.79 369.497 375.36 370.067 cv
375.36 370.697 li
375.36 374.681 372.705 377.514 368.986 377.514 cv
365.269 377.514 362.611 374.681 362.611 370.697 cv
362.611 370.067 li
363.182 369.497 363.752 368.928 364.321 368.357 cv
363.752 367.788 363.182 367.218 362.611 366.647 cv
362.611 358.627 li
360.723 358.627 li
360.723 366.619 li
360.144 367.199 359.564 367.778 358.984 368.357 cv
359.564 368.938 360.144 369.517 360.723 370.096 cv
360.723 370.697 li
360.723 375.713 364.146 379.255 368.986 379.255 cv
373.827 379.255 377.249 375.713 377.249 370.697 cv
377.249 370.096 li
377.828 369.517 378.408 368.938 378.987 368.357 cv
378.408 367.778 377.828 367.199 377.249 366.619 cv
cp
f
404.848 380.095 mo
409.125 380.095 li
409.125 370.989 li
411.755 368.358 li
409.125 365.726 li
409.125 357.433 li
405.324 357.433 li
398.309 370.604 li
391.294 357.433 li
387.495 357.433 li
387.495 365.726 li
384.864 368.358 li
387.495 370.989 li
387.495 380.095 li
391.771 380.095 li
391.771 367.425 li
398.309 379.701 li
404.848 367.423 li
404.848 380.095 li
cp
398.309 381.146 mo
392.45 370.143 li
392.45 380.773 li
386.816 380.773 li
386.816 371.271 li
383.904 368.358 li
386.816 365.444 li
386.816 356.754 li
391.702 356.754 li
398.309 369.159 li
404.916 356.754 li
409.804 356.754 li
409.804 365.444 li
412.715 368.358 li
409.804 371.271 li
409.804 380.773 li
404.168 380.773 li
404.168 370.142 li
398.309 381.146 li
cp
f
410.068 368.357 mo
409.355 367.646 408.643 366.933 407.931 366.22 cv
407.931 358.627 li
406.042 358.627 li
398.309 373.146 li
390.577 358.627 li
388.688 358.627 li
388.688 366.22 li
387.977 366.933 387.264 367.646 386.551 368.357 cv
387.264 369.07 387.977 369.783 388.688 370.495 cv
388.688 378.9 li
390.577 378.9 li
390.577 362.641 li
398.309 377.16 li
406.042 362.641 li
406.042 378.9 li
407.931 378.9 li
407.931 370.495 li
408.643 369.783 409.355 369.07 410.068 368.357 cv
cp
f
317.69 41.6714 mo
316.682 37.9082 li
318.65 37.3828 li
319.658 41.146 li
317.69 41.6714 li
cp
level3{
gsave
clp
[47.3341 100.001 -100.001 47.3341 308.442 18.9747 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3341 100.001 -100.001 47.3341 308.442 18.9747 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
306.664 48.6475 mo
303.91 45.8921 li
305.35 44.4521 li
308.104 47.2075 li
306.664 48.6475 li
cp
level3{
gsave
clp
[47.3332 99.9994 -99.9994 47.3332 295.79 24.9639 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3332 99.9994 -99.9994 47.3332 295.79 24.9639 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
300.603 60.2012 mo
296.841 59.1934 li
297.366 57.2256 li
301.13 58.2334 li
300.603 60.2012 li
cp
level3{
gsave
clp
[47.3334 99.9999 -99.9999 47.3334 285.35 29.9051 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3334 99.9999 -99.9999 47.3334 285.35 29.9051 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
349.782 60.2012 mo
349.254 58.2334 li
353.019 57.2256 li
353.544 59.1934 li
349.782 60.2012 li
cp
level3{
gsave
clp
[47.333 99.9992 -99.9992 47.333 328.171 9.63706 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.333 99.9992 -99.9992 47.333 328.171 9.63706 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
343.72 48.6475 mo
342.279 47.2075 li
345.035 44.4521 li
346.475 45.8921 li
343.72 48.6475 li
cp
level3{
gsave
clp
[47.333 99.9991 -99.9991 47.333 327.137 10.1265 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.333 99.9991 -99.9991 47.333 327.137 10.1265 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
332.928 64.7173 mo
345.317 61.397 li
344.79 59.4292 li
332.401 62.7495 li
350.886 52.0767 li
349.867 50.313 li
331.381 60.9868 li
340.452 51.915 li
339.013 50.4746 li
329.941 59.5459 li
340.614 41.0601 li
338.851 40.0415 li
328.178 58.5278 li
331.498 46.1372 li
329.53 45.6094 li
326.211 57.9985 li
326.211 36.6548 li
324.174 36.6548 li
324.174 58 li
320.854 45.6094 li
318.886 46.1372 li
322.206 58.5269 li
311.533 40.0415 li
309.77 41.0601 li
320.443 59.5464 li
311.372 50.4746 li
309.931 51.915 li
319.003 60.9863 li
300.517 50.313 li
299.498 52.0767 li
317.983 62.7495 li
305.594 59.4292 li
305.066 61.397 li
317.457 64.7173 li
296.111 64.7173 li
296.111 66.7544 li
354.272 66.7544 li
354.272 64.7173 li
332.928 64.7173 li
cp
level3{
gsave
clp
[47.3334 100 -100 47.3334 305.104 20.5547 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3334 100 -100 47.3334 305.104 20.5547 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
332.693 41.6724 mo
330.726 41.145 li
331.735 37.3818 li
333.703 37.9092 li
332.693 41.6724 li
cp
level3{
gsave
clp
[47.3333 99.9996 -99.9996 47.3333 319.916 13.5441 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3333 99.9996 -99.9996 47.3333 319.916 13.5441 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.25 61.291 mo
362.629 61.291 li
362.506 60.4131 li
359.918 41.8252 343.793 27.8091 324.995 27.8091 cv
306.197 27.8091 290.071 41.8252 287.484 60.4131 cv
287.361 61.291 li
255.134 61.291 li
255.134 59.2544 li
285.599 59.2544 li
288.704 40.1055 305.484 25.7725 324.995 25.7725 cv
344.506 25.7725 361.285 40.1055 364.391 59.2544 cv
395.25 59.2544 li
395.25 61.291 li
cp
level3{
gsave
clp
[47.3333 99.9998 -99.9998 47.3333 306.156 20.0567 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3333 99.9998 -99.9998 47.3333 306.156 20.0567 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
399.736 62.6968 mo
398.443 62.6968 397.364 63.5635 397.017 64.7441 cv
359.999 64.7441 li
359.458 46.0195 344.057 30.9531 325.203 30.9531 cv
306.35 30.9531 290.948 46.0195 290.407 64.7441 cv
252.896 64.7441 li
252.485 63.6763 251.457 62.9155 250.245 62.9155 cv
248.672 62.9155 247.397 64.1904 247.397 65.7632 cv
247.397 67.3354 248.672 68.6104 250.245 68.6104 cv
251.458 68.6104 252.486 67.8491 252.896 66.7808 cv
292.429 66.7808 li
292.429 65.7622 li
292.429 47.6914 307.132 32.9897 325.203 32.9897 cv
343.274 32.9897 357.977 47.6914 357.977 65.7622 cv
357.977 66.7808 li
397.182 66.7808 li
397.644 67.731 398.608 68.3916 399.736 68.3916 cv
401.309 68.3916 402.583 67.1167 402.583 65.5439 cv
402.583 63.9717 401.309 62.6968 399.736 62.6968 cv
cp
level3{
gsave
clp
[47.3336 100 -100 47.3336 303.911 21.1195 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3336 100 -100 47.3336 303.911 21.1195 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.25 109.42 mo
255.134 109.42 li
255.134 107.383 li
395.25 107.383 li
395.25 109.42 li
cp
level3{
gsave
clp
[47.3325 99.998 -99.998 47.3325 287.546 28.8673 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3325 99.998 -99.998 47.3325 287.546 28.8673 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
399.938 110.687 mo
398.685 110.687 397.632 111.501 397.252 112.626 cv
253.092 112.626 li
253.092 112.716 li
252.676 111.658 251.652 110.906 250.446 110.906 cv
248.874 110.906 247.599 112.181 247.599 113.753 cv
247.599 115.326 248.874 116.601 250.446 116.601 cv
251.7 116.601 252.751 115.787 253.132 114.663 cv
397.325 114.663 li
397.762 115.673 398.767 116.382 399.938 116.382 cv
401.51 116.382 402.785 115.107 402.785 113.535 cv
402.785 111.962 401.51 110.687 399.938 110.687 cv
cp
level3{
gsave
clp
[47.3336 100 -100 47.3336 285.518 29.8255 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3336 100 -100 47.3336 285.518 29.8255 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.25 120.385 mo
255.134 120.385 li
255.134 118.349 li
395.25 118.349 li
395.25 120.385 li
cp
level3{
gsave
clp
[47.3335 100 -100 47.3335 283.305 30.8728 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.3335 100 -100 47.3335 283.305 30.8728 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
320.607 98.9238 mo
324.99 98.9238 li
324.99 89.4478 li
327.464 86.9761 li
324.99 84.5029 li
324.99 80.0557 li
332.163 80.0557 li
332.163 75.7622 li
313.433 75.7622 li
313.433 80.0557 li
320.607 80.0557 li
320.607 84.5029 li
318.134 86.9761 li
320.607 89.4478 li
320.607 98.9238 li
cp
325.668 99.6025 mo
319.928 99.6025 li
319.928 89.729 li
317.174 86.9761 li
319.928 84.2222 li
319.928 80.7344 li
312.754 80.7344 li
312.754 75.083 li
332.843 75.083 li
332.843 80.7344 li
325.668 80.7344 li
325.668 84.2222 li
328.424 86.9761 li
325.668 89.729 li
325.668 99.6025 li
cp
1 1 1 rgb
f
314.661 78.8281 mo
321.834 78.8281 li
321.834 85.0107 li
321.18 85.666 320.524 86.3208 319.87 86.9756 cv
320.524 87.6304 321.18 88.2852 321.834 88.9404 cv
321.834 97.6963 li
323.763 97.6963 li
323.763 88.9404 li
324.418 88.2852 325.073 87.6304 325.728 86.9756 cv
325.073 86.3208 324.418 85.666 323.763 85.0107 cv
323.763 78.8281 li
330.937 78.8281 li
330.937 76.9893 li
314.661 76.9893 li
314.661 78.8281 li
cp
f
358.919 86.9736 mo
361.289 89.3442 li
361.31 89.4478 li
362.352 95.0557 367.351 99.2842 372.936 99.2842 cv
376.192 99.2842 379.593 97.9502 381.809 95.8037 cv
382.181 95.4414 li
382.181 85.7681 li
371.438 85.7681 li
371.438 90.062 li
377.797 90.062 li
377.797 93.5239 li
377.642 93.6235 li
376.26 94.5132 374.544 95.0225 372.936 95.0225 cv
369.6 95.0225 366.654 92.6606 365.775 89.2783 cv
365.727 89.0913 li
367.843 86.9761 li
365.879 85.0122 li
365.947 84.8105 li
367.017 81.7319 369.825 79.6631 372.936 79.6631 cv
375.087 79.6631 377.369 80.5728 378.753 81.9795 cv
379.628 82.8706 li
382.687 79.7451 li
381.813 78.8872 li
379.628 76.7378 376.227 75.4014 372.936 75.4014 cv
367.6 75.4014 362.897 79.0732 361.502 84.3306 cv
361.479 84.418 li
358.919 86.9736 li
cp
372.936 99.9634 mo
367.063 99.9634 361.806 95.5488 360.661 89.6758 cv
357.958 86.9736 li
360.87 84.0669 li
362.374 78.5601 367.323 74.7222 372.936 74.7222 cv
376.398 74.7222 379.982 76.1333 382.291 78.4048 cv
383.644 79.7373 li
379.628 83.8413 li
378.268 82.4546 li
377.007 81.1709 374.913 80.3418 372.936 80.3418 cv
370.181 80.3418 367.685 82.1387 366.661 84.8345 cv
368.803 86.9761 li
366.483 89.2939 li
367.343 92.2764 369.97 94.3433 372.936 94.3433 cv
374.336 94.3433 375.885 93.8994 377.118 93.1499 cv
377.118 90.7407 li
370.759 90.7407 li
370.759 85.0894 li
382.859 85.0894 li
382.859 95.728 li
382.28 96.2915 li
379.944 98.5562 376.362 99.9634 372.936 99.9634 cv
cp
f
372.937 78.4365 mo
375.378 78.4365 378 79.4614 379.628 81.1182 cv
380.954 79.7627 li
378.994 77.8335 375.859 76.6284 372.937 76.6284 cv
367.979 76.6284 363.663 80.2866 362.589 85.042 cv
361.944 85.6865 361.3 86.3311 360.655 86.9756 cv
361.25 87.5698 361.845 88.1646 362.438 88.7588 cv
363.159 93.9272 367.687 98.0571 372.937 98.0571 cv
375.859 98.0571 378.994 96.8228 380.954 94.9229 cv
380.954 86.9956 li
372.666 86.9956 li
372.666 88.834 li
379.024 88.834 li
379.024 94.1396 li
377.366 95.4658 375.076 96.249 372.937 96.249 cv
368.68 96.249 365.053 92.9121 364.4 88.6816 cv
364.969 88.1133 365.537 87.5444 366.106 86.9756 cv
365.574 86.4438 365.043 85.9116 364.511 85.3799 cv
365.399 81.4595 368.885 78.4365 372.937 78.4365 cv
cp
f
389.298 98.9238 mo
406.188 98.9238 li
406.188 94.6299 li
393.711 94.6299 li
393.711 89.3086 li
405.044 89.3086 li
405.044 84.9858 li
393.711 84.9858 li
393.711 80.0557 li
406.188 80.0557 li
406.188 75.7622 li
389.298 75.7622 li
389.298 84.2803 li
386.602 86.9761 li
389.298 89.6704 li
389.298 98.9238 li
cp
406.867 99.6025 mo
388.619 99.6025 li
388.619 89.9517 li
385.642 86.9761 li
388.619 83.999 li
388.619 75.083 li
406.867 75.083 li
406.867 80.7344 li
394.39 80.7344 li
394.39 84.3066 li
405.723 84.3066 li
405.723 89.9873 li
394.39 89.9873 li
394.39 93.9512 li
406.867 93.9512 li
406.867 99.6025 li
cp
f
404.962 78.8281 mo
404.962 76.9893 li
390.525 76.9893 li
390.525 84.7881 li
389.797 85.5171 389.067 86.2466 388.338 86.9756 cv
389.067 87.7046 389.797 88.4341 390.525 89.1631 cv
390.525 97.6963 li
404.962 97.6963 li
404.962 95.8574 li
392.483 95.8574 li
392.483 88.0815 li
403.817 88.0815 li
403.817 86.2124 li
392.483 86.2124 li
392.483 78.8281 li
404.962 78.8281 li
cp
f
274.573 98.9238 mo
278.957 98.9238 li
278.957 89.2451 li
281.222 86.9761 li
278.957 84.7075 li
278.957 75.7622 li
274.573 75.7622 li
274.573 84.7075 li
272.304 86.9761 li
274.573 89.2451 li
274.573 98.9238 li
cp
279.636 99.6025 mo
273.894 99.6025 li
273.894 89.5259 li
271.344 86.9761 li
273.894 84.4263 li
273.894 75.083 li
279.636 75.083 li
279.636 84.4263 li
282.182 86.9761 li
279.636 89.5259 li
279.636 99.6025 li
cp
f
277.729 85.2148 mo
277.729 76.9893 li
275.801 76.9893 li
275.801 85.2148 li
275.213 85.8018 274.626 86.3887 274.04 86.9756 cv
274.626 87.5625 275.213 88.1494 275.801 88.7363 cv
275.801 97.6963 li
277.729 97.6963 li
277.729 88.7363 li
278.316 88.1494 278.904 87.5625 279.491 86.9756 cv
278.904 86.3887 278.316 85.8018 277.729 85.2148 cv
cp
f
303.913 98.9238 mo
307.68 98.9238 li
307.68 89.4834 li
310.185 86.9761 li
307.68 84.4688 li
307.68 75.7622 li
303.296 75.7622 li
303.296 90.8984 li
291.872 75.7622 li
288.105 75.7622 li
288.105 84.5029 li
285.635 86.9761 li
288.105 89.4478 li
288.105 98.9238 li
292.489 98.9238 li
292.489 83.7871 li
303.913 98.9238 li
cp
308.358 99.6025 mo
303.573 99.6025 li
293.167 85.813 li
293.167 99.6025 li
287.426 99.6025 li
287.426 89.729 li
284.675 86.9761 li
287.426 84.2222 li
287.426 75.083 li
292.212 75.083 li
302.617 88.8721 li
302.617 75.083 li
308.358 75.083 li
308.358 84.1875 li
311.145 86.9761 li
308.358 89.7646 li
308.358 99.6025 li
cp
f
306.453 84.9761 mo
306.453 76.9893 li
304.523 76.9893 li
304.523 94.5615 li
291.262 76.9893 li
289.333 76.9893 li
289.333 85.0117 li
288.678 85.6665 288.024 86.3208 287.369 86.9756 cv
288.024 87.6299 288.678 88.2847 289.333 88.939 cv
289.333 97.6963 li
291.262 97.6963 li
291.262 80.1235 li
304.523 97.6963 li
306.453 97.6963 li
306.453 88.9751 li
307.119 88.3086 307.786 87.6421 308.452 86.9756 cv
307.786 86.3091 307.119 85.6426 306.453 84.9761 cv
cp
f
254.392 98.9224 mo
258.09 98.9224 li
262.203 89.5952 li
266.888 87.3755 li
264.284 84.8745 li
268.306 75.7578 li
263.523 75.7578 li
256.241 92.2725 li
248.957 75.7578 li
244.175 75.7578 li
248.211 84.8984 li
245.632 87.3765 li
250.267 89.5713 li
254.392 98.9224 li
cp
258.533 99.6011 mo
253.949 99.6011 li
249.749 90.0776 li
244.453 87.5703 li
247.399 84.7393 li
243.133 75.0791 li
249.4 75.0791 li
256.241 90.5884 li
263.08 75.0791 li
269.346 75.0791 li
265.097 84.7124 li
268.068 87.5664 li
262.722 90.1001 li
258.533 99.6011 li
cp
f
264.323 76.9854 mo
256.24 95.313 li
248.157 76.9854 li
246.058 76.9854 li
249.682 85.188 li
249.043 85.8022 248.404 86.416 247.766 87.0298 cv
248.912 87.5728 250.059 88.1152 251.206 88.6582 cv
255.191 97.6943 li
257.29 97.6943 li
261.264 88.6821 li
262.428 88.1313 263.591 87.5806 264.755 87.0298 cv
264.108 86.4082 263.462 85.7866 262.815 85.165 cv
266.422 76.9854 li
264.323 76.9854 li
cp
f
342.574 89.0381 mo
346.922 89.0381 li
344.749 84.1001 li
342.574 89.0381 li
cp
347.962 89.7168 mo
341.534 89.7168 li
344.749 82.416 li
347.962 89.7168 li
cp
352.024 98.9238 mo
356.818 98.9238 li
352.49 89.103 li
355.052 86.6406 li
350.438 84.4565 li
346.604 75.7622 li
342.894 75.7622 li
338.947 84.7139 li
334.878 86.6392 li
337.136 88.814 li
332.678 98.9238 li
337.473 98.9238 li
339.613 94.04 li
349.885 94.04 li
352.024 98.9238 li
cp
357.86 99.6025 mo
351.582 99.6025 li
349.441 94.7188 li
340.056 94.7188 li
337.916 99.6025 li
331.636 99.6025 li
336.324 88.9731 li
333.697 86.4458 li
338.428 84.2075 li
342.45 75.083 li
347.047 75.083 li
350.957 83.9502 li
356.232 86.4468 li
353.302 89.2646 li
357.86 99.6025 li
cp
f
339.654 90.9438 mo
344.749 79.3696 li
349.843 90.9438 li
339.654 90.9438 li
cp
352.92 86.9878 mo
351.78 86.4482 350.64 85.9087 349.5 85.3691 cv
345.805 76.9893 li
343.694 76.9893 li
339.885 85.6255 li
338.926 86.0796 337.967 86.5337 337.008 86.9878 cv
337.54 87.5 338.073 88.0122 338.606 88.5244 cv
334.561 97.6963 li
336.672 97.6963 li
338.812 92.813 li
350.688 92.813 li
352.827 97.6963 li
354.938 97.6963 li
351.02 88.8145 li
351.653 88.2056 352.287 87.5967 352.92 86.9878 cv
cp
f
187.751 195.293 mo
180.381 195.293 li
180.381 193.257 li
187.751 193.257 li
187.751 195.293 li
cp
level3{
gsave
clp
[51.3336 99.334 -99.334 51.3336 157.284 142.449 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.3336 99.334 -99.334 51.3336 157.284 142.449 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
172.572 203.537 mo
169.335 200.277 li
175.833 200.277 li
172.572 203.537 li
cp
175.957 209.836 mo
169.154 209.836 li
172.567 206.422 li
175.957 209.836 li
cp
158.776 200.277 mo
166.465 200.277 li
171.132 204.978 li
167.304 208.806 li
158.776 200.277 li
cp
161.771 209.836 mo
152.211 200.277 li
155.896 200.277 li
165.455 209.836 li
161.771 209.836 li
cp
142.623 209.836 mo
150.757 201.702 li
158.891 209.836 li
142.623 209.836 li
cp
135.503 209.836 mo
145.063 200.277 li
149.302 200.277 li
139.743 209.836 li
135.503 209.836 li
cp
130.896 205.015 mo
135.668 200.277 li
142.182 200.277 li
134.17 208.289 li
130.896 205.015 li
cp
126.042 209.836 mo
129.452 206.45 li
132.838 209.836 li
126.042 209.836 li
cp
114.592 200.277 mo
123.278 200.277 li
128.011 205.01 li
123.653 209.337 li
114.592 200.277 li
cp
105.004 209.836 mo
113.138 201.702 li
121.271 209.836 li
105.004 209.836 li
cp
99.6924 205.001 mo
104.417 200.277 li
111.683 200.277 li
103.338 208.622 li
99.6924 205.001 li
cp
94.8569 209.836 mo
98.2524 206.441 li
101.671 209.836 li
94.8569 209.836 li
cp
85.5313 200.277 mo
92.0454 200.277 li
96.8071 205.006 li
93.5337 208.279 li
85.5313 200.277 li
cp
87.9702 209.836 mo
78.4111 200.277 li
82.6509 200.277 li
92.2104 209.836 li
87.9702 209.836 li
cp
68.8042 209.836 mo
76.9473 201.693 li
85.0903 209.836 li
68.8042 209.836 li
cp
62.2402 209.836 mo
71.7988 200.277 li
75.4834 200.277 li
65.9243 209.836 li
62.2402 209.836 li
cp
56.5718 204.968 mo
61.23 200.277 li
68.9189 200.277 li
60.3999 208.796 li
56.5718 204.968 li
cp
51.7378 209.836 mo
55.1367 206.413 li
58.5596 209.836 li
51.7378 209.836 li
cp
51.8809 200.277 mo
58.3599 200.277 li
55.1318 203.528 li
51.8809 200.277 li
cp
103.97 187.58 mo
106.511 187.007 109.229 186.621 112.12 186.509 cv
112.12 196.092 li
103.97 187.58 li
cp
92.7656 191.68 mo
95.3755 190.332 98.3594 189.084 101.696 188.149 cv
110.679 197.532 li
92.7656 191.68 li
cp
101.536 200.277 mo
98.2471 203.566 li
94.9355 200.277 li
101.536 200.277 li
cp
83.0762 198.24 mo
84.7637 196.768 87.2036 194.87 90.3281 193.026 cv
106.288 198.24 li
83.0762 198.24 li
cp
114.157 196.722 mo
114.157 186.478 li
117.324 186.497 120.298 186.842 123.065 187.418 cv
114.157 196.722 li
cp
125.363 187.962 mo
128.835 188.876 131.948 190.128 134.659 191.501 cv
116.2 197.533 li
125.363 187.962 li
cp
132.778 200.277 mo
129.457 203.575 li
126.159 200.277 li
132.778 200.277 li
cp
120.594 198.24 mo
137.12 192.84 li
140.398 194.742 142.948 196.719 144.692 198.24 cv
120.594 198.24 li
cp
113.829 182.991 mo
127.623 182.991 140.898 188.525 150.625 198.24 cv
147.702 198.24 li
143.994 194.634 131.899 184.436 113.884 184.436 cv
95.8706 184.436 83.7769 194.631 80.0664 198.24 cv
77.0322 198.24 li
86.7588 188.524 100.034 182.991 113.829 182.991 cv
cp
195.869 201.609 mo
195.869 197.203 li
191.463 197.203 li
191.463 198.24 li
153.452 198.24 li
152.497 197.211 151.493 196.238 150.466 195.293 cv
176.096 195.293 li
176.096 193.257 li
148.124 193.257 li
138.513 185.379 126.382 180.954 113.829 180.954 cv
101.224 180.954 89.0483 185.415 79.4194 193.352 cv
79.4194 193.257 li
51.1235 193.257 li
51.1235 195.293 li
77.1914 195.293 li
76.165 196.238 75.1611 197.211 74.2056 198.24 cv
35.6538 198.24 li
35.6538 196.975 li
31.2471 196.975 li
31.2471 201.381 li
35.6538 201.381 li
35.6538 200.277 li
49.0005 200.277 li
53.6968 204.973 li
48.8677 209.836 li
34.7822 209.836 li
34.7822 208.38 li
30.376 208.38 li
30.376 212.787 li
34.7822 212.787 li
34.7822 211.873 li
191.463 211.873 li
191.463 213.057 li
195.869 213.057 li
195.869 208.65 li
191.463 208.65 li
191.463 209.836 li
178.827 209.836 li
174.007 204.982 li
178.713 200.277 li
191.463 200.277 li
191.463 201.609 li
195.869 201.609 li
cp
level3{
gsave
clp
[51.3333 99.3334 -99.3334 51.3333 96.9212 173.644 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.3333 99.3334 -99.3334 51.3333 96.9212 173.644 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
46.8384 195.293 mo
39.4673 195.293 li
39.4673 193.257 li
46.8384 193.257 li
46.8384 195.293 li
cp
level3{
gsave
clp
[51.3332 99.3333 -99.3333 51.3332 46.0711 199.922 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.3332 99.3333 -99.3333 51.3332 46.0711 199.922 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
45.8638 272.453 mo
38.4932 272.453 li
38.4932 270.417 li
45.8638 270.417 li
45.8638 272.453 li
cp
level3{
gsave
clp
[51.3327 99.3323 -99.3323 51.3327 13.8323 216.583 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.3327 99.3323 -99.3323 51.3327 13.8323 216.583 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
171.109 259.298 mo
167.687 255.876 li
174.507 255.876 li
171.109 259.298 li
cp
174.366 265.435 mo
167.884 265.435 li
171.114 262.183 li
174.366 265.435 li
cp
157.325 265.435 mo
165.845 256.914 li
169.674 260.743 li
165.014 265.435 li
157.325 265.435 li
cp
150.762 265.435 mo
160.321 255.876 li
164.003 255.876 li
154.444 265.435 li
150.762 265.435 li
cp
149.297 264.019 mo
141.154 255.876 li
157.441 255.876 li
149.297 264.019 li
cp
112.417 282.721 mo
98.6235 282.721 85.3486 277.187 75.6211 267.472 cv
78.5444 267.472 li
82.2539 271.078 94.3481 281.274 112.361 281.274 cv
130.369 281.274 142.466 271.08 146.179 267.472 cv
149.212 267.472 li
139.485 277.187 126.211 282.721 112.417 282.721 cv
cp
67.355 255.876 mo
83.6226 255.876 li
75.4888 264.01 li
67.355 255.876 li
cp
70.3511 265.435 mo
60.7905 255.876 li
64.4746 255.876 li
74.0342 265.435 li
70.3511 265.435 li
cp
59.7813 265.435 mo
55.1128 260.733 li
58.9404 256.906 li
67.4707 265.435 li
59.7813 265.435 li
cp
50.4111 265.435 mo
53.6724 262.174 li
56.9111 265.435 li
50.4111 265.435 li
cp
50.2881 255.876 mo
57.0908 255.876 li
53.6777 259.288 li
50.2881 255.876 li
cp
90.7407 255.876 mo
81.1812 265.435 li
76.9434 265.435 li
86.5024 255.876 li
90.7407 255.876 li
cp
95.3486 260.695 mo
90.5757 265.435 li
84.0615 265.435 li
92.0747 257.422 li
95.3486 260.695 li
cp
100.203 255.876 mo
96.7935 259.261 li
93.4087 255.876 li
100.203 255.876 li
cp
111.653 265.435 mo
102.968 265.435 li
98.2339 260.7 li
102.592 256.373 li
111.653 265.435 li
cp
112.089 268.988 mo
112.089 279.232 li
108.922 279.214 105.947 278.868 103.18 278.292 cv
112.089 268.988 li
cp
110.046 268.178 mo
100.882 277.748 li
97.4097 276.834 94.2969 275.582 91.5859 274.209 cv
110.046 268.178 li
cp
93.4658 265.435 mo
96.7886 262.136 li
100.088 265.435 li
93.4658 265.435 li
cp
105.649 267.472 mo
89.1255 272.87 li
85.8481 270.969 83.2988 268.992 81.5547 267.472 cv
105.649 267.472 li
cp
121.242 255.876 mo
113.108 264.01 li
104.974 255.876 li
121.242 255.876 li
cp
126.552 260.71 mo
121.827 265.435 li
114.563 265.435 li
122.907 257.09 li
126.552 260.71 li
cp
131.387 255.876 mo
127.993 259.27 li
124.574 255.876 li
131.387 255.876 li
cp
140.716 265.435 mo
134.201 265.435 li
129.438 260.705 li
132.712 257.431 li
140.716 265.435 li
cp
124.708 265.435 mo
127.998 262.145 li
131.311 265.435 li
124.708 265.435 li
cp
119.962 267.472 mo
143.168 267.472 li
141.48 268.942 139.04 270.84 135.916 272.684 cv
119.962 267.472 li
cp
122.273 278.13 mo
119.733 278.703 117.015 279.089 114.125 279.201 cv
114.125 269.62 li
122.273 278.13 li
cp
115.563 268.177 mo
133.478 274.03 li
130.868 275.378 127.884 276.625 124.548 277.561 cv
115.563 268.177 li
cp
138.274 255.876 mo
147.833 265.435 li
143.596 265.435 li
134.037 255.876 li
138.274 255.876 li
cp
195.869 257.33 mo
195.869 252.924 li
191.463 252.924 li
191.463 253.839 li
34.7822 253.839 li
34.7822 252.653 li
30.376 252.653 li
30.376 257.061 li
34.7822 257.061 li
34.7822 255.876 li
47.418 255.876 li
52.2373 260.729 li
47.5308 265.435 li
34.7822 265.435 li
34.7822 264.102 li
30.376 264.102 li
30.376 268.508 li
34.7822 268.508 li
34.7822 267.472 li
72.7939 267.472 li
73.7495 268.499 74.7529 269.472 75.7788 270.417 cv
50.1499 270.417 li
50.1499 272.453 li
78.1216 272.453 li
87.7334 280.332 99.8628 284.758 112.417 284.758 cv
125.021 284.758 137.196 280.296 146.826 272.359 cv
146.826 272.453 li
175.121 272.453 li
175.121 270.417 li
149.055 270.417 li
150.081 269.472 151.084 268.499 152.04 267.472 cv
190.591 267.472 li
190.591 268.736 li
194.998 268.736 li
194.998 264.33 li
190.591 264.33 li
190.591 265.435 li
177.246 265.435 li
172.549 260.737 li
177.377 255.876 li
191.463 255.876 li
191.463 257.33 li
195.869 257.33 li
cp
level3{
gsave
clp
[51.3333 99.3335 -99.3335 51.3333 74.1949 185.388 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.3333 99.3335 -99.3335 51.3333 74.1949 185.388 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
186.778 272.453 mo
179.407 272.453 li
179.407 270.417 li
186.778 270.417 li
186.778 272.453 li
cp
level3{
gsave
clp
[51.3327 99.3323 -99.3323 51.3327 125.046 159.111 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.3327 99.3323 -99.3323 51.3327 125.046 159.111 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.061 244.505 mo
97.2949 244.505 li
97.2949 235.314 li
99.6914 232.915 li
97.2949 230.522 li
97.2949 226.191 li
104.257 226.191 li
104.257 222.045 li
86.0986 222.045 li
86.0986 226.191 li
93.061 226.191 li
93.061 230.522 li
90.665 232.915 li
93.061 235.314 li
93.061 244.505 li
cp
97.9741 245.184 mo
92.3823 245.184 li
92.3823 235.596 li
89.7051 232.915 li
92.3823 230.241 li
92.3823 226.87 li
85.4199 226.87 li
85.4199 221.366 li
104.936 221.366 li
104.936 226.87 li
97.9741 226.87 li
97.9741 230.241 li
100.651 232.915 li
97.9741 235.596 li
97.9741 245.184 li
cp
1 1 1 rgb
f
87.2798 225.011 mo
94.2417 225.011 li
94.2417 231.011 li
93.606 231.646 92.9707 232.282 92.335 232.918 cv
92.9707 233.554 93.606 234.189 94.2417 234.825 cv
94.2417 243.324 li
96.1143 243.324 li
96.1143 234.825 li
96.75 234.189 97.3857 233.554 98.021 232.918 cv
97.3857 232.282 96.75 231.646 96.1143 231.011 cv
96.1143 225.011 li
103.077 225.011 li
103.077 223.226 li
87.2798 223.226 li
87.2798 225.011 li
cp
f
179.813 244.505 mo
196.187 244.505 li
196.187 240.358 li
184.075 240.358 li
184.075 235.173 li
195.077 235.173 li
195.077 230.997 li
184.075 230.997 li
184.075 226.191 li
196.187 226.191 li
196.187 222.045 li
179.813 222.045 li
179.813 230.305 li
177.2 232.915 li
179.813 235.529 li
179.813 244.505 li
cp
196.866 245.184 mo
179.134 245.184 li
179.134 235.811 li
176.24 232.915 li
179.134 230.023 li
179.134 221.366 li
196.866 221.366 li
196.866 226.87 li
184.754 226.87 li
184.754 230.317 li
195.755 230.317 li
195.755 235.852 li
184.754 235.852 li
184.754 239.68 li
196.866 239.68 li
196.866 245.184 li
cp
f
195.006 225.011 mo
195.006 223.226 li
180.994 223.226 li
180.994 230.795 li
180.286 231.503 179.578 232.21 178.871 232.918 cv
179.578 233.626 180.286 234.334 180.994 235.041 cv
180.994 243.324 li
195.006 243.324 li
195.006 241.54 li
182.895 241.54 li
182.895 233.991 li
193.896 233.991 li
193.896 232.178 li
182.895 232.178 li
182.895 225.011 li
195.006 225.011 li
cp
f
150.091 232.874 mo
152.303 235.085 li
152.303 235.224 li
152.319 240.806 156.262 244.856 161.677 244.856 cv
167.091 244.856 171.033 240.806 171.049 235.224 cv
171.049 235.085 li
173.262 232.874 li
171.049 230.66 li
171.049 222.045 li
166.815 222.045 li
166.815 230.688 li
164.631 232.874 li
166.815 235.056 li
166.815 235.196 li
166.812 238.477 164.699 240.769 161.677 240.769 cv
158.655 240.769 156.541 238.477 156.538 235.196 cv
156.538 235.056 li
158.722 232.874 li
156.538 230.688 li
156.538 222.045 li
152.304 222.045 li
152.304 230.66 li
150.091 232.874 li
cp
161.677 245.535 mo
155.915 245.535 151.708 241.269 151.626 235.367 cv
149.131 232.874 li
151.625 230.379 li
151.625 221.366 li
157.217 221.366 li
157.217 230.406 li
159.682 232.874 li
157.218 235.336 li
157.28 238.142 159.096 240.089 161.677 240.089 cv
164.256 240.089 166.073 238.142 166.135 235.336 cv
163.671 232.874 li
166.136 230.406 li
166.136 221.366 li
171.728 221.366 li
171.728 230.379 li
174.222 232.874 li
171.727 235.367 li
171.645 241.269 167.438 245.535 161.677 245.535 cv
cp
f
169.868 231.149 mo
169.868 223.226 li
167.996 223.226 li
167.996 231.177 li
167.431 231.742 166.866 232.308 166.301 232.872 cv
166.866 233.438 167.431 234.002 167.996 234.567 cv
167.996 235.19 li
167.996 239.141 165.363 241.949 161.676 241.949 cv
157.991 241.949 155.357 239.141 155.357 235.19 cv
155.357 234.567 li
155.922 234.002 156.487 233.438 157.052 232.872 cv
156.487 232.308 155.922 231.742 155.357 231.177 cv
155.357 223.226 li
153.484 223.226 li
153.484 231.149 li
152.91 231.724 152.336 232.298 151.761 232.872 cv
152.336 233.446 152.91 234.021 153.484 234.596 cv
153.484 235.19 li
153.484 240.165 156.879 243.675 161.676 243.675 cv
166.475 243.675 169.868 240.165 169.868 235.19 cv
169.868 234.596 li
170.442 234.021 171.017 233.446 171.591 232.872 cv
171.017 232.298 170.442 231.724 169.868 231.149 cv
cp
f
76.8516 244.505 mo
80.4932 244.505 li
80.4932 235.62 li
83.2412 232.874 li
80.4932 230.124 li
80.4932 222.045 li
76.2583 222.045 li
76.2583 236.756 li
65.1563 222.045 li
61.5142 222.045 li
61.5142 230.082 li
58.7251 232.874 li
61.5142 235.662 li
61.5142 244.505 li
65.749 244.505 li
65.749 229.794 li
76.8516 244.505 li
cp
81.1719 245.184 mo
76.5137 245.184 li
66.4277 231.82 li
66.4277 245.184 li
60.8354 245.184 li
60.8354 235.942 li
57.7651 232.874 li
60.8354 229.801 li
60.8354 221.366 li
65.4946 221.366 li
75.5796 234.729 li
75.5796 221.366 li
81.1719 221.366 li
81.1719 229.843 li
84.2012 232.874 li
81.1719 235.901 li
81.1719 245.184 li
cp
f
79.312 230.613 mo
79.312 223.226 li
77.4399 223.226 li
77.4399 240.282 li
64.5679 223.226 li
62.6953 223.226 li
62.6953 230.572 li
61.9287 231.339 61.1616 232.105 60.395 232.872 cv
61.1616 233.639 61.9287 234.406 62.6953 235.173 cv
62.6953 243.324 li
64.5679 243.324 li
64.5679 226.269 li
77.4399 243.324 li
79.312 243.324 li
79.312 235.131 li
80.0649 234.378 80.8179 233.625 81.5708 232.872 cv
80.8179 232.119 80.0649 231.366 79.312 230.613 cv
cp
f
109.645 244.505 mo
113.879 244.505 li
113.879 235.117 li
116.078 232.915 li
113.879 230.72 li
113.879 222.045 li
109.645 222.045 li
109.645 230.72 li
107.447 232.915 li
109.645 235.117 li
109.645 244.505 li
cp
114.558 245.184 mo
108.966 245.184 li
108.966 235.397 li
106.487 232.915 li
108.966 230.438 li
108.966 221.366 li
114.558 221.366 li
114.558 230.438 li
117.038 232.915 li
114.558 235.397 li
114.558 245.184 li
cp
f
112.698 231.209 mo
112.698 223.226 li
110.826 223.226 li
110.826 231.209 li
110.256 231.778 109.687 232.349 109.117 232.918 cv
109.687 233.488 110.256 234.058 110.826 234.627 cv
110.826 243.324 li
112.698 243.324 li
112.698 234.627 li
113.268 234.058 113.838 233.488 114.407 232.918 cv
113.838 232.349 113.268 231.778 112.698 231.209 cv
cp
f
133.048 226.489 mo
129.504 226.489 126.511 229.59 126.511 233.26 cv
126.511 236.946 129.504 240.061 133.048 240.061 cv
133.681 240.061 134.303 239.963 134.904 239.771 cv
132.099 237.349 li
135.718 233.115 li
138.997 235.957 li
139.362 235.104 139.555 234.181 139.555 233.26 cv
139.555 229.59 136.575 226.489 133.048 226.489 cv
cp
133.048 240.739 mo
129.136 240.739 125.832 237.313 125.832 233.26 cv
125.832 229.223 129.136 225.811 133.048 225.811 cv
136.943 225.811 140.233 229.223 140.233 233.26 cv
140.233 234.433 139.951 235.608 139.416 236.661 cv
139.219 237.049 li
135.79 234.076 li
133.054 237.276 li
136.196 239.991 li
135.692 240.203 li
134.848 240.559 133.958 240.739 133.048 240.739 cv
cp
139.464 242.823 mo
141.982 244.993 li
144.713 241.797 li
142.442 239.825 li
142.603 239.579 li
143.403 238.347 143.958 237.002 144.251 235.585 cv
144.272 235.485 li
146.884 232.873 li
143.979 229.912 li
142.497 225.073 138.001 221.693 133.048 221.693 cv
128.192 221.693 123.587 225.14 122.099 229.89 cv
122.015 230.027 li
119.17 232.873 li
121.809 235.512 li
121.831 235.61 li
122.968 240.967 127.686 244.856 133.048 244.856 cv
135.222 244.856 137.366 244.202 139.25 242.964 cv
139.464 242.823 li
cp
142.055 245.953 mo
139.406 243.671 li
137.465 244.891 135.271 245.535 133.048 245.535 cv
127.4 245.535 122.429 241.469 121.188 235.85 cv
118.21 232.873 li
121.477 229.605 li
123.101 224.543 127.847 221.014 133.048 221.014 cv
138.269 221.014 143.009 224.554 144.604 229.632 cv
147.844 232.873 li
144.895 235.822 li
144.6 237.192 144.074 238.493 143.331 239.698 cv
145.667 241.726 li
142.055 245.953 li
cp
f
139.425 238.79 mo
135.915 235.747 li
134.715 237.15 li
138.138 240.105 li
136.705 241.247 134.95 241.92 133.047 241.92 cv
128.483 241.92 124.651 237.97 124.651 233.261 cv
124.651 228.579 128.483 224.629 133.047 224.629 cv
137.612 224.629 141.415 228.579 141.415 233.261 cv
141.415 235.338 140.654 237.298 139.425 238.79 cv
cp
145.215 232.872 mo
144.461 232.118 143.707 231.364 142.953 230.61 cv
141.766 226.208 137.73 222.874 133.047 222.874 cv
128.396 222.874 124.331 226.197 123.124 230.589 cv
122.362 231.35 121.601 232.111 120.84 232.872 cv
121.528 233.561 122.215 234.248 122.903 234.936 cv
123.727 239.817 128.049 243.675 133.047 243.675 cv
135.475 243.675 137.729 242.768 139.513 241.305 cv
141.854 243.324 li
143.054 241.92 li
140.83 239.989 li
142.037 238.553 142.866 236.813 143.176 234.912 cv
143.855 234.231 144.535 233.552 145.215 232.872 cv
cp
f
39.8799 234.911 mo
44.0674 234.911 li
41.9736 230.153 li
39.8799 234.911 li
cp
45.1084 235.59 mo
38.8389 235.59 li
41.9736 228.47 li
45.1084 235.59 li
cp
49.043 244.505 mo
53.6743 244.505 li
49.4736 234.984 li
51.9565 232.598 li
47.4883 230.482 li
43.7676 222.045 li
40.1807 222.045 li
36.3491 230.731 li
32.4321 232.62 li
34.5967 234.703 li
30.272 244.505 li
34.9043 244.505 li
36.9824 239.766 li
46.9658 239.766 li
49.043 244.505 li
cp
54.7153 245.184 mo
48.5991 245.184 li
46.5215 240.444 li
37.4263 240.444 li
35.3486 245.184 li
29.231 245.184 li
33.7837 234.862 li
31.2666 232.439 li
35.8306 230.225 li
39.7378 221.366 li
44.2104 221.366 li
48.0068 229.976 li
53.1367 232.403 li
50.2861 235.144 li
54.7153 245.184 li
cp
f
37.0288 236.771 mo
41.9736 225.537 li
46.918 236.771 li
37.0288 236.771 li
cp
49.9043 232.931 mo
48.7979 232.407 47.6914 231.883 46.585 231.359 cv
42.998 223.226 li
40.9502 223.226 li
37.2524 231.608 li
36.3218 232.05 35.3906 232.49 34.4595 232.931 cv
34.9766 233.428 35.4941 233.925 36.0112 234.423 cv
32.0845 243.324 li
34.1333 243.324 li
36.2109 238.585 li
47.7373 238.585 li
49.8149 243.324 li
51.8623 243.324 li
48.0601 234.703 li
48.6748 234.112 49.2896 233.521 49.9043 232.931 cv
cp
f
544.288 211.551 mo
544.037 206.054 539.446 201.668 533.944 201.668 cv
528.441 201.668 523.85 206.054 523.599 211.551 cv
530.495 211.551 537.392 211.551 544.288 211.551 cv
cp
level3{
gsave
clp
[43.9999 79.4999 -79.4999 43.9999 515.035 176.287 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9999 79.4999 -79.4999 43.9999 515.035 176.287 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
456.483 212.568 mo
450.543 212.568 li
450.543 210.532 li
456.483 210.532 li
456.483 212.568 li
cp
level3{
gsave
clp
[43.9995 79.4992 -79.4992 43.9995 452.999 210.621 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9995 79.4992 -79.4992 43.9995 452.999 210.621 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
617.657 212.568 mo
611.717 212.568 li
611.717 210.532 li
617.657 210.532 li
617.657 212.568 li
cp
level3{
gsave
clp
[43.9995 79.4992 -79.4992 43.9995 576.38 142.336 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9995 79.4992 -79.4992 43.9995 576.38 142.336 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
533.944 183.072 mo
518.11 183.072 505.174 195.299 504.618 210.532 cv
502.006 210.532 li
502.562 193.859 516.67 180.46 533.944 180.46 cv
551.218 180.46 565.325 193.859 565.881 210.532 cv
563.269 210.532 li
562.714 195.299 549.776 183.072 533.944 183.072 cv
cp
549.921 210.532 mo
549.879 209.893 549.783 209.27 549.663 208.655 cv
560.647 205.994 li
560.974 207.465 561.171 208.981 561.232 210.532 cv
549.921 210.532 li
cp
548.193 204.492 mo
557.625 198.398 li
558.672 200.158 559.517 202.042 560.126 204.025 cv
549.137 206.688 li
548.878 205.928 548.564 205.195 548.193 204.492 cv
cp
547.126 202.757 mo
546.425 201.769 545.615 200.862 544.704 200.057 cv
551.975 191.713 li
553.694 193.18 555.226 194.849 556.521 196.687 cv
547.126 202.757 li
cp
543.088 198.811 mo
542.116 198.151 541.075 197.581 539.962 197.141 cv
544.028 186.985 li
546.311 187.866 548.444 189.032 550.377 190.445 cv
543.088 198.811 li
cp
534.963 196.048 mo
534.963 185.134 li
537.439 185.223 539.835 185.626 542.103 186.314 cv
538.015 196.525 li
537.03 196.273 536.011 196.112 534.963 196.048 cv
cp
532.926 196.048 mo
531.89 196.112 530.881 196.27 529.906 196.517 cv
525.817 186.304 li
528.076 185.622 530.46 185.222 532.926 185.134 cv
532.926 196.048 li
cp
524.822 198.795 mo
517.532 190.429 li
519.468 189.016 521.605 187.852 523.891 186.973 cv
527.956 197.128 li
526.841 197.566 525.797 198.135 524.822 198.795 cv
cp
520.772 202.74 mo
511.378 196.67 li
512.676 194.832 514.21 193.162 515.934 191.695 cv
523.204 200.039 li
522.29 200.845 521.477 201.751 520.772 202.74 cv
cp
518.753 206.679 mo
507.764 204.017 li
508.375 202.03 509.222 200.143 510.272 198.381 cv
519.703 204.474 li
519.329 205.18 519.013 205.917 518.753 206.679 cv
cp
517.966 210.532 mo
506.654 210.532 li
506.716 208.979 506.914 207.459 507.242 205.985 cv
518.226 208.646 li
518.105 209.264 518.009 209.891 517.966 210.532 cv
cp
567.918 210.532 mo
567.875 209.14 567.751 207.768 567.536 206.424 cv
608.207 206.424 li
608.207 204.387 li
567.135 204.387 li
563.764 189.554 550.166 178.423 533.944 178.423 cv
517.721 178.423 504.123 189.554 500.752 204.387 cv
459.419 204.387 li
459.419 206.424 li
500.352 206.424 li
500.136 207.768 500.013 209.14 499.969 210.532 cv
459.419 210.532 li
459.419 212.568 li
519.968 212.568 li
519.968 211.55 li
519.968 204.099 526.237 198.037 533.944 198.037 cv
541.649 198.037 547.919 204.099 547.919 211.55 cv
547.919 212.568 li
608.576 212.568 li
608.576 210.532 li
567.918 210.532 li
cp
level3{
gsave
clp
[44 79.5001 -79.5001 44 515.771 175.879 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[44 79.5001 -79.5001 44 515.771 175.879 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
610.425 254.447 mo
457.774 254.447 li
457.774 252.41 li
610.425 252.41 li
610.425 254.447 li
cp
level3{
gsave
clp
[43.9998 79.4998 -79.4998 43.9998 496.946 186.298 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9998 79.4998 -79.4998 43.9998 496.946 186.298 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
596.865 260.645 mo
471.336 260.645 li
471.336 259.966 471.336 259.287 471.336 258.607 cv
596.865 258.607 li
596.865 259.287 596.865 259.966 596.865 260.645 cv
cp
level3{
gsave
clp
[43.9997 79.4997 -79.4997 43.9997 494.321 187.751 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9997 79.4997 -79.4997 43.9997 494.321 187.751 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
584.208 266.844 mo
483.991 266.844 li
483.991 264.807 li
584.208 264.807 li
584.208 266.844 li
cp
level3{
gsave
clp
[43.9999 79.4999 -79.4999 43.9999 491.694 189.205 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9999 79.4999 -79.4999 43.9999 491.694 189.205 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
467.066 260.645 mo
461.124 260.645 li
461.124 258.607 li
467.066 258.607 li
467.066 260.645 li
cp
level3{
gsave
clp
[43.9993 79.4989 -79.4989 43.9993 440.731 217.412 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9993 79.4989 -79.4989 43.9993 440.731 217.412 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
606.543 260.645 mo
600.602 260.645 li
600.602 258.607 li
606.543 258.607 li
606.543 260.645 li
cp
level3{
gsave
clp
[43.9995 79.4992 -79.4992 43.9995 547.503 158.319 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.9995 79.4992 -79.4992 43.9995 547.503 158.319 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
448.251 232.318 mo
450.318 234.386 li
450.336 234.494 li
451.232 240.222 456.203 244.539 461.9 244.539 cv
464.91 244.539 467.907 243.269 470.121 241.053 cv
470.968 240.207 li
467.94 237.107 li
467.074 238.022 li
465.689 239.486 463.804 240.327 461.9 240.327 cv
458.667 240.327 455.768 238.047 454.849 234.78 cv
454.794 234.59 li
457.064 232.319 li
454.98 230.231 li
455.06 230.025 li
456.173 227.095 458.922 225.126 461.9 225.126 cv
463.795 225.126 465.684 225.958 467.082 227.408 cv
467.938 228.298 li
470.97 225.265 li
470.129 224.41 li
467.912 222.157 464.989 220.916 461.9 220.916 cv
456.605 220.916 451.822 224.723 450.529 229.969 cv
450.506 230.06 li
448.251 232.318 li
cp
461.9 245.218 mo
455.909 245.218 450.677 240.708 449.682 234.709 cv
447.291 232.318 li
449.893 229.714 li
451.293 224.216 456.328 220.237 461.9 220.237 cv
465.173 220.237 468.268 221.55 470.612 223.933 cv
471.928 225.268 li
467.927 229.269 li
466.593 227.879 li
465.322 226.561 463.61 225.805 461.9 225.805 cv
459.271 225.805 456.836 227.508 455.773 230.063 cv
458.024 232.319 li
455.558 234.786 li
456.451 237.659 459.033 239.648 461.9 239.648 cv
463.618 239.648 465.324 238.886 466.581 237.556 cv
467.932 236.129 li
471.922 240.212 li
470.602 241.532 li
468.261 243.874 465.089 245.218 461.9 245.218 cv
cp
1 1 1 rgb
f
461.9 223.916 mo
464.227 223.916 466.402 224.959 467.954 226.57 cv
469.266 225.258 li
467.357 223.319 464.733 222.126 461.9 222.126 cv
456.921 222.126 452.591 225.857 451.613 230.666 cv
451.063 231.217 450.513 231.767 449.962 232.317 cv
450.464 232.818 450.965 233.32 451.467 233.821 cv
452.038 239.078 456.603 243.328 461.9 243.328 cv
464.733 243.328 467.357 242.105 469.266 240.196 cv
467.954 238.854 li
466.402 240.495 464.227 241.538 461.9 241.538 cv
457.737 241.538 454.182 238.313 453.477 234.195 cv
454.103 233.569 454.729 232.943 455.355 232.317 cv
454.775 231.738 454.196 231.158 453.617 230.579 cv
454.57 226.802 457.963 223.916 461.9 223.916 cv
cp
f
482.535 231.688 mo
486.818 231.688 li
488.716 231.688 490.744 230.971 490.744 228.955 cv
490.744 226.917 488.716 226.192 486.818 226.192 cv
482.535 226.192 li
482.535 231.688 li
cp
486.818 232.367 mo
481.856 232.367 li
481.856 225.513 li
486.818 225.513 li
489.044 225.513 491.423 226.417 491.423 228.955 cv
491.423 231.471 489.044 232.367 486.818 232.367 cv
cp
491.29 244.18 mo
496.459 244.18 li
490.692 236.006 li
491.079 235.842 li
494.004 234.593 495.752 232.019 495.752 228.955 cv
495.752 224.576 492.053 221.274 487.147 221.274 cv
477.528 221.274 li
477.528 229.443 li
474.656 232.319 li
477.528 235.19 li
477.528 244.18 li
481.856 244.18 li
481.856 236.606 li
485.953 236.606 li
491.29 244.18 li
cp
497.769 244.858 mo
490.938 244.858 li
485.6 237.285 li
482.535 237.285 li
482.535 244.858 li
476.85 244.858 li
476.85 235.472 li
473.696 232.319 li
476.85 229.162 li
476.85 220.595 li
487.147 220.595 li
492.439 220.595 496.431 224.19 496.431 228.955 cv
496.431 232.163 494.681 234.877 491.727 236.294 cv
497.769 244.858 li
cp
f
486.818 233.577 mo
480.646 233.577 li
480.646 224.303 li
486.818 224.303 li
490.248 224.303 492.633 226.092 492.633 228.955 cv
492.633 231.788 490.248 233.577 486.818 233.577 cv
cp
494.541 228.955 mo
494.541 225.167 491.352 222.483 487.147 222.483 cv
478.738 222.483 li
478.738 229.945 li
477.947 230.736 477.157 231.526 476.366 232.317 cv
477.157 233.107 477.947 233.898 478.738 234.689 cv
478.738 242.97 li
480.646 242.97 li
480.646 235.396 li
486.579 235.396 li
491.917 242.97 li
494.124 242.97 li
488.696 235.276 li
492.126 234.709 494.541 232.265 494.541 228.955 cv
cp
f
531.19 244.18 mo
535.547 244.18 li
535.547 234.668 li
546.878 234.668 li
546.878 230.398 li
535.547 230.398 li
535.547 225.513 li
548.101 225.513 li
548.101 221.274 li
531.19 221.274 li
531.19 229.435 li
528.305 232.319 li
531.19 235.199 li
531.19 244.18 li
cp
536.227 244.858 mo
530.511 244.858 li
530.511 235.48 li
527.345 232.319 li
530.511 229.153 li
530.511 220.595 li
548.779 220.595 li
548.779 226.192 li
536.227 226.192 li
536.227 229.719 li
547.557 229.719 li
547.557 235.347 li
536.227 235.347 li
536.227 244.858 li
cp
f
532.399 229.936 mo
531.606 230.729 530.813 231.523 530.019 232.317 cv
530.813 233.111 531.606 233.905 532.399 234.698 cv
532.399 242.97 li
534.337 242.97 li
534.337 233.457 li
545.668 233.457 li
545.668 231.608 li
534.337 231.608 li
534.337 224.303 li
546.891 224.303 li
546.891 222.483 li
532.399 222.483 li
532.399 229.936 li
cp
f
560.061 244.18 mo
564.389 244.18 li
564.389 234.809 li
566.831 232.362 li
564.389 229.919 li
564.389 225.513 li
571.485 225.513 li
571.485 221.274 li
552.963 221.274 li
552.963 225.513 li
560.061 225.513 li
560.061 229.919 li
557.616 232.362 li
560.061 234.809 li
560.061 244.18 li
cp
565.067 244.858 mo
559.381 244.858 li
559.381 235.09 li
556.656 232.362 li
559.381 229.639 li
559.381 226.192 li
552.284 226.192 li
552.284 220.595 li
572.164 220.595 li
572.164 226.192 li
565.067 226.192 li
565.067 229.639 li
567.791 232.362 li
565.067 235.09 li
565.067 244.858 li
cp
f
554.174 224.303 mo
561.27 224.303 li
561.27 230.42 li
560.622 231.068 559.974 231.716 559.326 232.364 cv
559.974 233.012 560.622 233.66 561.27 234.308 cv
561.27 242.97 li
563.178 242.97 li
563.178 234.308 li
563.826 233.66 564.474 233.012 565.122 232.364 cv
564.474 231.716 563.826 231.068 563.178 230.42 cv
563.178 224.303 li
570.274 224.303 li
570.274 222.483 li
554.174 222.483 li
554.174 224.303 li
cp
f
576.963 244.18 mo
593.665 244.18 li
593.665 239.94 li
581.32 239.94 li
581.32 234.668 li
592.533 234.668 li
592.533 230.398 li
581.32 230.398 li
581.32 225.513 li
593.665 225.513 li
593.665 221.274 li
576.963 221.274 li
576.963 229.698 li
574.296 232.362 li
576.963 235.028 li
576.963 244.18 li
cp
594.345 244.858 mo
576.284 244.858 li
576.284 235.31 li
573.336 232.362 li
576.284 229.417 li
576.284 220.595 li
594.345 220.595 li
594.345 226.192 li
581.999 226.192 li
581.999 229.719 li
593.212 229.719 li
593.212 235.347 li
581.999 235.347 li
581.999 239.261 li
594.345 239.261 li
594.345 244.858 li
cp
f
578.173 230.2 mo
577.452 230.921 576.73 231.643 576.009 232.364 cv
576.73 233.085 577.452 233.807 578.173 234.528 cv
578.173 242.97 li
592.455 242.97 li
592.455 241.15 li
580.11 241.15 li
580.11 233.457 li
591.323 233.457 li
591.323 231.608 li
580.11 231.608 li
580.11 224.303 li
592.455 224.303 li
592.455 222.483 li
578.173 222.483 li
578.173 230.2 li
cp
f
604.845 239.321 mo
607.996 239.321 li
612.167 239.321 615.082 236.603 615.082 232.711 cv
615.082 228.837 612.167 226.132 607.996 226.132 cv
604.845 226.132 li
604.845 229.772 li
607.389 232.318 li
604.845 234.861 li
604.845 239.321 li
cp
607.996 240 mo
604.166 240 li
604.166 234.58 li
606.429 232.318 li
604.166 230.054 li
604.166 225.454 li
607.996 225.454 li
612.568 225.454 615.761 228.438 615.761 232.711 cv
615.761 237.003 612.568 240 607.996 240 cv
cp
599.837 244.18 mo
607.996 244.18 li
615.004 244.18 620.091 239.356 620.091 232.711 cv
620.091 226.083 615.004 221.274 607.996 221.274 cv
599.837 221.274 li
599.837 230.095 li
597.614 232.319 li
599.837 234.541 li
599.837 244.18 li
cp
607.996 244.858 mo
599.158 244.858 li
599.158 234.821 li
596.654 232.319 li
599.158 229.813 li
599.158 220.595 li
607.996 220.595 li
615.397 220.595 620.77 225.691 620.77 232.711 cv
620.77 239.749 615.397 244.858 607.996 244.858 cv
cp
f
607.995 241.211 mo
602.955 241.211 li
602.955 234.079 li
603.543 233.492 604.13 232.904 604.718 232.317 cv
604.13 231.729 603.543 231.143 602.955 230.556 cv
602.955 224.244 li
607.995 224.244 li
613.244 224.244 616.972 227.763 616.972 232.711 cv
616.972 237.692 613.244 241.211 607.995 241.211 cv
cp
607.995 222.483 mo
601.047 222.483 li
601.047 230.595 li
600.473 231.169 599.898 231.743 599.325 232.317 cv
599.898 232.892 600.473 233.466 601.047 234.039 cv
601.047 242.97 li
607.995 242.97 li
614.376 242.97 618.88 238.706 618.88 232.711 cv
618.88 226.718 614.376 222.483 607.995 222.483 cv
cp
f
510.903 234.401 mo
515.194 234.401 li
513.049 229.529 li
510.903 234.401 li
cp
516.233 235.08 mo
509.863 235.08 li
513.049 227.846 li
516.233 235.08 li
cp
520.25 244.18 mo
524.985 244.18 li
520.702 234.468 li
523.237 232.032 li
518.675 229.874 li
514.883 221.274 li
511.219 221.274 li
507.311 230.129 li
503.289 232.032 li
505.523 234.183 li
501.113 244.18 li
505.85 244.18 li
507.966 239.349 li
518.133 239.349 li
520.25 244.18 li
cp
526.027 244.858 mo
519.808 244.858 li
517.689 240.027 li
508.409 240.027 li
506.293 244.858 li
500.071 244.858 li
504.712 234.342 li
502.109 231.838 li
506.791 229.622 li
510.776 220.595 li
515.325 220.595 li
519.194 229.368 li
524.418 231.838 li
521.514 234.63 li
526.027 244.858 li
cp
f
508.01 236.291 mo
513.049 224.84 li
518.089 236.291 li
508.01 236.291 li
cp
521.133 232.376 mo
520.006 231.842 518.878 231.309 517.75 230.774 cv
514.094 222.483 li
512.007 222.483 li
508.237 231.028 li
507.288 231.478 506.34 231.927 505.391 232.376 cv
505.918 232.883 506.445 233.39 506.972 233.896 cv
502.97 242.97 li
505.059 242.97 li
507.176 238.139 li
518.924 238.139 li
521.041 242.97 li
523.129 242.97 li
519.253 234.183 li
519.88 233.581 520.507 232.979 521.133 232.376 cv
cp
f
460.533 347.124 mo
465.625 347.124 li
465.625 345.088 li
460.533 345.088 li
460.533 347.124 li
cp
level3{
gsave
clp
[67.9998 97.9998 -97.9998 67.9998 462.853 345.781 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9998 97.9998 -97.9998 67.9998 462.853 345.781 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
530.92 345.088 mo
469.528 345.088 li
469.528 347.124 li
530.92 347.124 li
530.92 345.088 li
cp
level3{
gsave
clp
[67.9999 97.9999 -97.9999 67.9999 487.927 328.383 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 97.9999 -97.9999 67.9999 487.927 328.383 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
537.141 344.387 mo
536.191 344.387 535.422 345.156 535.422 346.106 cv
535.422 347.056 536.191 347.825 537.141 347.825 cv
538.09 347.825 538.86 347.056 538.86 346.106 cv
538.86 345.156 538.09 344.387 537.141 344.387 cv
cp
level3{
gsave
clp
[68.0001 98.0001 -98.0001 68.0001 512.845 311.092 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0001 98.0001 -98.0001 68.0001 512.845 311.092 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
559.18 333.016 mo
559.371 333.098 559.573 333.139 559.765 333.139 cv
560.389 333.139 560.973 332.771 561.217 332.16 cv
561.543 331.359 561.163 330.45 560.361 330.124 cv
559.561 329.799 558.65 330.178 558.324 330.979 cv
558 331.781 558.379 332.69 559.18 333.016 cv
cp
level3{
gsave
clp
[68.0002 98.0004 -98.0004 68.0002 534.929 295.769 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0002 98.0004 -98.0004 68.0002 534.929 295.769 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
570.49 339.181 mo
570.763 339.358 571.075 339.452 571.387 339.452 cv
571.876 339.452 572.365 339.222 572.678 338.786 cv
573.167 338.081 572.99 337.104 572.283 336.614 cv
571.578 336.112 570.6 336.288 570.111 336.995 cv
569.609 337.714 569.785 338.679 570.49 339.181 cv
cp
level3{
gsave
clp
[68.0004 98.0006 -98.0006 68.0004 539.808 292.383 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0004 98.0006 -98.0006 68.0004 539.808 292.383 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
553.084 330.911 mo
553.232 330.952 553.369 330.966 553.504 330.966 cv
554.196 330.966 554.821 330.518 555.012 329.839 cv
555.256 329.011 554.767 328.142 553.939 327.91 cv
553.11 327.666 552.242 328.142 552.012 328.983 cv
551.78 329.812 552.255 330.667 553.084 330.911 cv
cp
level3{
gsave
clp
[67.9996 97.9994 -97.9994 67.9996 531.718 297.997 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9996 97.9994 -97.9994 67.9996 531.718 297.997 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
565.005 335.786 mo
565.25 335.909 565.508 335.977 565.753 335.977 cv
566.309 335.977 566.839 335.677 567.124 335.161 cv
567.544 334.401 567.259 333.45 566.499 333.044 cv
565.738 332.622 564.802 332.908 564.381 333.668 cv
563.974 334.428 564.259 335.365 565.005 335.786 cv
cp
level3{
gsave
clp
[68.0013 98.0019 -98.0019 68.0013 537.638 293.888 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0013 98.0019 -98.0019 68.0013 537.638 293.888 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
546.798 329.485 mo
546.878 329.499 546.974 329.499 547.055 329.499 cv
547.801 329.499 548.467 328.97 548.589 328.209 cv
548.738 327.354 548.169 326.553 547.313 326.404 cv
546.471 326.254 545.655 326.838 545.521 327.68 cv
545.37 328.535 545.94 329.336 546.798 329.485 cv
cp
level3{
gsave
clp
[68.0007 98.001 -98.001 68.0007 528.044 300.546 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0007 98.001 -98.001 68.0007 528.044 300.546 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
540.388 328.766 mo
540.415 328.766 540.441 328.766 540.47 328.766 cv
541.297 328.766 541.99 328.128 542.03 327.299 cv
542.085 326.431 541.42 325.697 540.563 325.643 cv
539.695 325.602 538.962 326.254 538.921 327.123 cv
538.866 327.979 539.519 328.711 540.388 328.766 cv
cp
level3{
gsave
clp
[68.0014 98.0021 -98.0021 68.0014 523.947 303.388 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0014 98.0021 -98.0021 68.0014 523.947 303.388 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
507.813 333.016 mo
507.053 333.438 506.78 334.373 507.189 335.135 cv
507.475 335.664 508.003 335.949 508.561 335.949 cv
508.817 335.949 509.063 335.895 509.307 335.759 cv
510.066 335.353 510.339 334.401 509.932 333.641 cv
509.524 332.894 508.573 332.608 507.813 333.016 cv
cp
level3{
gsave
clp
[68 98 -98 68 499.042 320.671 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68 98 -98 68 499.042 320.671 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
502.028 336.588 mo
501.323 337.076 501.146 338.053 501.649 338.76 cv
501.947 339.195 502.437 339.426 502.925 339.426 cv
503.237 339.426 503.549 339.344 503.821 339.153 cv
504.526 338.651 504.704 337.688 504.201 336.981 cv
503.712 336.262 502.735 336.099 502.028 336.588 cv
cp
level3{
gsave
clp
[68.0003 98.0004 -98.0004 68.0003 493.607 324.441 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0003 98.0004 -98.0004 68.0003 493.607 324.441 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
513.964 330.11 mo
513.163 330.437 512.77 331.347 513.095 332.147 cv
513.353 332.745 513.938 333.111 514.549 333.111 cv
514.751 333.111 514.942 333.085 515.132 333.002 cv
515.933 332.676 516.313 331.767 516.001 330.966 cv
515.661 330.165 514.751 329.784 513.964 330.11 cv
cp
level3{
gsave
clp
[67.893 97.8458 -97.8458 67.893 504.428 316.97 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.893 97.8458 -97.8458 67.893 504.428 316.97 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
520.374 327.897 mo
519.545 328.128 519.07 328.996 519.301 329.825 cv
519.504 330.504 520.129 330.952 520.808 330.952 cv
520.944 330.952 521.093 330.939 521.229 330.898 cv
522.057 330.667 522.546 329.799 522.315 328.97 cv
522.071 328.142 521.215 327.653 520.374 327.897 cv
cp
level3{
gsave
clp
[68 98.0001 -98.0001 68 509.648 313.311 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68 98.0001 -98.0001 68 509.648 313.311 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
533.762 325.643 mo
532.906 325.685 532.24 326.431 532.295 327.286 cv
532.336 328.128 533.028 328.766 533.856 328.766 cv
533.883 328.766 533.911 328.766 533.938 328.766 cv
534.793 328.711 535.459 327.979 535.404 327.123 cv
535.364 326.254 534.631 325.602 533.762 325.643 cv
cp
level3{
gsave
clp
[67.9996 97.9994 -97.9994 67.9996 519.478 306.491 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9996 97.9994 -97.9994 67.9996 519.478 306.491 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
527.013 326.404 mo
526.158 326.539 525.588 327.34 525.723 328.195 cv
525.859 328.957 526.523 329.499 527.271 329.499 cv
527.353 329.499 527.448 329.499 527.529 329.485 cv
528.385 329.336 528.954 328.535 528.806 327.68 cv
528.669 326.824 527.855 326.254 527.013 326.404 cv
cp
level3{
gsave
clp
[68.0907 98.1307 -98.1307 68.0907 514.677 309.789 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0907 98.1307 -98.1307 68.0907 514.677 309.789 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
586.792 341.015 mo
574.012 327.218 555.949 319.306 537.143 319.306 cv
518.336 319.306 500.271 327.218 487.493 341.015 cv
482.583 341.015 li
497.524 325.313 517.306 316.321 537.143 316.321 cv
556.981 316.321 576.763 325.313 591.702 341.015 cv
586.792 341.015 li
cp
565.631 341.015 mo
557.144 335.76 547.272 332.881 537.143 332.881 cv
527.014 332.881 517.142 335.746 508.655 341.015 cv
490.32 341.015 li
502.621 328.493 519.544 321.343 537.143 321.343 cv
554.74 321.343 571.663 328.494 583.965 341.015 cv
565.631 341.015 li
cp
512.729 341.015 mo
516.874 338.814 524.875 335.277 535.514 334.944 cv
547.971 334.555 557.319 338.77 561.557 341.015 cv
545.281 341.015 529.005 341.015 512.729 341.015 cv
cp
598.803 341.015 mo
594.289 341.015 li
594.413 340.9 li
578.96 323.985 558.086 314.284 537.143 314.284 cv
516.199 314.284 495.324 323.986 479.868 340.904 cv
479.988 341.015 li
475.523 341.015 li
475.523 343.051 li
516.617 343.051 557.71 343.051 598.803 343.051 cv
598.803 341.015 li
cp
level3{
gsave
clp
[68 98 -98 68 514.769 309.758 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68 98 -98 68 514.769 309.758 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
598.803 349.161 mo
557.71 349.161 516.617 349.161 475.523 349.161 cv
475.523 351.198 li
516.617 351.198 557.71 351.198 598.803 351.198 cv
598.803 349.161 li
cp
level3{
gsave
clp
[67.9999 97.9999 -97.9999 67.9999 510.953 312.406 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 97.9999 -97.9999 67.9999 510.953 312.406 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
608.656 345.088 mo
608.656 347.124 li
613.748 347.124 li
613.748 345.088 li
608.656 345.088 li
cp
level3{
gsave
clp
[67.9997 97.9996 -97.9996 67.9997 562.838 276.404 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9997 97.9996 -97.9996 67.9997 562.838 276.404 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
543.361 347.124 mo
604.753 347.124 li
604.753 345.088 li
543.361 345.088 li
543.361 347.124 li
cp
level3{
gsave
clp
[68.0001 98.0002 -98.0002 68.0001 537.764 293.802 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0001 98.0002 -98.0002 68.0001 537.764 293.802 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
509.321 402.727 mo
509.076 402.603 508.819 402.535 508.573 402.535 cv
508.018 402.535 507.487 402.835 507.202 403.351 cv
506.782 404.11 507.067 405.062 507.827 405.469 cv
508.588 405.891 509.524 405.604 509.946 404.844 cv
510.354 404.084 510.068 403.146 509.321 402.727 cv
cp
level3{
gsave
clp
[67.9999 97.9998 -97.9998 67.9999 466.397 343.322 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 97.9998 -97.9998 67.9999 466.397 343.322 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
553.953 410.615 mo
554.781 410.384 555.256 409.516 555.025 408.687 cv
554.822 408.008 554.198 407.56 553.52 407.56 cv
553.383 407.56 553.234 407.573 553.098 407.614 cv
552.27 407.845 551.78 408.714 552.012 409.542 cv
552.256 410.371 553.112 410.858 553.953 410.615 cv
cp
level3{
gsave
clp
[67.9997 97.9995 -97.9995 67.9997 494.388 323.9 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9997 97.9995 -97.9995 67.9997 494.388 323.9 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
572.298 401.924 mo
573.004 401.437 573.18 400.459 572.678 399.752 cv
572.379 399.317 571.89 399.086 571.401 399.086 cv
571.089 399.086 570.777 399.169 570.506 399.358 cv
569.8 399.86 569.622 400.825 570.125 401.53 cv
570.614 402.25 571.592 402.413 572.298 401.924 cv
cp
level3{
gsave
clp
[67.9999 97.9999 -97.9999 67.9999 510.429 312.769 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 97.9999 -97.9999 67.9999 510.429 312.769 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
566.513 405.496 mo
567.273 405.074 567.546 404.139 567.138 403.377 cv
566.853 402.849 566.323 402.563 565.767 402.563 cv
565.509 402.563 565.264 402.617 565.02 402.753 cv
564.26 403.16 563.988 404.11 564.396 404.872 cv
564.802 405.618 565.753 405.903 566.513 405.496 cv
cp
level3{
gsave
clp
[68.0011 98.0016 -98.0016 68.0011 504.993 316.539 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0011 98.0016 -98.0016 68.0011 504.993 316.539 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
560.362 408.401 mo
561.164 408.075 561.558 407.166 561.231 406.365 cv
560.974 405.767 560.39 405.401 559.778 405.401 cv
559.575 405.401 559.384 405.428 559.194 405.51 cv
558.394 405.836 558.013 406.745 558.326 407.547 cv
558.665 408.348 559.575 408.728 560.362 408.401 cv
cp
level3{
gsave
clp
[67.893 97.8458 -97.8458 67.893 499.718 320.4 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.893 97.8458 -97.8458 67.893 499.718 320.4 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
540.565 412.869 mo
541.421 412.828 542.086 412.081 542.032 411.227 cv
541.99 410.384 541.299 409.746 540.47 409.746 cv
540.443 409.746 540.415 409.746 540.389 409.746 cv
539.533 409.801 538.868 410.534 538.922 411.39 cv
538.962 412.258 539.695 412.91 540.565 412.869 cv
cp
level3{
gsave
clp
[68.0004 98.0006 -98.0006 68.0004 484.558 330.72 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0004 98.0006 -98.0006 68.0004 484.558 330.72 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
547.313 412.107 mo
548.169 411.973 548.739 411.172 548.604 410.316 cv
548.467 409.556 547.803 409.013 547.056 409.013 cv
546.974 409.013 546.878 409.013 546.798 409.026 cv
545.942 409.176 545.372 409.977 545.521 410.832 cv
545.657 411.688 546.472 412.258 547.313 412.107 cv
cp
level3{
gsave
clp
[68.0896 98.1291 -98.1291 68.0896 489.266 327.288 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0896 98.1291 -98.1291 68.0896 489.266 327.288 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
521.242 407.601 mo
521.094 407.56 520.957 407.547 520.822 407.547 cv
520.13 407.547 519.505 407.994 519.314 408.674 cv
519.07 409.501 519.56 410.371 520.387 410.602 cv
521.216 410.846 522.084 410.371 522.315 409.528 cv
522.546 408.7 522.071 407.845 521.242 407.601 cv
cp
level3{
gsave
clp
[68.0001 98.0002 -98.0002 68.0001 472.318 339.213 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0001 98.0002 -98.0002 68.0001 472.318 339.213 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
503.836 399.332 mo
503.563 399.154 503.251 399.06 502.939 399.06 cv
502.45 399.06 501.961 399.291 501.649 399.726 cv
501.16 400.431 501.336 401.408 502.043 401.897 cv
502.748 402.4 503.727 402.224 504.215 401.517 cv
504.718 400.798 504.541 399.833 503.836 399.332 cv
cp
level3{
gsave
clp
[68.0005 98.0008 -98.0008 68.0005 464.227 344.827 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0005 98.0008 -98.0008 68.0005 464.227 344.827 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
515.146 405.496 mo
514.956 405.414 514.753 405.373 514.562 405.373 cv
513.938 405.373 513.354 405.74 513.11 406.352 cv
512.783 407.152 513.163 408.063 513.965 408.389 cv
514.766 408.714 515.676 408.334 516.002 407.533 cv
516.327 406.73 515.947 405.821 515.146 405.496 cv
cp
level3{
gsave
clp
[68.0005 98.0008 -98.0008 68.0005 469.106 341.441 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0005 98.0008 -98.0008 68.0005 469.106 341.441 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
527.529 409.026 mo
527.448 409.013 527.353 409.013 527.271 409.013 cv
526.525 409.013 525.859 409.542 525.737 410.303 cv
525.588 411.158 526.158 411.959 527.014 412.107 cv
527.855 412.258 528.671 411.675 528.806 410.832 cv
528.956 409.977 528.386 409.176 527.529 409.026 cv
cp
level3{
gsave
clp
[68.0007 98.001 -98.001 68.0007 475.991 336.664 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0007 98.001 -98.001 68.0007 475.991 336.664 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
533.939 409.746 mo
533.911 409.746 533.885 409.746 533.856 409.746 cv
533.029 409.746 532.336 410.384 532.296 411.213 cv
532.242 412.081 532.906 412.814 533.763 412.869 cv
534.631 412.91 535.364 412.258 535.405 411.39 cv
535.46 410.534 534.808 409.801 533.939 409.746 cv
cp
level3{
gsave
clp
[68.0006 98.0009 -98.0009 68.0006 480.088 333.822 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.0006 98.0009 -98.0009 68.0006 480.088 333.822 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
487.535 397.498 mo
500.314 411.295 518.378 419.206 537.184 419.206 cv
555.991 419.206 574.055 411.295 586.833 397.498 cv
591.743 397.498 li
576.803 413.199 557.022 422.191 537.184 422.191 cv
517.347 422.191 497.565 413.199 482.625 397.498 cv
487.535 397.498 li
cp
508.696 397.498 mo
517.183 402.753 527.054 405.631 537.184 405.631 cv
547.313 405.631 557.185 402.767 565.671 397.498 cv
584.006 397.498 li
571.705 410.019 554.782 417.169 537.184 417.169 cv
519.586 417.169 502.663 410.019 490.362 397.498 cv
508.696 397.498 li
cp
561.598 397.498 mo
557.521 399.669 548.842 403.595 537.184 403.595 cv
525.525 403.595 516.846 399.669 512.77 397.498 cv
529.046 397.498 545.321 397.498 561.598 397.498 cv
cp
475.523 397.498 mo
480.038 397.498 li
479.913 397.611 li
495.368 414.526 516.242 424.228 537.184 424.228 cv
558.128 424.228 579.004 414.525 594.459 397.607 cv
594.338 397.498 li
598.803 397.498 li
598.803 395.461 li
557.71 395.461 516.617 395.461 475.523 395.461 cv
475.523 397.498 li
cp
level3{
gsave
clp
[67.9999 97.9999 -97.9999 67.9999 489.267 327.453 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 97.9999 -97.9999 67.9999 489.267 327.453 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
598.803 389.351 mo
598.803 387.314 li
557.71 387.314 516.617 387.314 475.523 387.314 cv
475.523 389.351 li
516.617 389.351 557.71 389.351 598.803 389.351 cv
cp
level3{
gsave
clp
[67.9999 97.9999 -97.9999 67.9999 493.083 324.805 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 97.9999 -97.9999 67.9999 493.083 324.805 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
460.533 393.337 mo
465.625 393.337 li
465.625 391.3 li
460.533 391.3 li
460.533 393.337 li
cp
level3{
gsave
clp
[67.9994 97.9991 -97.9991 67.9994 441.209 360.8 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9994 97.9991 -97.9991 67.9994 441.209 360.8 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
530.92 391.3 mo
469.528 391.3 li
469.528 393.337 li
530.92 393.337 li
530.92 391.3 li
cp
level3{
gsave
clp
[67.9999 98 -98 67.9999 466.282 343.402 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 98 -98 67.9999 466.282 343.402 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
535.422 392.318 mo
535.422 393.268 536.191 394.038 537.141 394.038 cv
538.09 394.038 538.86 393.268 538.86 392.318 cv
538.86 391.369 538.09 390.599 537.141 390.599 cv
536.191 390.599 535.422 391.369 535.422 392.318 cv
cp
level3{
gsave
clp
[67.9994 97.9992 -97.9992 67.9994 491.201 326.112 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9994 97.9992 -97.9992 67.9994 491.201 326.112 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
608.656 393.337 mo
613.748 393.337 li
613.748 391.3 li
608.656 391.3 li
608.656 393.337 li
cp
level3{
gsave
clp
[67.9993 97.999 -97.999 67.9993 541.194 291.424 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9993 97.999 -97.999 67.9993 541.194 291.424 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
543.361 393.337 mo
604.753 393.337 li
604.753 391.3 li
543.361 391.3 li
543.361 393.337 li
cp
level3{
gsave
clp
[67.9999 98 -98 67.9999 516.12 308.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.9999 98 -98 67.9999 516.12 308.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
545.259 380.418 mo
560.973 380.418 li
560.973 376.182 li
549.586 376.182 li
549.586 370.776 li
551.806 368.563 li
549.586 366.343 li
549.586 357.521 li
545.259 357.521 li
545.259 366.292 li
542.99 368.563 li
545.259 370.827 li
545.259 380.418 li
cp
561.651 381.098 mo
544.58 381.098 li
544.58 371.108 li
542.03 368.563 li
544.58 366.011 li
544.58 356.843 li
550.265 356.843 li
550.265 366.062 li
552.766 368.563 li
550.265 371.058 li
550.265 375.503 li
561.651 375.503 li
561.651 381.098 li
cp
1 1 1 rgb
f
548.377 370.276 mo
548.949 369.704 549.521 369.132 550.093 368.56 cv
549.521 367.987 548.949 367.415 548.377 366.844 cv
548.377 358.731 li
546.469 358.731 li
546.469 366.793 li
545.88 367.382 545.291 367.971 544.702 368.56 cv
545.291 369.148 545.88 369.737 546.469 370.326 cv
546.469 379.209 li
559.762 379.209 li
559.762 377.391 li
548.377 377.391 li
548.377 370.276 li
cp
f
564.724 380.418 mo
581.42 380.418 li
581.42 376.182 li
569.078 376.182 li
569.078 370.911 li
580.287 370.911 li
580.287 366.643 li
569.078 366.643 li
569.078 361.76 li
581.42 361.76 li
581.42 357.521 li
564.724 357.521 li
564.724 365.943 li
562.058 368.608 li
564.724 371.271 li
564.724 380.418 li
cp
582.099 381.098 mo
564.045 381.098 li
564.045 371.553 li
561.098 368.608 li
564.045 365.662 li
564.045 356.843 li
582.099 356.843 li
582.099 362.438 li
569.758 362.438 li
569.758 365.963 li
580.966 365.963 li
580.966 371.59 li
569.758 371.59 li
569.758 375.503 li
582.099 375.503 li
582.099 381.098 li
cp
f
580.21 360.55 mo
580.21 358.731 li
565.933 358.731 li
565.933 366.443 li
565.212 367.164 564.491 367.886 563.77 368.606 cv
564.491 369.328 565.212 370.049 565.933 370.77 cv
565.933 379.209 li
580.21 379.209 li
580.21 377.391 li
567.869 377.391 li
567.869 369.701 li
579.078 369.701 li
579.078 367.853 li
567.869 367.853 li
567.869 360.55 li
580.21 360.55 li
cp
f
493.875 376.385 mo
494.651 377.149 li
497.04 379.503 500.127 380.747 503.578 380.747 cv
506.841 380.747 509.503 379.482 510.884 377.277 cv
514.2 373.948 li
511.312 371.039 li
510.033 368.393 506.869 367.351 504.256 366.737 cv
500.238 365.758 499.453 365.006 499.453 364.036 cv
499.453 362.483 500.97 361.313 502.983 361.313 cv
504.823 361.313 506.672 362.133 508.187 363.619 cv
509.143 364.558 li
511.882 361.133 li
511.039 360.37 li
508.676 358.224 505.994 357.135 503.072 357.135 cv
500.067 357.135 497.457 358.477 496.089 360.723 cv
493.003 363.822 li
495.498 366.362 li
496.551 369.139 499.602 370.202 502.741 370.939 cv
506.768 371.868 507.555 372.73 507.555 373.903 cv
507.555 375.473 505.944 376.568 503.638 376.568 cv
501.342 376.568 499.293 375.686 497.548 373.942 cv
496.592 372.986 li
493.875 376.385 li
cp
503.578 381.426 mo
499.945 381.426 496.692 380.114 494.174 377.632 cv
492.962 376.438 li
496.536 371.97 li
498.027 373.462 li
499.64 375.073 501.527 375.89 503.638 375.89 cv
505.545 375.89 506.876 375.073 506.876 373.903 cv
506.876 373.381 506.876 372.59 502.588 371.601 cv
499.289 370.827 496.077 369.693 494.891 366.673 cv
492.043 363.822 li
495.559 360.307 li
497.001 357.918 499.828 356.456 503.072 356.456 cv
506.169 356.456 509.003 357.604 511.495 359.866 cv
512.811 361.059 li
509.203 365.568 li
507.712 364.104 li
506.323 362.742 504.645 361.992 502.983 361.992 cv
501.357 361.992 500.132 362.871 500.132 364.036 cv
500.132 364.36 500.132 365.034 504.414 366.077 cv
507.154 366.721 510.479 367.825 511.897 370.692 cv
515.16 373.948 li
511.411 377.697 li
509.952 380.046 507.08 381.426 503.578 381.426 cv
cp
f
510.323 371.787 mo
509.485 369.768 507.243 368.68 503.966 367.913 cv
500.181 366.988 498.243 366.095 498.243 364.037 cv
498.243 361.861 500.21 360.104 502.982 360.104 cv
505.188 360.104 507.333 361.087 509.034 362.756 cv
510.226 361.266 li
508.288 359.506 505.933 358.344 503.072 358.344 cv
500.321 358.344 498.112 359.602 497.032 361.504 cv
496.259 362.277 495.485 363.051 494.712 363.824 cv
495.317 364.43 495.924 365.036 496.529 365.642 cv
497.187 367.831 499.417 368.917 503.013 369.76 cv
506.887 370.654 508.765 371.668 508.765 373.903 cv
508.765 375.99 506.887 377.778 503.638 377.778 cv
500.807 377.778 498.481 376.586 496.692 374.798 cv
495.5 376.288 li
497.558 378.315 500.329 379.537 503.578 379.537 cv
506.704 379.537 508.879 378.316 509.945 376.493 cv
510.793 375.646 511.64 374.799 512.487 373.951 cv
511.766 373.229 511.044 372.508 510.323 371.787 cv
cp
f
526.69 370.645 mo
530.979 370.645 li
528.835 365.775 li
526.69 370.645 li
cp
532.019 371.323 mo
525.651 371.323 li
528.835 364.091 li
532.019 371.323 li
cp
536.034 380.418 mo
540.767 380.418 li
536.483 370.711 li
539.018 368.277 li
534.459 366.12 li
530.668 357.521 li
527.004 357.521 li
523.102 366.373 li
519.081 368.276 li
521.313 370.427 li
516.906 380.418 li
521.639 380.418 li
523.755 375.59 li
533.918 375.59 li
536.034 380.418 li
cp
541.809 381.098 mo
535.591 381.098 li
533.475 376.27 li
524.198 376.27 li
522.082 381.098 li
515.864 381.098 li
520.501 370.586 li
517.9 368.082 li
522.582 365.866 li
526.561 356.843 li
531.11 356.843 li
534.979 365.613 li
540.198 368.084 li
537.298 370.872 li
541.809 381.098 li
cp
f
523.798 372.533 mo
528.835 361.087 li
533.873 372.533 li
523.798 372.533 li
cp
536.917 368.619 mo
535.789 368.086 534.661 367.552 533.534 367.018 cv
529.879 358.731 li
527.793 358.731 li
524.026 367.272 li
523.077 367.722 522.129 368.17 521.181 368.619 cv
521.708 369.126 522.234 369.633 522.762 370.14 cv
518.762 379.209 li
520.848 379.209 li
522.964 374.38 li
534.708 374.38 li
536.824 379.209 li
538.911 379.209 li
535.037 370.426 li
535.664 369.824 536.29 369.222 536.917 368.619 cv
cp
f
127.462 348.915 mo
104.708 348.915 li
104.708 347.044 li
127.462 347.044 li
127.462 348.915 li
cp
level3{
gsave
clp
[48.6667 72 -72 48.6667 97.1872 320.021 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.6667 72 -72 48.6667 97.1872 320.021 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
149.103 347.044 mo
151.947 344.199 li
159.971 344.199 li
157.127 347.044 li
149.103 347.044 li
cp
132.401 347.044 mo
129.557 344.199 li
149.302 344.199 li
146.458 347.044 li
132.401 347.044 li
cp
124.63 339.273 mo
154.228 339.273 li
151.172 342.329 li
127.686 342.329 li
124.63 339.273 li
cp
121.229 342.329 mo
119.516 340.615 117.802 338.901 116.088 337.188 cv
114.375 338.901 112.661 340.615 110.948 342.329 cv
107.137 342.329 li
116.089 333.376 li
125.041 342.329 li
121.229 342.329 li
cp
104.491 342.329 mo
81.0156 342.329 li
77.96 339.273 li
107.547 339.273 li
104.491 342.329 li
cp
99.7759 347.044 mo
85.7305 347.044 li
82.8862 344.199 li
102.621 344.199 li
99.7759 347.044 li
cp
72.2168 344.199 mo
80.2412 344.199 li
83.0859 347.044 li
75.062 347.044 li
72.2168 344.199 li
cp
67.291 339.273 mo
75.3149 339.273 li
78.3706 342.329 li
70.3462 342.329 li
67.291 339.273 li
cp
164.897 339.273 mo
161.842 342.329 li
153.817 342.329 li
156.873 339.273 li
164.897 339.273 li
cp
159.772 347.044 mo
162.617 344.199 li
177.448 344.199 li
177.448 342.329 li
164.487 342.329 li
167.542 339.273 li
186.454 339.273 li
186.454 337.402 li
122.76 337.402 li
116.089 330.731 li
109.417 337.402 li
45.332 337.402 li
45.332 339.273 li
64.6455 339.273 li
67.7012 342.329 li
54.4341 342.329 li
54.4341 344.199 li
69.5718 344.199 li
72.4165 347.044 li
32.0923 347.044 li
32.0923 348.915 li
100.55 348.915 li
105.266 344.199 li
126.911 344.199 li
131.626 348.915 li
200.225 348.915 li
200.225 347.044 li
159.772 347.044 li
cp
level3{
gsave
clp
[48.6667 72 -72 48.6667 97.2379 319.987 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.6667 72 -72 48.6667 97.2379 319.987 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
127.611 390.69 mo
104.855 390.69 li
104.855 388.819 li
127.611 388.819 li
127.611 390.69 li
cp
level3{
gsave
clp
[48.6664 71.9996 -71.9996 48.6664 77.9072 333.053 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.6664 71.9996 -71.9996 48.6664 77.9072 333.053 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
160.101 393.535 mo
152.077 393.535 li
149.232 390.69 li
157.256 390.69 li
160.101 393.535 li
cp
165.027 398.461 mo
157.002 398.461 li
153.947 395.405 li
161.972 395.405 li
165.027 398.461 li
cp
124.771 398.461 mo
127.827 395.405 li
151.302 395.405 li
154.357 398.461 li
124.771 398.461 li
cp
116.229 404.357 mo
107.277 395.405 li
111.001 395.405 li
112.714 397.118 114.427 398.831 116.14 400.544 cv
117.853 398.831 119.565 397.118 121.278 395.405 cv
125.182 395.405 li
116.229 404.357 li
cp
78.0898 398.461 mo
81.1455 395.405 li
104.632 395.405 li
107.688 398.461 li
78.0898 398.461 li
cp
70.4766 395.405 mo
78.5005 395.405 li
75.4448 398.461 li
67.4209 398.461 li
70.4766 395.405 li
cp
75.1914 390.69 mo
83.2158 390.69 li
80.3711 393.535 li
72.3467 393.535 li
75.1914 390.69 li
cp
102.762 393.535 mo
83.0161 393.535 li
85.8608 390.69 li
99.917 390.69 li
102.762 393.535 li
cp
132.542 390.69 mo
146.587 390.69 li
149.432 393.535 li
129.697 393.535 li
132.542 390.69 li
cp
200.225 388.819 mo
131.767 388.819 li
127.052 393.535 li
105.407 393.535 li
100.692 388.819 li
32.0923 388.819 li
32.0923 390.69 li
72.5464 390.69 li
69.7017 393.535 li
54.8696 393.535 li
54.8696 395.405 li
67.8315 395.405 li
64.7759 398.461 li
45.8647 398.461 li
45.8647 400.332 li
109.559 400.332 li
116.229 407.003 li
122.9 400.332 li
186.986 400.332 li
186.986 398.461 li
167.672 398.461 li
164.617 395.405 li
177.884 395.405 li
177.884 393.535 li
162.746 393.535 li
159.901 390.69 li
200.225 390.69 li
200.225 388.819 li
cp
level3{
gsave
clp
[48.6667 72 -72 48.6667 77.856 333.087 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.6667 72 -72 48.6667 77.856 333.087 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.1655 367.831 mo
69.4248 367.831 li
71.3115 367.831 73.3276 367.117 73.3276 365.114 cv
73.3276 363.089 71.3115 362.367 69.4248 362.367 cv
65.1655 362.367 li
65.1655 367.831 li
cp
69.4248 368.51 mo
64.4863 368.51 li
64.4863 361.688 li
69.4248 361.688 li
71.6396 361.688 74.0068 362.589 74.0068 365.114 cv
74.0068 367.617 71.6396 368.51 69.4248 368.51 cv
cp
73.8735 380.258 mo
79.0112 380.258 li
73.2759 372.129 li
73.6621 371.964 li
76.5718 370.72 78.3096 368.16 78.3096 365.114 cv
78.3096 360.758 74.6299 357.474 69.751 357.474 cv
60.1836 357.474 li
60.1836 365.615 li
57.3394 368.458 li
60.1836 371.301 li
60.1836 380.258 li
64.4863 380.258 li
64.4863 372.726 li
68.5635 372.726 li
73.8735 380.258 li
cp
80.3213 380.938 mo
73.5205 380.938 li
68.2104 373.404 li
65.1655 373.404 li
65.1655 380.938 li
59.5044 380.938 li
59.5044 371.582 li
56.3794 368.458 li
59.5044 365.334 li
59.5044 356.794 li
69.751 356.794 li
75.0171 356.794 78.9883 360.37 78.9883 365.114 cv
78.9883 368.305 77.248 371.005 74.3091 372.415 cv
80.3213 380.938 li
cp
1 1 1 rgb
f
69.4243 369.713 mo
63.2842 369.713 li
63.2842 360.486 li
69.4243 360.486 li
72.8359 360.486 75.209 362.266 75.209 365.114 cv
75.209 367.933 72.8359 369.713 69.4243 369.713 cv
cp
77.1074 365.114 mo
77.1074 361.346 73.9336 358.676 69.751 358.676 cv
61.3857 358.676 li
61.3857 366.113 li
60.604 366.895 59.8228 367.676 59.041 368.458 cv
59.8228 369.239 60.604 370.021 61.3857 370.803 cv
61.3857 379.057 li
63.2842 379.057 li
63.2842 371.522 li
69.1865 371.522 li
74.4966 379.057 li
76.6919 379.057 li
71.293 371.403 li
74.7046 370.839 77.1074 368.407 77.1074 365.114 cv
cp
f
94.333 368.503 mo
96.6616 370.834 li
96.6807 370.938 li
97.7085 376.455 102.627 380.615 108.121 380.615 cv
111.324 380.615 114.668 379.304 116.849 377.191 cv
117.214 376.837 li
117.214 367.324 li
106.652 367.324 li
106.652 371.538 li
112.911 371.538 li
112.911 374.953 li
112.755 375.053 li
111.395 375.928 109.705 376.43 108.121 376.43 cv
104.834 376.43 101.934 374.104 101.067 370.774 cv
101.018 370.588 li
103.1 368.503 li
101.167 366.575 li
101.236 366.373 li
102.289 363.341 105.055 361.303 108.121 361.303 cv
110.239 361.303 112.488 362.198 113.848 363.584 cv
114.708 364.459 li
117.709 361.389 li
116.855 360.548 li
114.705 358.432 111.358 357.118 108.121 357.118 cv
102.873 357.118 98.2461 360.73 96.8706 365.902 cv
96.8467 365.99 li
94.333 368.503 li
cp
108.121 381.294 mo
102.34 381.294 97.1621 376.947 96.0337 371.166 cv
93.373 368.503 li
96.2378 365.639 li
97.7227 360.218 102.596 356.439 108.121 356.439 cv
111.53 356.439 115.059 357.829 117.332 360.065 cv
118.667 361.381 li
114.709 365.43 li
113.364 364.059 li
112.125 362.797 110.066 361.981 108.121 361.981 cv
105.412 361.981 102.957 363.748 101.951 366.397 cv
104.06 368.503 li
101.775 370.79 li
102.622 373.721 105.205 375.751 108.121 375.751 cv
109.497 375.751 111.02 375.314 112.232 374.579 cv
112.232 372.218 li
105.973 372.218 li
105.973 366.646 li
117.893 366.646 li
117.893 377.126 li
117.32 377.68 li
115.019 379.908 111.493 381.294 108.121 381.294 cv
cp
f
108.121 360.101 mo
110.524 360.101 113.104 361.109 114.706 362.741 cv
116.012 361.406 li
114.083 359.507 110.998 358.32 108.121 358.32 cv
103.242 358.32 98.9932 361.923 97.9365 366.603 cv
97.3022 367.236 96.668 367.871 96.0332 368.506 cv
96.6187 369.091 97.2036 369.676 97.7886 370.261 cv
98.4985 375.348 102.954 379.413 108.121 379.413 cv
110.998 379.413 114.083 378.197 116.012 376.328 cv
116.012 368.526 li
107.854 368.526 li
107.854 370.336 li
114.113 370.336 li
114.113 375.556 li
112.481 376.861 110.227 377.632 108.121 377.632 cv
103.932 377.632 100.361 374.35 99.7192 370.185 cv
100.279 369.625 100.839 369.065 101.398 368.506 cv
100.875 367.982 100.351 367.459 99.8276 366.936 cv
100.703 363.076 104.133 360.101 108.121 360.101 cv
cp
f
189.884 380.258 mo
205.518 380.258 li
205.518 376.044 li
194.187 376.044 li
194.187 370.663 li
196.391 368.459 li
194.187 366.252 li
194.187 357.474 li
189.884 357.474 li
189.884 366.202 li
187.629 368.459 li
189.884 370.714 li
189.884 380.258 li
cp
206.197 380.938 mo
189.205 380.938 li
189.205 370.995 li
186.669 368.459 li
189.205 365.922 li
189.205 356.794 li
194.866 356.794 li
194.866 365.971 li
197.351 368.459 li
194.866 370.944 li
194.866 375.365 li
206.197 375.365 li
206.197 380.938 li
cp
f
192.984 377.247 mo
192.984 370.166 li
193.554 369.597 194.124 369.027 194.693 368.458 cv
194.124 367.889 193.554 367.318 192.984 366.749 cv
192.984 358.676 li
191.086 358.676 li
191.086 366.699 li
190.5 367.286 189.914 367.872 189.328 368.458 cv
189.914 369.044 190.5 369.63 191.086 370.216 cv
191.086 379.057 li
204.316 379.057 li
204.316 377.247 li
192.984 377.247 li
cp
f
34.4326 370.832 mo
35.293 373.738 37.8711 375.751 40.7661 375.751 cv
43.6499 375.751 46.2163 373.738 47.0713 370.833 cv
44.6982 368.461 li
46.8657 366.291 li
45.8359 363.704 43.4106 361.981 40.7661 361.981 cv
38.1113 361.981 35.6753 363.706 34.6406 366.294 cv
36.8052 368.461 li
34.4326 370.832 li
cp
40.7661 376.43 mo
37.502 376.43 34.6064 374.123 33.7241 370.819 cv
33.6738 370.63 li
35.8452 368.461 li
33.8516 366.464 li
33.9258 366.261 li
35.0112 363.296 37.7598 361.303 40.7661 361.303 cv
43.7627 361.303 46.501 363.295 47.5796 366.26 cv
47.6538 366.464 li
45.6582 368.461 li
47.8301 370.632 li
47.7798 370.821 li
46.9028 374.123 44.0186 376.43 40.7661 376.43 cv
cp
27.0806 368.459 mo
29.272 370.651 li
29.29 370.758 li
30.2407 376.377 35.1743 380.615 40.7661 380.615 cv
46.3496 380.615 51.2715 376.377 52.2148 370.758 cv
52.2329 370.65 li
54.4224 368.459 li
52.04 366.074 li
52.0166 365.983 li
50.6807 360.765 46.0542 357.118 40.7661 357.118 cv
35.4756 357.118 30.8398 360.763 29.4927 365.981 cv
29.4697 366.071 li
27.0806 368.459 li
cp
40.7661 381.294 mo
34.8828 381.294 29.689 376.866 28.6387 370.979 cv
26.1206 368.459 li
28.8589 365.721 li
30.3135 360.251 35.1968 356.439 40.7661 356.439 cv
46.334 356.439 51.2075 360.253 52.6509 365.726 cv
55.3828 368.459 li
52.8657 370.978 li
51.8242 376.866 46.6416 381.294 40.7661 381.294 cv
cp
f
40.7661 377.632 mo
36.5933 377.632 33.0337 374.374 32.3716 370.232 cv
32.9629 369.642 33.5542 369.051 34.145 368.459 cv
33.5977 367.912 33.0508 367.364 32.5034 366.817 cv
33.4209 363.017 36.8188 360.101 40.7661 360.101 cv
44.7129 360.101 48.0894 363.017 49.0005 366.817 cv
48.4531 367.364 47.9058 367.912 47.3584 368.459 cv
47.9492 369.05 48.54 369.641 49.1313 370.232 cv
48.4741 374.374 44.939 377.632 40.7661 377.632 cv
cp
50.9448 366.681 mo
49.9292 361.963 45.6973 358.32 40.7661 358.32 cv
35.8613 358.32 31.5903 361.961 30.5625 366.677 cv
29.9683 367.271 29.3745 367.865 28.7803 368.459 cv
29.3223 369.002 29.8647 369.544 30.4067 370.086 cv
31.0366 375.255 35.54 379.413 40.7661 379.413 cv
46.019 379.413 50.4756 375.254 51.0977 370.085 cv
51.6396 369.543 52.1816 369.001 52.7231 368.459 cv
52.1304 367.866 51.5376 367.273 50.9448 366.681 cv
cp
f
84.3848 380.258 mo
88.6885 380.258 li
88.6885 370.736 li
90.9175 368.505 li
88.6885 366.274 li
88.6885 357.474 li
84.3848 357.474 li
84.3848 366.274 li
82.1558 368.505 li
84.3848 370.736 li
84.3848 380.258 li
cp
89.3672 380.938 mo
83.7056 380.938 li
83.7056 371.018 li
81.1958 368.505 li
83.7056 365.993 li
83.7056 356.794 li
89.3672 356.794 li
89.3672 365.993 li
91.8774 368.505 li
89.3672 371.018 li
89.3672 380.938 li
cp
f
87.4858 366.771 mo
87.4858 358.676 li
85.5874 358.676 li
85.5874 366.771 li
85.0098 367.35 84.4316 367.927 83.854 368.505 cv
84.4316 369.083 85.0098 369.66 85.5874 370.238 cv
85.5874 379.057 li
87.4858 379.057 li
87.4858 370.238 li
88.0635 369.66 88.6416 369.083 89.2192 368.505 cv
88.6416 367.927 88.0635 367.35 87.4858 366.771 cv
cp
f
124.248 380.258 mo
128.551 380.258 li
128.551 370.736 li
130.781 368.505 li
128.551 366.274 li
128.551 357.474 li
124.248 357.474 li
124.248 366.274 li
122.019 368.505 li
124.248 370.736 li
124.248 380.258 li
cp
129.23 380.938 mo
123.569 380.938 li
123.569 371.018 li
121.059 368.505 li
123.569 365.993 li
123.569 356.794 li
129.23 356.794 li
129.23 365.993 li
131.741 368.505 li
129.23 371.018 li
129.23 380.938 li
cp
f
127.349 366.771 mo
127.349 358.676 li
125.451 358.676 li
125.451 366.771 li
124.873 367.35 124.295 367.927 123.717 368.505 cv
124.295 369.083 124.873 369.66 125.451 370.238 cv
125.451 379.057 li
127.349 379.057 li
127.349 370.238 li
127.927 369.66 128.504 369.083 129.083 368.505 cv
128.504 367.927 127.927 367.35 127.349 366.771 cv
cp
f
153.123 380.258 mo
156.823 380.258 li
156.823 370.952 li
159.271 368.505 li
156.823 366.058 li
156.823 357.474 li
152.52 357.474 li
152.52 372.382 li
141.269 357.474 li
137.569 357.474 li
137.569 366.058 li
135.12 368.505 li
137.569 370.952 li
137.569 380.258 li
141.872 380.258 li
141.872 365.352 li
153.123 380.258 li
cp
157.501 380.938 mo
152.785 380.938 li
142.551 367.377 li
142.551 380.938 li
136.89 380.938 li
136.89 371.233 li
134.16 368.505 li
136.89 365.776 li
136.89 356.794 li
141.606 356.794 li
151.841 370.355 li
151.841 356.794 li
157.501 356.794 li
157.501 365.776 li
160.231 368.505 li
157.501 371.233 li
157.501 380.938 li
cp
f
155.621 366.555 mo
155.621 358.676 li
153.722 358.676 li
153.722 375.972 li
140.669 358.676 li
138.771 358.676 li
138.771 366.555 li
138.121 367.205 137.471 367.854 136.821 368.505 cv
137.471 369.155 138.121 369.806 138.771 370.455 cv
138.771 379.057 li
140.669 379.057 li
140.669 361.761 li
153.722 379.057 li
155.621 379.057 li
155.621 370.455 li
156.271 369.806 156.921 369.155 157.571 368.505 cv
156.921 367.854 156.271 367.205 155.621 366.555 cv
cp
f
171.404 370.53 mo
175.665 370.53 li
173.535 365.69 li
171.404 370.53 li
cp
176.706 371.21 mo
170.363 371.21 li
173.535 364.004 li
176.706 371.21 li
cp
180.701 380.258 mo
185.407 380.258 li
181.146 370.601 li
183.669 368.174 li
179.131 366.03 li
175.357 357.474 li
171.714 357.474 li
167.828 366.283 li
163.825 368.174 li
166.05 370.314 li
161.664 380.258 li
166.37 380.258 li
168.476 375.453 li
178.595 375.453 li
180.701 380.258 li
cp
186.448 380.938 mo
180.257 380.938 li
178.15 376.132 li
168.92 376.132 li
166.814 380.938 li
160.623 380.938 li
165.237 370.474 li
162.645 367.98 li
167.31 365.776 li
171.271 356.794 li
175.8 356.794 li
179.649 365.523 li
184.85 367.98 li
181.959 370.76 li
186.448 380.938 li
cp
f
168.521 372.412 mo
173.535 361.021 li
178.548 372.412 li
168.521 372.412 li
cp
181.578 368.518 mo
180.456 367.986 179.333 367.455 178.211 366.924 cv
174.574 358.676 li
172.497 358.676 li
168.748 367.178 li
167.804 367.624 166.86 368.071 165.916 368.518 cv
166.441 369.021 166.965 369.526 167.489 370.03 cv
163.508 379.057 li
165.585 379.057 li
167.691 374.251 li
179.379 374.251 li
181.486 379.057 li
183.562 379.057 li
179.707 370.315 li
180.331 369.716 180.954 369.117 181.578 368.518 cv
cp
f
318.917 251.876 mo
321.009 253.968 323.101 256.06 325.192 258.151 cv
327.284 256.06 329.376 253.968 331.468 251.876 cv
327.284 251.876 323.101 251.876 318.917 251.876 cv
cp
level3{
gsave
clp
[-52.6667 -70.0001 70.0001 -52.6667 340.534 272.266 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6667 -70.0001 70.0001 -52.6667 340.534 272.266 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
325.338 271.162 mo
312.592 258.415 li
269.519 258.415 li
269.519 256.379 li
313.435 256.379 li
325.338 268.282 li
337.236 256.383 li
380.892 256.383 li
380.892 258.419 li
338.079 258.419 li
325.338 271.162 li
cp
level3{
gsave
clp
[-52.6667 -70 70 -52.6667 337.888 274.257 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6667 -70 70 -52.6667 337.888 274.257 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.883 250.296 mo
395.883 251.74 li
335.314 251.74 li
325.338 261.717 li
315.362 251.701 li
254.118 251.701 li
254.118 250.296 li
249.354 250.296 li
249.354 255.06 li
254.118 255.06 li
254.118 253.738 li
314.516 253.738 li
325.338 264.598 li
336.158 253.777 li
395.883 253.777 li
395.883 255.06 li
400.646 255.06 li
400.646 250.296 li
395.883 250.296 li
cp
level3{
gsave
clp
[-52.6666 -70 70 -52.6666 340.026 272.648 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6666 -70 70 -52.6666 340.026 272.648 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
333.996 193.529 mo
330.954 200.677 327.911 207.842 324.869 214.99 cv
324.578 214.99 li
321.554 207.859 318.511 200.729 315.487 193.599 cv
318.584 190.642 321.681 187.685 324.778 184.729 cv
333.996 193.529 li
cp
level3{
gsave
clp
[-52.6666 -69.9999 69.9999 -52.6666 366.024 253.088 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6666 -69.9999 69.9999 -52.6666 366.024 253.088 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
321.699 214.99 mo
321.335 214.99 li
315.36 211.686 309.403 208.398 303.428 205.111 cv
313.429 195.563 li
314.084 197.094 319.586 210.051 321.699 214.99 cv
cp
level3{
gsave
clp
[-52.6666 -70 70 -52.6666 354.59 261.691 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6666 -70 70 -52.6666 354.59 261.691 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
316.544 214.99 mo
293.081 214.99 li
301.679 206.781 li
302.681 207.338 312.591 212.816 316.544 214.99 cv
cp
level3{
gsave
clp
[-52.6666 -70 70 -52.6666 345.241 268.725 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6666 -70 70 -52.6666 345.241 268.725 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
345.91 204.92 mo
339.825 208.277 333.723 211.633 327.639 214.99 cv
327.584 214.99 li
329.679 210.033 335.253 196.955 335.927 195.372 cv
339.261 198.555 342.595 201.738 345.91 204.92 cv
cp
level3{
gsave
clp
[-52.6669 -70.0004 70.0004 -52.6669 368.052 251.563 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6669 -70.0004 70.0004 -52.6669 368.052 251.563 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
356.458 214.99 mo
332.757 214.99 li
337.767 212.225 342.776 209.459 347.786 206.711 cv
348.733 207.616 356.458 214.99 356.458 214.99 cv
cp
level3{
gsave
clp
[-52.6668 -70.0002 70.0002 -52.6668 370.652 249.606 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6668 -70.0002 70.0002 -52.6668 370.652 249.606 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.883 211.886 mo
395.883 213.25 li
363.306 213.25 li
343.732 193.675 li
342.292 195.115 li
362.462 215.286 li
395.883 215.286 li
395.883 216.65 li
400.646 216.65 li
400.646 211.886 li
395.883 211.886 li
cp
level3{
gsave
clp
[-52.6666 -69.9999 69.9999 -52.6666 393.324 232.548 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6666 -69.9999 69.9999 -52.6666 393.324 232.548 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
307.709 195.115 mo
306.27 193.675 li
286.695 213.25 li
254.118 213.25 li
254.118 211.886 li
249.354 211.886 li
249.354 216.65 li
254.118 216.65 li
254.118 215.286 li
287.538 215.286 li
307.709 195.115 li
cp
level3{
gsave
clp
[-52.6667 -70 70 -52.6667 332.836 278.058 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6667 -70 70 -52.6667 332.836 278.058 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
340.156 193.353 mo
339.938 193.353 339.721 193.312 339.531 193.23 cv
339.327 193.148 339.15 193.026 339.001 192.878 cv
338.839 192.728 338.73 192.552 338.648 192.347 cv
338.553 192.158 338.513 191.94 338.513 191.723 cv
338.513 191.303 338.689 190.881 339.001 190.569 cv
339.07 190.501 339.15 190.433 339.246 190.378 cv
339.327 190.311 339.423 190.256 339.531 190.215 cv
339.626 190.175 339.721 190.147 339.83 190.134 cv
340.034 190.093 340.25 190.093 340.468 190.134 cv
340.576 190.147 340.672 190.175 340.768 190.215 cv
340.876 190.256 340.97 190.311 341.053 190.378 cv
341.146 190.433 341.229 190.501 341.296 190.569 cv
341.607 190.881 341.771 191.303 341.771 191.723 cv
341.771 191.94 341.731 192.158 341.649 192.347 cv
341.568 192.552 341.459 192.728 341.296 192.878 cv
341.146 193.026 340.97 193.148 340.768 193.23 cv
340.576 193.312 340.358 193.353 340.156 193.353 cv
cp
level3{
gsave
clp
[-52.667 -70.0005 70.0005 -52.667 378.981 243.34 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.667 -70.0005 70.0005 -52.667 378.981 243.34 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
328.954 183.739 mo
328.288 183.127 328.233 182.096 328.845 181.43 cv
329.456 180.765 330.475 180.725 331.153 181.321 cv
331.805 181.933 331.859 182.964 331.248 183.63 cv
330.937 183.983 330.488 184.159 330.053 184.159 cv
329.659 184.159 329.266 184.024 328.954 183.739 cv
cp
334.005 188.328 mo
333.339 187.731 333.284 186.699 333.896 186.034 cv
334.494 185.369 335.525 185.314 336.191 185.925 cv
336.855 186.535 336.91 187.568 336.3 188.22 cv
335.987 188.572 335.539 188.763 335.091 188.763 cv
334.711 188.763 334.317 188.613 334.005 188.328 cv
cp
level3{
gsave
clp
[-52.6667 -70.0001 70.0001 -52.6667 377.456 244.487 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6667 -70.0001 70.0001 -52.6667 377.456 244.487 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
325.002 179.57 mo
324.567 179.57 324.16 179.394 323.849 179.082 cv
323.699 178.932 323.577 178.755 323.495 178.566 cv
323.414 178.362 323.373 178.158 323.373 177.941 cv
323.373 177.506 323.549 177.085 323.849 176.787 cv
324.214 176.406 324.785 176.229 325.314 176.338 cv
325.422 176.352 325.531 176.393 325.626 176.434 cv
325.722 176.475 325.816 176.515 325.898 176.583 cv
325.993 176.637 326.075 176.706 326.156 176.787 cv
326.225 176.854 326.292 176.937 326.36 177.03 cv
326.414 177.126 326.469 177.208 326.51 177.315 cv
326.55 177.411 326.577 177.52 326.604 177.615 cv
326.618 177.724 326.632 177.833 326.632 177.941 cv
326.632 178.158 326.591 178.362 326.51 178.566 cv
326.428 178.755 326.306 178.932 326.156 179.082 cv
325.993 179.245 325.816 179.353 325.626 179.448 cv
325.422 179.53 325.22 179.57 325.002 179.57 cv
cp
level3{
gsave
clp
[-52.6667 -70.0001 70.0001 -52.6667 375.936 245.631 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6667 -70.0001 70.0001 -52.6667 375.936 245.631 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
318.77 183.671 mo
318.185 182.992 318.239 181.96 318.918 181.363 cv
319.597 180.765 320.63 180.833 321.227 181.512 cv
321.812 182.191 321.757 183.21 321.079 183.807 cv
320.766 184.092 320.385 184.213 320.006 184.213 cv
319.543 184.213 319.096 184.037 318.77 183.671 cv
cp
313.624 188.152 mo
313.025 187.473 313.093 186.441 313.772 185.843 cv
314.451 185.247 315.469 185.314 316.067 185.993 cv
316.666 186.672 316.597 187.704 315.932 188.302 cv
315.619 188.572 315.239 188.695 314.845 188.695 cv
314.398 188.695 313.95 188.518 313.624 188.152 cv
cp
level3{
gsave
clp
[-52.667 -70.0004 70.0004 -52.667 367.784 251.765 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.667 -70.0004 70.0004 -52.667 367.784 251.765 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
309.849 193.353 mo
309.414 193.353 309.006 193.189 308.695 192.878 cv
308.545 192.728 308.423 192.552 308.341 192.347 cv
308.26 192.158 308.219 191.94 308.219 191.723 cv
308.219 191.303 308.395 190.881 308.695 190.569 cv
308.776 190.501 308.858 190.433 308.952 190.378 cv
309.034 190.311 309.128 190.256 309.224 190.215 cv
309.333 190.175 309.428 190.147 309.537 190.134 cv
310.066 190.025 310.623 190.202 311.003 190.569 cv
311.302 190.881 311.478 191.303 311.478 191.723 cv
311.478 191.94 311.437 192.158 311.356 192.347 cv
311.274 192.552 311.152 192.728 311.003 192.878 cv
310.69 193.189 310.283 193.353 309.849 193.353 cv
cp
level3{
gsave
clp
[-52.6668 -70.0002 70.0002 -52.6668 359.633 257.897 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6668 -70.0002 70.0002 -52.6668 359.633 257.897 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
254.775 208.343 mo
254.775 207.434 255.494 206.713 256.403 206.713 cv
257.299 206.713 258.033 207.434 258.033 208.343 cv
258.033 209.239 257.299 209.973 256.403 209.973 cv
255.494 209.973 254.775 209.239 254.775 208.343 cv
cp
261.564 208.343 mo
261.564 207.434 262.283 206.713 263.192 206.713 cv
264.089 206.713 264.809 207.434 264.809 208.343 cv
264.809 209.239 264.089 209.973 263.192 209.973 cv
262.283 209.973 261.564 209.239 261.564 208.343 cv
cp
268.353 208.343 mo
268.353 207.434 269.072 206.713 269.981 206.713 cv
270.878 206.713 271.611 207.434 271.611 208.343 cv
271.611 209.239 270.878 209.973 269.981 209.973 cv
269.072 209.973 268.353 209.239 268.353 208.343 cv
cp
275.143 208.343 mo
275.143 207.447 275.861 206.713 276.771 206.713 cv
277.667 206.713 278.4 207.447 278.4 208.343 cv
278.4 209.239 277.667 209.973 276.771 209.973 cv
275.861 209.973 275.143 209.239 275.143 208.343 cv
cp
281.932 208.343 mo
281.932 207.434 282.65 206.713 283.56 206.713 cv
284.457 206.713 285.189 207.434 285.189 208.343 cv
285.189 209.239 284.457 209.973 283.56 209.973 cv
282.65 209.973 281.932 209.239 281.932 208.343 cv
cp
level3{
gsave
clp
[-52.6664 -69.9997 69.9997 -52.6664 326.194 283.055 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6664 -69.9997 69.9997 -52.6664 326.194 283.055 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
371.807 206.713 mo
371.82 206.713 371.82 206.713 371.82 206.713 cv
371.82 206.713 371.82 206.713 371.807 206.713 cv
cp
363.402 208.343 mo
363.402 207.434 364.121 206.713 365.031 206.713 cv
365.927 206.713 366.66 207.434 366.66 208.343 cv
366.66 209.239 365.927 209.973 365.031 209.973 cv
364.121 209.973 363.402 209.239 363.402 208.343 cv
cp
370.191 208.343 mo
370.191 207.447 370.91 206.713 371.82 206.713 cv
372.717 206.713 373.449 207.447 373.449 208.343 cv
373.449 209.239 372.717 209.973 371.807 209.973 cv
370.91 209.973 370.191 209.239 370.191 208.343 cv
cp
376.98 208.343 mo
376.98 207.434 377.699 206.713 378.609 206.713 cv
379.506 206.713 380.239 207.434 380.239 208.343 cv
380.239 209.239 379.506 209.973 378.609 209.973 cv
377.699 209.973 376.98 209.239 376.98 208.343 cv
cp
383.771 208.343 mo
383.771 207.434 384.489 206.713 385.398 206.713 cv
386.295 206.713 387.028 207.434 387.028 208.343 cv
387.028 209.239 386.295 209.973 385.398 209.973 cv
384.489 209.973 383.771 209.239 383.771 208.343 cv
cp
390.56 208.343 mo
390.56 207.434 391.278 206.713 392.188 206.713 cv
393.084 206.713 393.817 207.434 393.817 208.343 cv
393.817 209.239 393.084 209.973 392.188 209.973 cv
391.278 209.973 390.56 209.239 390.56 208.343 cv
cp
level3{
gsave
clp
[-52.6666 -69.9999 69.9999 -52.6666 395.557 230.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.6666 -69.9999 69.9999 -52.6666 395.557 230.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
239.975 232.446 mo
244.249 232.446 li
246.144 232.446 248.167 231.73 248.167 229.719 cv
248.167 227.686 246.144 226.962 244.249 226.962 cv
239.975 226.962 li
239.975 232.446 li
cp
244.249 233.125 mo
239.296 233.125 li
239.296 226.283 li
244.249 226.283 li
246.471 226.283 248.846 227.186 248.846 229.719 cv
248.846 232.23 246.471 233.125 244.249 233.125 cv
cp
234.976 244.916 mo
239.296 244.916 li
239.296 237.356 li
244.578 237.356 li
249.473 237.356 253.167 234.073 253.167 229.719 cv
253.167 225.348 249.473 222.052 244.578 222.052 cv
234.976 222.052 li
234.976 230.153 li
232.136 232.994 li
234.976 235.834 li
234.976 244.916 li
cp
239.975 245.595 mo
234.297 245.595 li
234.297 236.115 li
231.176 232.994 li
234.297 229.872 li
234.297 221.373 li
244.578 221.373 li
249.86 221.373 253.845 224.961 253.845 229.719 cv
253.845 234.461 249.86 238.035 244.578 238.035 cv
239.975 238.035 li
239.975 245.595 li
cp
1 1 1 rgb
f
244.25 234.333 mo
238.088 234.333 li
238.088 225.075 li
244.25 225.075 li
247.673 225.075 250.054 226.86 250.054 229.719 cv
250.054 232.547 247.673 234.333 244.25 234.333 cv
cp
244.577 223.259 mo
236.183 223.259 li
236.183 230.654 li
235.403 231.435 234.623 232.214 233.843 232.994 cv
234.623 233.774 235.403 234.555 236.183 235.335 cv
236.183 243.709 li
238.088 243.709 li
238.088 236.148 li
244.577 236.148 li
248.774 236.148 251.959 233.499 251.959 229.719 cv
251.959 225.938 248.774 223.259 244.577 223.259 cv
cp
f
258.476 244.916 mo
274.167 244.916 li
274.167 240.685 li
262.796 240.685 li
262.796 235.192 li
265.013 232.98 li
262.796 230.765 li
262.796 222.052 li
258.476 222.052 li
258.476 230.715 li
256.209 232.98 li
258.476 235.243 li
258.476 244.916 li
cp
274.845 245.595 mo
257.797 245.595 li
257.797 235.523 li
255.25 232.98 li
257.797 230.434 li
257.797 221.373 li
263.475 221.373 li
263.475 230.483 li
265.973 232.98 li
263.475 235.474 li
263.475 240.006 li
274.845 240.006 li
274.845 245.595 li
cp
f
261.589 234.692 mo
262.16 234.121 262.731 233.55 263.303 232.979 cv
262.731 232.407 262.16 231.836 261.589 231.265 cv
261.589 223.259 li
259.684 223.259 li
259.684 231.215 li
259.096 231.803 258.508 232.391 257.919 232.979 cv
258.508 233.566 259.096 234.154 259.684 234.743 cv
259.684 243.709 li
272.959 243.709 li
272.959 241.893 li
261.589 241.893 li
261.589 234.692 li
cp
f
309.573 244.916 mo
313.893 244.916 li
313.893 235.562 li
316.331 233.122 li
313.893 230.68 li
313.893 226.283 li
320.977 226.283 li
320.977 222.052 li
302.489 222.052 li
302.489 226.283 li
309.573 226.283 li
309.573 230.68 li
307.134 233.122 li
309.573 235.562 li
309.573 244.916 li
cp
314.572 245.595 mo
308.894 245.595 li
308.894 235.842 li
306.174 233.122 li
308.894 230.398 li
308.894 226.962 li
301.81 226.962 li
301.81 221.373 li
321.655 221.373 li
321.655 226.962 li
314.572 226.962 li
314.572 230.398 li
317.292 233.122 li
314.572 235.842 li
314.572 245.595 li
cp
f
303.696 225.075 mo
310.78 225.075 li
310.78 231.18 li
310.133 231.827 309.486 232.474 308.84 233.12 cv
309.486 233.768 310.133 234.414 310.78 235.061 cv
310.78 243.709 li
312.685 243.709 li
312.685 235.061 li
313.332 234.414 313.979 233.768 314.625 233.12 cv
313.979 232.474 313.332 231.827 312.685 231.18 cv
312.685 225.075 li
319.769 225.075 li
319.769 223.259 li
303.696 223.259 li
303.696 225.075 li
cp
f
326.446 244.916 mo
330.767 244.916 li
330.767 235.359 li
333.006 233.121 li
330.767 230.883 li
330.767 222.052 li
326.446 222.052 li
326.446 230.883 li
324.208 233.121 li
326.446 235.359 li
326.446 244.916 li
cp
331.445 245.595 mo
325.767 245.595 li
325.767 235.641 li
323.248 233.121 li
325.767 230.602 li
325.767 221.373 li
331.445 221.373 li
331.445 230.602 li
333.966 233.121 li
331.445 235.641 li
331.445 245.595 li
cp
f
329.56 231.382 mo
329.56 223.259 li
327.654 223.259 li
327.654 231.382 li
327.074 231.962 326.494 232.541 325.915 233.121 cv
326.494 233.701 327.074 234.28 327.654 234.86 cv
327.654 243.709 li
329.56 243.709 li
329.56 234.86 li
330.139 234.28 330.719 233.701 331.298 233.121 cv
330.719 232.541 330.139 231.962 329.56 231.382 cv
cp
f
355.421 244.916 mo
359.136 244.916 li
359.136 235.578 li
361.589 233.121 li
359.136 230.664 li
359.136 222.052 li
354.815 222.052 li
354.815 237.008 li
343.525 222.052 li
339.813 222.052 li
339.813 230.664 li
337.359 233.121 li
339.813 235.578 li
339.813 244.916 li
344.133 244.916 li
344.133 229.96 li
355.421 244.916 li
cp
359.814 245.595 mo
355.082 245.595 li
344.812 231.986 li
344.812 245.595 li
339.134 245.595 li
339.134 235.859 li
336.399 233.121 li
339.134 230.383 li
339.134 221.373 li
343.865 221.373 li
354.136 234.981 li
354.136 221.373 li
359.814 221.373 li
359.814 230.383 li
362.549 233.121 li
359.814 235.859 li
359.814 245.595 li
cp
f
357.928 231.164 mo
357.928 223.259 li
356.022 223.259 li
356.022 240.613 li
342.925 223.259 li
341.02 223.259 li
341.02 231.164 li
340.368 231.816 339.715 232.469 339.063 233.121 cv
339.715 233.773 340.368 234.426 341.02 235.078 cv
341.02 243.709 li
342.925 243.709 li
342.925 226.354 li
356.022 243.709 li
357.928 243.709 li
357.928 235.078 li
358.579 234.426 359.231 233.773 359.884 233.121 cv
359.231 232.469 358.579 231.816 357.928 231.164 cv
cp
f
364.458 233.075 mo
366.712 235.329 li
366.712 235.468 li
366.729 241.15 370.74 245.274 376.254 245.274 cv
381.768 245.274 385.78 241.15 385.798 235.468 cv
385.798 235.329 li
388.052 233.075 li
385.798 230.82 li
385.798 222.052 li
381.478 222.052 li
381.478 230.851 li
379.25 233.073 li
381.478 235.3 li
381.478 235.44 li
381.474 238.774 379.325 241.103 376.254 241.103 cv
373.182 241.103 371.035 238.774 371.032 235.44 cv
371.032 235.3 li
373.259 233.073 li
371.032 230.851 li
371.032 222.052 li
366.712 222.052 li
366.712 230.82 li
364.458 233.075 li
cp
376.254 245.953 mo
370.395 245.953 366.117 241.613 366.034 235.611 cv
363.498 233.075 li
366.033 230.539 li
366.033 221.373 li
371.711 221.373 li
371.711 230.57 li
374.219 233.073 li
371.713 235.58 li
371.773 238.438 373.625 240.424 376.254 240.424 cv
378.884 240.424 380.735 238.438 380.797 235.58 cv
378.29 233.073 li
380.799 230.57 li
380.799 221.373 li
386.477 221.373 li
386.477 230.539 li
389.012 233.075 li
386.476 235.611 li
386.392 241.613 382.114 245.953 376.254 245.953 cv
cp
f
384.59 231.321 mo
384.59 223.259 li
382.685 223.259 li
382.685 231.35 li
382.109 231.925 381.535 232.5 380.96 233.074 cv
381.535 233.649 382.109 234.225 382.685 234.799 cv
382.685 235.435 li
382.685 239.453 380.006 242.31 376.255 242.31 cv
372.505 242.31 369.824 239.453 369.824 235.435 cv
369.824 234.799 li
370.399 234.225 370.975 233.649 371.55 233.074 cv
370.975 232.5 370.399 231.925 369.824 231.35 cv
369.824 223.259 li
367.92 223.259 li
367.92 231.321 li
367.335 231.905 366.751 232.49 366.166 233.074 cv
366.751 233.659 367.335 234.243 367.92 234.828 cv
367.92 235.435 li
367.92 240.494 371.373 244.067 376.255 244.067 cv
381.138 244.067 384.59 240.494 384.59 235.435 cv
384.59 234.828 li
385.174 234.243 385.759 233.659 386.343 233.074 cv
385.759 232.49 385.174 231.905 384.59 231.321 cv
cp
f
410.878 244.916 mo
415.198 244.916 li
415.198 235.741 li
417.865 233.075 li
415.198 230.408 li
415.198 222.052 li
411.36 222.052 li
404.286 235.336 li
397.212 222.052 li
393.374 222.052 li
393.374 230.43 li
390.73 233.073 li
393.374 235.72 li
393.374 244.916 li
397.694 244.916 li
397.694 232.146 li
404.286 244.522 li
410.878 232.144 li
410.878 244.916 li
cp
404.286 245.968 mo
398.374 234.863 li
398.374 245.595 li
392.695 245.595 li
392.695 236.001 li
389.771 233.073 li
392.695 230.148 li
392.695 221.373 li
397.62 221.373 li
404.286 233.891 li
410.952 221.373 li
415.877 221.373 li
415.877 230.127 li
418.825 233.075 li
415.877 236.022 li
415.877 245.595 li
410.199 245.595 li
410.199 234.862 li
404.286 245.968 li
cp
f
416.158 233.074 mo
415.436 232.353 414.714 231.63 413.991 230.907 cv
413.991 223.259 li
412.086 223.259 li
404.286 237.904 li
396.487 223.259 li
394.582 223.259 li
394.582 230.929 li
393.867 231.644 393.151 232.359 392.437 233.074 cv
393.151 233.79 393.867 234.505 394.582 235.221 cv
394.582 243.709 li
396.487 243.709 li
396.487 227.308 li
404.286 241.953 li
412.086 227.308 li
412.086 243.709 li
413.991 243.709 li
413.991 235.241 li
414.714 234.52 415.436 233.797 416.158 233.074 cv
cp
f
287.897 235.155 mo
292.179 235.155 li
290.039 230.294 li
287.897 235.155 li
cp
293.219 235.834 mo
286.858 235.834 li
290.039 228.61 li
293.219 235.834 li
cp
297.227 244.916 mo
301.952 244.916 li
297.678 235.222 li
300.207 232.792 li
295.653 230.638 li
291.869 222.052 li
288.209 222.052 li
284.313 230.891 li
280.298 232.791 li
282.526 234.938 li
278.126 244.916 li
282.851 244.916 li
284.964 240.094 li
295.114 240.094 li
297.227 244.916 li
cp
302.994 245.595 mo
296.785 245.595 li
294.671 240.772 li
285.407 240.772 li
283.293 245.595 li
277.084 245.595 li
281.714 235.097 li
279.118 232.598 li
283.793 230.385 li
287.766 221.373 li
292.312 221.373 li
296.173 230.131 li
301.387 232.599 li
298.49 235.384 li
302.994 245.595 li
cp
f
285.007 237.042 mo
290.039 225.611 li
295.069 237.042 li
285.007 237.042 li
cp
298.109 233.133 mo
296.983 232.601 295.857 232.067 294.73 231.534 cv
291.081 223.259 li
288.998 223.259 li
285.235 231.788 li
284.289 232.236 283.341 232.685 282.394 233.133 cv
282.92 233.639 283.447 234.146 283.973 234.651 cv
279.978 243.709 li
282.062 243.709 li
284.175 238.887 li
295.903 238.887 li
298.017 243.709 li
300.1 243.709 li
296.232 234.938 li
296.857 234.336 297.483 233.734 298.109 233.133 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (\705\764\750\754 \722\763\760\752\750\755) ()
%%Title: (1903.m10.i010.n006.S.c10.319001252 Art deco label. Retro luxury geometric ornaments, vintage ornament frame and hipster decorative lines labels vector illustration set.eps)
%%CreationDate: 3/4/2019 5:13 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9RffC8Z_Y&""=\0HUY"0Nn#mYZVUXoSSl!l4lme+;PomI.$sc5LPH"E(0X##`W)Vp8V6b4;j:Fdls==V\>o[K7$r&7JZb
%^qlN8qlf,C6fgpXH`I]T!kinqVR071+ZDJc>q=%aG#D6r]tG.OrfW_$1T:^_UqiP&WnPdLW(NmIZk8>NQ].Z]),5$?SH'HPn;m2L
%DLC8p<mUmDN.:"tNZ.Cc:@<3()!Dp"HZ^IBLP0#S=aPDS.IrU6\OW6bi-tt1B-2Dj2#_.8Rm<U<6Dtj^Lbje1aXp)N3f;LAJ[PV*
%PVorf8BDUGX*+nr!_t?BfEh^X(ZE.u$iSMnXZ-<4`.]n'nVrL\5?J(dh-I/_'DbB+kQ#+OPKfuO(mImK,6A8]QRT6Aff&p-AIS`u
%W10+m/QM)WGWKPrNO"*@L&Z4DYq!Zh)"Sg/UFa=$!tgipUBJi^!aIi'AQY6,E)\[>;3]bPi<8t3,6-F**6M/^f$+L;oM/0W(FBo;
%%WIO*o2SkWp$8L'!U=\"\%".7B3JG=!F)II7[<K0]9(!]bo1k!YK@kn>>=LZl.??]#j^2i[rEnrOqD2ejrbHl\XD&e0VB!^&X&-K
%Bk!K4+O2_CMSg[C!KqJ!UX^T(NZ)-Xnn<c`^nqpZ;H9/i&X%YNAgu;Ai<*@73ulICJXGs4@h=X1hJqju!X`Ub3c`]$S>9JSB.d=0
%U1ZJCG.LgOC(3T22YnoG!!NXaW`@<Ec51j;]'-RrAFL*_k8H0RR],8]s#N*A`Eoib(G6cm>.8Y(XD!+`[3h-GU)^\*9-$`^)(c(G
%MJqu1'Nf^X.I*&XLe!nb2b+d)Q8!aiOeb8gBpM*;"3(M!2_U7f6O%sOiHNkO_t26a4^M)c>+m[d!R5^H?sJDopoF)&TCsE"TUVG]
%*bg3]i'D>PKEE/a!W6A",iF04L<oAOR=N[d](n]o[2'\<kgg7E=]K3/H2q=Ic1)UC0bB\Lbo(NG&C1T?)*hP*,<R4E'J7,A#S=Of
%lO.;9KGMdpo"uZb%KG&fY"O4u3`VVs>s-Q2K`sf8lUR<%/:PGV5aruumC#*Lco!s9s!*RD2HQ5,V:ohsCio3@U"c,U8'Y\Of*BYR
%f9/bAhhnGN(Jp?r!\-*0dZpO[_I]Q=%IC=S/@U,$X[q;^Ls\WjZW;Lm3N"Qt`^kOY91j_,<L6lHV%aL6DS$\*CRY)'5Z06.[TK&C
%bme/t-jpp@@Xh<?cki!e-C)X(\`(Nc,&$otRetV`C9#^"31Rm43<j!03%C"GTtre>5hkK05%<msE2cU\TE];OU'kMIdDECpb,Bl)
%_3i!B";4!lmjKJ^cM_L%j=s7VF**jH?R^7IOOkdI%0V.$3Wgu;W4,"m6piq+juB/Um<XR-bfXG\ZB8\GpZRJAf#maV7dViK5G`.t
%>YQ]#F6aJDZh>3PE$\RbUcH6loa?GbaVR9a/q[Bp'*MS7$cbGmS$M:Gqh2c8i[`uL<9^#^^0r^1J)U/??#%H0LGp]4iTTNU>,p0Q
%^a(lK^(Le"Y\i:7@+P=onWVdhf'W5QhlQdAj"!1SESodq[D-[.;:E?1nN4Hfq[:HB;_Q7"T^"`A"J%m!WS,:/^YO,JU42GVIM.NC
%9@5'Cf$OSPdId#tk;@3N4uKXnno67X27oF"d-k@LPBGc!fRl>%qY?fmdLZ0=;^8''JGb[3<[@?^YX]_irsf>/^H;;Nc0l'j\9[[-
%!9AVZqWBg[\,6]</*X?XDp6CHW9*1I(A-%QL4sfc7HV$s9@HPrG3:g*gh<\XQ1hbnEscY&JEGMaqQ0;G(ODTC-/YE:TXqlUHAicV
%0D,%qnV;c=,@K^G4an3%@A1^I+GPOj^C*V?kV3-lhU(;,`uYk>N.>;TkjdDHoS4K_@-@t]IWt_hcst#`IA+^MN]oGp(]hIgd,VU/
%kRTgGJ^>3Zr9j=^6B;`=pP0g)4aqnE0l$X#d,T>j*tWaW(r&<-ptbIqKcVIhps28;^G(%`ki$aH58eeBa8W,,&&0@h_9h4p+FJ=q
%n\O2!4S8-fIpX4Bph%+@%6aV!qo,8L#KZi)TndPYIrX\g#2EMV`#@KjT*m7U%U_d?T,s[RHl+\4O/r9ETmEJe6"=%]q54J&"+W\N
%)f'?2iofb=E[GuU@r68M89Tsbks9X4M*[n]j+ksAj9,kn8$O:l:QOFe"G6o_@t7ALmreI3NT'Eu5<k1gedib=p>\A#K$/-U1kObe
%IsqO@2'4f0m>HI?"IJ^CBEZB1rq$J<$HqqC&O=fp;T=dO)Hso]3k%0h15s:<NV[X:G<$OT4O=nhY.+(k$g;f,gGh7"hRmM?q`2B0
%]*(PaHa5VH>6No$65ZsR!Y@'dqTs\I)+);[osG`@bh[8$ASqgJ$qPAnF#8ViZmfG/l:$<335W)`#(PeF=O95l"!MHT$tJ\20ekSq
%1%Nnm)Tk;X$*c5GN.Hi[T,"ZOrj.2S#0+`,UdiQ(k%FGAD+Bqh#%jleUoH#GAQT!@WG0sQXN!c\TZ4!P=)Za7QNLlXY%tq1)cu>m
%6],V[fB';TLB`buVUG5?4fU<"/h7rmI.3`NO`b\/V,""5WYEM?d6g`1N5S\uX)qmrU(lj';9%<PC9jbBs,:r7\ML_Nn[-Pu:<,@"
%!qmqr/A&A97j<H_70^]-Hb8j"/sR0^g"?F'Gf&7l&*faAU%,:8Si:ljZfZ0K/NeR"F(kG8H8F-S!(J8p$H-%si+r3W43+=N=T83$
%LVNlCq>2gs_^1%1*(l/$i3.Zh#UKd'9r-^<-8Him;,CpS%*?AU,C*O':u\8NPS$HK9L;<:8OLTr">1sR?4=e>iLo[:@T4<`BX`cU
%U!pM^:gjVX0EabZ)lAR&(`!G`KkFjkif&C\P"F\s@7cc82oX2rY0+&"s2FPF%$rq(YTfQI;f!@K-Li#lJn$h5MK*W2J0K"_0$U4E
%GZ*><_ODi0TZ!N0:deOk>iO+?gf9m1r?[;Yq6Jp%r4L+b6M2$2(EbC'aI%Z=$YL4r(P=6Nr/`1?GVX8D@^tp;E)9YA(as&A.4?GU
%,+X::?7@;EZj9)ka.^H"4;9CWo9Eor.M3=j^c[GG18lsi+DK7Y%^\Y]k>H,R8^UA5'PYCIA8u$sTqP:Z&3Bs?@Km9tM454,9+^,[
%@NmJB[#;$,Lbof<,Xk&@5Y2?6ViVT\!PRJZ9]1Ij=C=-mTV.Ah.N&4N'i..d69H<M`VDJ0BB+rqcgd,Dk+hG6!^1kDK,,D,=EhUN
%0S/=%;)e7up9b(uaEpP7e0g8onPd(`%VtANh&)4E'JD$42d>$^9<>n9/T(F,1)L+eV^.f74bE%Q,m+=UGhNd/d'+3u]P+W*B&R^f
%bnA&c2"b_6<RP"<@WB;[:75;;d(:jm>Rn,Ybga:]NIg&f'J:MK1]\Rci1\O+WEmG8L^OeJ!okL;5se)r3\ino-1ho!<K_Msob:4,
%cstd+.u8TJ0523E/dN/er)m9L-o&%6+Klt[X\h?<"m?Oi1f@['gDF?MkmT0q/fa'U"$#>+_R^p#3[8-t(24C"ZjP57^`c95)2!MF
%!HjQ!@We55Amf(>+=7Q/#u"(9i$H6:QDq&>"+!Z??@a0"cf-=0csNHd!Pb(8_c&+0!lH^lL]`R^;rUQ'*g)#Y$?$a+0!&2L59arj
%+__9"dO^&cN\Y"\%AT.GXg;H9*CFc7Em-@>4E_HA>Su4+;(4&q8.Qu>7j'fY%s<P3LntYu+W3R^`^A^XYSNL5jM93E))JGTTPjQW
%8[EpNr;//BMrfbUitB65]f994NrfQN_,^g<DHIPqc&"!#)Z)l-6tArQ,6`/oV^dE?F5UT6i+aE@6=ESX?k4Ci,XLuH@O[=iPK'AT
%/.8U"NV+#GFPoT`&_S#Z:68NXgqFU*K%rU,>XB@@LBRAiBcq4)jBA5:^#fedV1oI7<2W#7bB;oPKej*P(/"[4$5pCh'_FrL`HkCi
%^I<_u[oL#u3a8W@/1F?q]`^A_FHp/WJi2M3UY0:CH[[\o#H1+#U^6=#)g"H31L(RLF<@S#8S)Q:I(5DD6u4iE$/r*K!>Pk%Knb1c
%La6AQOQ186!%8Nm:&6s$2lP!T[!#:_e!E<F26#]ac8)5J9e!:!m<9@?A)2(ID&8g&j:FtW-$aK/k)e)trQ_5'8u>mSAB]-@5sd`;
%Us#0ZP/Qdak]/,3_IM3G.#(<'Ya^Ii9lNEJbe+-!(rjs"DO/[,rc\dO@qpA80Ri[6D;40Gm6[4jLR%im@mGSd8RFcAn!D?CkdPlF
%D%T[4L>=NhDHI^ul51;Y0Ep#XA!@C1(=F`^#_JIt^U.,\]<HJ;m,BG]R&bIKB"ra7A<hr)H_4Vu71EX/&W);-*+_AH%EF8_*@#(p
%%(?KsU"_:gKZ[\67q22u3Cl!JT'7MgTsQmt(@3.\]aQ(e0W$$J/2Hp$EA9%(%NeQQ/A#Ka@\-_EAl@i\;6abOPPtK:*SP(DH@dmc
%'1Pk$V'M.(R07kj&e\5+![T*oY\^s&'k&F6TO^kS!ph3>b*4fJ&h#>_CaVhK=K)Tpi"Sp_+9k,($n5%aMih"OE'\Xc21uduF<4Y+
%_kJ+$?,X^fr.Z<OGQnZ,obn@B[/9f^?:tYqS&'"]^KhTU'Li;]"=$<+@B\BU'k-39dFIpm$nm,hI/q.m87Lj.+2C8\HN>\k"RMf9
%PqknA4>Oerj(s4ho#_g(/#-r5kdIJIn<10edo3L%Zsg2%3sGr%\_#eEK52KV72(cfH2no"iNOYh6^f8-A?^k/6&ZDkYW-cVVUPr[
%"K)JYW5pM/@2t3-3c>4CEBBE&_J99r<pIrr_*+iRji7Q:lp#f#OdM9H6f%fP7$QECa%R<]@.2J3$P<Wa9OElIq*.PJ&po1a#:QlQ
%%$8>PeOgF1fRo7>r]=nAl'14j)sra1J:0&jhm.V\_f)c,/(6SadmfXhb1Kn?e5;SlH8LjR@H`:Go]\=KB0f5eGROhk+qAG<AdD&h
%E#"bkBkO>0N?i2]'oF4Cj%p^5%*VW1JGF0.0SpID1k*ncC:,G"MJ#R=B+N@p--ae*ED1d*F,#mR=<CCB(U85!3)^=ofXjp'rPRAJ
%dYrb*"*bg1P/5b1p(d,!-I)@/&t?S6)^kIA,TlFGUR@9'$nQX\0$/<-Ak?&lAk>4"7q%Y*mmE5(Xk>iYRH99n*geJ:f9>b-/td_6
%Cq=$-UWfrn^`G<^LbP,GM5D71'#YaG2!,4D04?7%`!8jM7iNG>[_66&qXCBJ)=1uTBdAK<N.em4Xr"@0DPl_?$g0,j?8.9P']H]f
%R@8=Ik;aNU)<lDYCMdSk@BQlA6XYgc-0\RM-JC7HN[],g@`Qm'927'1[64i[dEodKJ&6S_+K7QYbO%m'RpIp-.(*q?cInf+\-d)N
%c0a"@<bU@^H.'ucJ7\qT))H=PNcr?D$V*9*BhtGh@V$&V1JR:4PZn`[42s"<jhRY)l#JR_%WRIKCQ\dWgLrVfAu/dl$+7P_EC>ip
%N_Y-UXe`Ilj@0Q6?;t:]mu>[C:GH1/@52"f,NG(7mk6AuK;*Q[nciCk(/'.R>RBBg,(@8uBo3G12e@Rrq3JokK#TQR##i^l-`i^t
%&NgGM<n`t[aq(HVdiO(bipDu:JCuPl=ZN^-Un)Na]G8=o0oEBgi@KiD`=mT<7J)gT?V-;0/e-F5nNL,]$$!dPAV9rjXM<`=3W>Q9
%dIm9UXPog6rgX6T%*N#k9;E;J&Y>dTK4?R[N51Ah/7qC]<jAsi0["'EB"_)cEJHTgiSngr-@KRqOl\q<SA,fncX)[@:#UPro\(N<
%"0C!jQAOqTQ<A#u9j?ngUU8d9@c+KCYB6)*4jbP#/,!NLECno1rfejYU00&3[%u67@2u<-,q!IK^aX),@7D$!@dN[l5#`NUTlgUQ
%Wdn+_ics"(_lErSNIW]a#Ej=;+RY*f)07[.D_1tP!/rIZZQ<N8!mEM&1F&!t!An+%^r=A(#WP$[a6Njt!SWsP!irPKEPL_/64GO-
%&C8@/l&Y&po`ZQJDYkrm?:95Jnh`b)j[ON4P_$'B>8n3$[j8JM+2+aoMnUbE:,7D[__i-SgL6548huQ#8Xq\*Bqi<UOI>,&0!iJY
%9.\@qhR0N2frNnu\aY3;?ncROb-CYLJX`74Mg2qBAj)s/V2*k)Xnl4[.g(+qc14jtg5^C^_utpPZ$;"jSM8l:d;lCp9?lCfQ#\JP
%(h'G.i^"1WN!Bia[Ff!M\C9SLO0RIb@`M=;/@`[c3G/+'fH?]7^Or%uZH%Oj[IShN`Y=mq/76r&/TWY:cGHP30J=kk=Q3^`O=<K6
%-gZO9A14O5?mC%Dm9n2kd:BbEY,*Of+c>PfLe;1/dohP`(8D"R8]iITZ4s5QhGm\Ea;Td&'Y:JE!t+r94cZ]:iF8h%0Bf<P&T%(P
%R*UI?]Em*+T&8ih:/d2q>)]eRj.$95HV)Mh/-c>0,2#nn^+q1p@sSOTf_:l59Y\L3lGm-D7%l,h(Em6I>W)4M)2j.8V*WtG/80^,
%]o.J%NRtWfkTocT$\LV>A$&=H<\9l$$uc\bDrPaP%f=G:9S'P"B_k>.=MCe*H\$aekn^Y407sog/De>ni2%L%E/E#O/5F^7nIFiK
%\UU(=/61DNVSOQSA#GI)Mj0HAOj[>OE%b/$(FmnR@\pV?8XM+Q!!iM![;b@]?91`H:>u&lO;D6kZsL#@.&P>f"o\'Ehi*@B>_VSp
%cHC6^b[je]+Coh,`mUlp]P@4Mp-KReSP_iFPdjk*\/9:HAt?q7GU-V&-L_Xk$AWLICibn[.AZP$`;ZDmo)1Z4]mJeqnnuR[.I5?U
%[GXHa2?@coQ/L,7$Mos5ReujVE]s;U=jLP2lRW.M(4lDuTr7P>"(5h'"(u8'c+T3T`bfl+Z?P'LW84smcYd"*]UJ_9NEs$GB4L9b
%B$[2.8mqMNn_V%H]lu+kgRH^5nVFH#Ah9MkbKn1k)+SuH[QhRo6qNF$\H!4q/gu<;:GUjQP%ESS_3-'rT5?j53<FV:@g!gMhucF;
%0nr..\0(k:E='u6HBc7h(Nh+6&S)$`&3P91!f/eOTark=*iE`Mgk@`60g#aaG_iXB>`/Y4MF/a2&Vr/=L5W;h\A"Ul'.OAEJc`[L
%i<*`b&Z8/8I>s_%!2mkHkSYI)&`C2J`,h^nT&8ePJ:o33(kp)P!N\+EM;gK%2'tj$1_K#lBFU>+E<mC9r]J$:%9dgX1la3#VXM_)
%1gsos!r#2@L]^M(4G9mTELM`JGQa=g,Bi"(?D*EH"6_?Yj[$E^3"dQkE)5ZKp1qOf"6qH">s=#5MGs$^k#?qB8b?*sr0S!1Fbmas
%#YkH-;ZR*b--f?gQAX,+h/53eXA9L!+>k+UG]O9\@ekn$']pVY3]%+ns6%`[0c4a;j9rP0@mD#c$ntYF-TM\t^Tq'B:2k*l@#d44
%2_rCZkQ_AliZr+]e,eil\$/@b:RK@$o21g4o59ulW\.!OH%P1`Ag2I\L-BPZ_6>X]%^#GQE_$cC.Mh+PQp_a(^YP4['?qJ<BDEC(
%5&`@4JSb$i+r:?l6Vf"c,0l4f$oLHc*dE.3*tsr"Zp`j#:n9Bf5L*2pGG,n?3a3D>EMUe\L1J;$="mRK#GeQecI+0F5pDj&\su%(
%N\MrCNeJQ,S@XCrR2F)Kd:;C&5]0<e]6tii`0>?CX*&pXfLPRqKQ/_jF-'8K%XR']VYrNZ"lF4D:=$>RN'F3SHkML9ru,rm40\ES
%6Z']ZLt(\Q9!R-5gS)Ce<"sF[lE+!b.;E"PS%&Y;fK<nlS;ZT,k8/FI%U<8fnDf+*%i5TW2KLQ=Zg)Dt6W1O.P6sb`5:1,9jegN]
%l2jYNg)Jq&-$UQUit8?69"!7?JWj+(]?p)#bclqGj71HkccAn(Uk'%Eb^,I8+2<2rna$'K&<:'<BnERL$8Kg5@#,V>4D%4=#AU3c
%L-Gef9gs6:H>u%^FLg4-r?r2WiciXh;p0:tr7J&i.(+%Xo^G.2MV_;/]9&f-A(Bp(/kR/KLG,IYQ+m\S`.)&mDO0ARa;M,"U1JQJ
%4mEYbf^YmSV7)oAjnCB8mRMQreG#qYL1*?-_I1$7,j33BRLAc8oC+>1KH@K[%S<cKj!X!bQlDsgGO\p5lfoel^j&>=&">HcIud<>
%I]lZ=K>oU!kf&2NG'QYoNL&/8V]#:AQTkTV%TULNYaLY)JaI_n2im=fOkjY_A00EPG@\b<,J/532a*:o%sFMTaKD71!.oO".IGfF
%m<iH'k+UTn[$uhoo?_@rg<E!siE3BRJ0k,&G3-p2]BXjK4)UY:N"6OKN6g^`Ar_0l%h9u26eP'&J9KYJBH<SgR<@XB1ftQ[jbhJ+
%Y$sNMHqTbdWNI>tk,S<,dI]-,G2ZEoKh_A)nS#C2V<MK98s3@=K:dPLj&Gt0Ua5W2oZP;Q5[`6,FIs_P;=hCrdcH5W_oFlj-<:!n
%>kK%i-U;QJ7"Ah,0A6RuCr9o\IiC!C`oDk>qCsL$`GZ-qI.1MUD+jF5CDlfZ/L2BIc!;1>,G/K8a(!Uus8+(CV+Q3fEi!eZkpSoQ
%d=[lnot.GCC4<P%<%<#0>ugG/$[=.NCBu.BQ%grR-SX7-W^D2eBhWO;IWCq>Pl*m'T.&qK\`p9r]f?KeD:PF"aC+dQ]!%,dr`&mV
%5jGf4MUW>q@l;q#@-04n,qGa4d2f*kVGXo"'Uq[\rX\1%B/>Z1Bj*dMPtnG)GPo\,e7o(-afqaA#<m++q[oA[oo5*5%ig>+m!<VY
%-6%_KF615hS8;N+rSTq:L7HSKRIon;s3DS)Bj?JhTIK^CO+-8^T#l:Y7`>5M'jLiuq&8gO%=,[Br7,T(5&QjYY9D6DOM?&M)6G#S
%4u+DT2<=QOo%.%V[#.NhgHMa]I,4S47qKDP4C:%UOIE?lce"/'d$_'V:I@`j^2?&13hWQR.U>8_-;BI<pa)u@p2`>_._6!).RZmt
%l>%-9\&#P-H9MBn@oeds'>fF"T3:Jq0u;K[*0u5ecB#$aWVpZGL(E%geLTSTq*iJ2IDWDfU`1W;>&^&VS)+Pk43s#51M$(cfl&iM
%gJqOFS(jV.j_`?Y8laXFTkLI]g",9U[\c^BTo4-deCh=.c?qXaoDI9,eE6S5H2_Wa7hP?t:a#_;1qLD]6*b9T(S>\2d#h?'jthGJ
%Wr(%TRZrE!g/EJKKPgWY5]EB9C9$<nAG^OC/qN<7B5;!@GVHIo1R][6-9;1dCOSsf9E3HBLVQtlYJ82g+m?hP=O;L>D;!fWSp6YN
%?KR*2H/`C)&hdjc`CRY/=W!ZYR3u>'M3iMIAY+.7-XPqlQX5?XM3m\[HaC')B4;KE3A]T]l3u+b*EFna.BsCl2=W,]q7X9OW!R)0
%^^=*+A0kf#%Vm!5JY+_2k%@[f`"'nG5HDZI4A>TS'si'1^&LfgF5o5=NaH37k9i:7XlK=)VpFn]Ug$@h%e.CU`Xg)*s)Z2")V<_.
%@"RMg36b6<qCX])h`/H/A7t0.Y7Ydj*qAN2:8[(aYPr-E.N\.Q4jklo*q[DhLOZ!2_,q1"15p3P(cht^ToB$!a^D2qC`#C\C&B'a
%_f<[+^$tR5e1!TR@WmoMo4'F#8df<t8mC^+n9);.F%pV>F@+ZApJLoZpVRLOIdD4Q)\)M"gm_]mb3UO[Mc'7C[bC;_M0*Jh<CPHF
%ZEZ91X/JXeqKB[L8S^mDV=SJ\M#).2IegTcaf+r>aSMF>Bb@*KR]*3MU7'bb2UgNA?a6"/1]"@JqUf8opFM?SUpB\M3Es(3](ZZX
%hO/gWCVF\FSDN#,I7-0g,Q2r@EIO_@4DLE/kr2rFBHNa*^KKjVDjL6SkHk(8pM"+)QC8o)1\^+qhSIu/kVnA@30%T3ceIuNhuD\U
%4*.<53h2qT:\<b!bjQ[H`"`2eH?o*DaF0rRkK3/<:<Lf<,WA*U@"&@VADACg^OpnhmZF!H9s4(LaQLQ_DB/\L;P"iJahV?5NT9p@
%nqjZ1o,Gc#TCS1X>!KKecTe1RkJVi9:@^uGR6RH+VIr*l-koV%&c&S9m&G*TcN2Qpj"E<u>Y"%CL+Q2HmZ0X+nqu_un97[qDf]<6
%G[\j7j.b%cIe^e&?28ibrE4E-HUX9OT^'(bpked*G%2,i]DiY2U4eS-iM+hf1V3M@"b#Cn%`Ft8heYp)Wkum/j9O&C4^u=Q1b*N$
%5aZ-0-i98#(f/EJ4[*>9-XI<A,j<Oo\NCtaJDV=!WLA8o$F.]R'/Oqbgh\)+0k3NAe=VkC1!=d+7V:V@N//!gFlH3=R*??!'H](b
%F*m4LSf2SdE][o)Kmb'ZRWp4V1UcFqE1u@I`Q-"nC/Z?AACSq"3n*:gIn\fqMb0IcLDin1D+3#3MEX]/X$:-MVK#J#$M[`4kX\-B
%^@@\no@3cB.E4Ws<f/EVD3h?%;N4*?!"kU)g%;N%_/ut#3EKhA`+@r;D@XK+%_Ca^Y=m,``Qo27-BRD'1A,'df4W=lr0T-#nbJ4V
%h[)&6IJao1K"&B!Wqp?2B,W"bO"-B.8M3]k(<\oF_>N7`;toc,r)af!2]i:BQqr,rO+d&^^<cZ7GGSG7=O23h:>:fddMG,SE5'`o
%Msg-,Zh3kd)gs)7jitBj=.3^2U,79=0rW8I=mDg\X=:^GIb44t_fVMtc]9_ib28&10+"`D>/QC?L9#_=-E>LY,p-bDQ6`k[VYLNP
%>ZJNH.7sIerURd=i"C/Xh5BjTeGLq`FLe+Dn=^B.W?2oEp\=aQGDZq"_\?m8%'fMS=ST/*mdh9tdEaQF@o;Qks*]jX;C+Q:3_8A<
%dSYbiW!>2llLtH,9g:%k9&2s<Q2K_C4I(=U*e,LG+uPX?09H3=,%fPIe=*q5'OPbNUka!^'+Fo2`6M?I'IOVEoI+GGk)I;':I!8I
%ANW_V@F;ukBqk`")papADh`N,EGNOp#GD+5SQao"E$*qo3L@9@/9="lJQ\="+!d5sgg&urb8_-@ShO]7,E.=5QF1:BfR[c:6R#Q3
%7YGg2lIl'%='[:+>sF6B<lONMnGgRdZJW5T6do6s:"?7-em[^0n&mR12qNF5WVLqclWj&+2;a@,5*@(Ta"p7\p@k@(]Ae#hIY@9E
%Nh<'t^@<HVIrk0Z.JnE2QW\74B>i,^P&K,F@e^2d(U0./[?,V0"g$ZAnGJ3,T!0j:b_r)F:G_Dipj5QkeEf8e+$2>K%`?fR-1;hT
%rP'XF'7\`#*ulX+Yc4gUI-l.#q@k#,KcZ()>L,@#eL*P-T;]Hbo>08Mc7aZ,)YI]4+&)%G'D'7I&&iJP+(l#p-bRIJk[,E"q=bg1
%B@[k7';!C'OT$TEIfeOiI>k8)bb&'%h\>n$il1`5B]=Glq-MARe,](FE__ZFQp6\]Ku<h>S:@&qL@%A!i';e$6(+:A<I_g6s3DS'
%BafSXZ>_KL);b1Q32_$cr[8KPrBTsaU-?5^A%kt';[WS('=7JD8ThaI@oA9-$uOO^_'ao\[qs9tCj`q?J'F:=Bsb7>;&7V9X4&)d
%c0DDEo2oiNX%d0,7aeVcLC20"5\IrXFj/DW._]M*.dg.'Ai/X_T?^V0_oFp?o8L\b\6SWa`[$I?C^)X5IW1Ze2!,[88Q?PT19:#*
%`mdf,4JOXWBM;)hK:&Ws`[mXiiG1o[,bHeIkA=&X_4Kkl%FY$qdS>OLj,>e)G^b)[iEpAkY$RWln8+sDn)Yd3S%>MEFiGHLmsZ#W
%DD`1]]CTreWX/-e4;[<FIH^KJ'di7d+b*+3ibp02heb<5pZD#&4PlRJH]p3,1D]HTE6RJ7hE9YaP^(NpcJtm^pL`t^a?Cqc*q7DV
%^3RLQ&,?!TAKL?c"$SNRR'B$OB48h93C=Bc`#!nt7EidjkNSa$&,jg.k3cgQI==][Cd)QGQF;p=;'3F:VsLr[Ipi$-V"32?l]49l
%M14s97rpQ]?gM$hX0Dt2A$_i@r1jMYb3M9[#p4W[e-LA2-;MCE"o8.PkiPYIp_5r=V<Gtf9oEu:oHK`b2;bB;7.[5X-=)h[j@Z'U
%[IF&DJJ5*SVT&$uq/U)pa*e=o@si[^de<R>YO?n\f1]jh?Xj#.Q.Up.OcO1VmoerFYum3k8^4-6k%%IEq9+<]2u,*(Y'_c2IN6-%
%-JrWV;G+Qt8gV"k2`kYMCH>1MO8+3>9F_Z=8tbVtl1m:[C&H@SggF-PBT5"9eu9fYG<Rp79LZ>H8#E0&UJ@QHR\#M-SI*nd510R4
%UYku3k]7Z'qsl$ePHMe#E8%C3:LT"r9_W:RT@;,F=q`H"'jYVMfm\aXI2<s)dZc%"VeJGA>rpI4S=JW>qHZW`l;-Z2%mC),h2ufO
%C>Gia>pr]p=oR#CY-aq%WkU^#lLuI^6Oe2q5<bV2NIc`nr[Q&j?T-$-pKa`mE!T]>fn5o,%)sLC;uaIke7BVUqnTC?<]\A6?`;XX
%^C.*>f(=SmWRPd,8*m/E+Q]X$Xc\=e<#WJ9hY:"\beSe2V4$%o1)$RPc9NN4LT@9uI5/]&;+gGN-r[DbL%LL&T";$P^9k\OX0S/K
%MXoXE6T221Dd#i\Pj_$ic-fo4+0O^ilp[<K[HpQ1-\!e,*taq07@EU5q(Jho/F5eSc1G<Vnpb%#MD'rKl.0RGp7h>EWG1n$VgU3j
%BtbBpo(SmR&su6l@=C1Q>,;-J=)"OO:Q;QgquB*5k?LdVK<osmn=%\AoH!-L4VR?UU%h@gB'N>_I$>Mn)FmlhA'F`DUPTu]aSKk!
%T@Uo0r++!Kjg^g`I6cl6Nh)Rg]&-G.5+YJ4=*2ohk^6(i>g^e2h1la$Z>`2E0Bm*%<d=Bu(B*lGXu3Q49*[M87*OOW['/23jmTt0
%>PMCG\<^.,nFm!V0TC0S=Y%Vq;=Cr/JMX8S<C*Hfk[f9agr4e`2(>N);Dji\XI@`tFVFat9=4ee2a`.p#nS6<"m6Dh2?Z3s_(Z/B
%2)7Epp`Df[\#Xm>r,LbcTQbFI?`MlcEB%ZI5F_EeP)6T%8"Sc`H'Sh#nf/)\)"\!gn<nn:$iuu'Gf0PDpB1nZ[[q!Fasi=9.be5@
%JID+j>%^._<^OQ+_4PD2,^GO]&5bX2`Ae2gE+GK8d>'^-0JVF#GUoF6V"O*kqK<:>hVbl85d8%,i8KLuPlHJr=%I"4PVN6&PlPsF
%fPV1[,EfU!+&BkWUro6gC`nlmIKX[Z8r>I(a%usd)5%sF)ZO#@A6>KK6LjbVKDp<=rV]g+"E2](_hRkpCiHD]4.ho:IZbTiI?HNT
%rSWUE?]CeWU9=Kf>:oOG3c"p4[?O_WU:&X<e,c.FIbD)W5b*\FH;#=Vi3Ih7/e9lg:t[`Ts&D!b1s.MiZhuT,CbNQ)XYecc5:!qU
%4k=:6ATV@^2e#/'p3rQY;ABrEBSH!"2,G)[RZfg^DZ.B_\Z9XB"L>c0R"9R`<iX>QK+ABI<V7l1iqEa6dPkBZnMf'W<:mH=)M-j[
%G/&Ir5HY^/IeZtPW:"1M3Pr,PD0NA,"K9("b+`*W$$gX6L4Z/ic`-quguQK4<q9V81L$U/Y5Fdirgj0chH#oim&4oY,m'Q;ZD<Mr
%f\_mU0G(C"-%/!qj"VLbZ,mi26L`r]ba#A%-t*s_LF@R8Ae@7D3&\I)!VeMq."S*)2/O$k7BHYe`Mm,,>j.'+_[S:RrJ`/DJ&$rh
%aRS7;b^Gn>S<_ar31E+QBR3#aVFs)5X=1)2ZF6)Sgsmc=!/LZB4U?3V]de6AO[A<&p//sKRf/4X.=H^Z_IKP<hN_':j%gKFFXMkd
%`b<;VY#TVTh=bht#_p5qIj/hOYP#;(7qjCOqFl[SC/4t]j6*YGS\`[mk&F`VH5fNbQ=G<)U>".O#$<m8b1U'K;D9(HO)h!DQ]I<O
%XKE_qiX=#F2A:Z-g0t9$r#"80a*>)@bINhpLQ-F4rnEBgf4%MY8>]G,[m!J"@-u+_M1D?EGGMOo)7K#.,J_6I)jnUM\X)DO,[Igk
%\m.4P#L;CR/T<#D40ia!J)Eq:CMMJ8$)XW:7CUb2G/cB_@j[AU&P32nV+4pqDC]ZU261#^.L37_X4sq%6(d>nqnj<aAI+0*BV$O.
%jh`$C*h0`;Mrk;6-!?7;4gg/"$5-2g:=1dG7eTg0h+K?lq>%S:h^/^nSL[q[Y0Qhn2Cgc=D__A?F?<[3-C=!U-8rD&<L1g0./e5I
%RQ]65I%Y4C8\L9k?*uhGfXQ'1CUr3r+qh^H$qk*K7M1L=)2aCC4ghpj+rGp)j$YOH#8$.bP.s]1L%mnWOlM7NUA'dpg=@.sGKY<Z
%G%a]i.8f\,`r)g3WOamMdC.lZ//b*@C]'Jt0)&C_8F=!@J8c2fnCoM_,bJ2-[FmY`ORu:FPOrmgKZmeR$ohc9>Lc/cQ=?fFn@DT7
%4cqYDW+J\;aa0V^i:HU]NZ-ZG""-+9>5rgif9TkP-m8Le7g:e\]\)!!L7mrq]$tQ*,TWHE![oI.!;'XU34nB1"GD)"/(HN(9N>B)
%\SNhQh6\Fj*G6OSP4]o;+><cD$)Ga:7k-!kfTG7Y(i=J6Bt0tgr#rIh%VCaJ%+9eH'tHt3Qo.!2-fA=S*\6RT_Jedh`Hu"??<GY.
%(X&I1qT^#*1,npIL>8H`153M@"6nlO[oh&-14V1g()O)L;nN2^WARjW-ZIm@rop=oDlnW>/8IK)rH$[snOtFC7Bu$]igga$2bC.E
%.j.H\3b!qXT9PgI2bRm%>k-RTm,23QgN"r]L/EYF(`p*/8O!c31Z8$i0PaB>rHYXAJX@`1b_MYWT52GpXr2#3dYD!\(+nPgC.@qH
%%R7'DWtk/uAn7O^o@&T\n`%QrC'S"t@,"3MU!+8CNeh`!_ng^G#\qF#N,;*HP2a74?oAnR`^?"tNZ8ELrRlqlB,`US'0$]4JR"K*
%[\*XVO\QQeXoT?K"(e5[Y$j)A'8m=J?&/6^;nEB7<68B_i7rT.)OirSWGuNLop/R?p%G'`^5pk38?2\J2mV9@[+3!]e_A#A`'DD`
%:bm?$jAQ5h@X%$B@3(36!E?YXlMO8sWp5MB#MQ0J6aj(US\h'iN.\7ORFF:J8s2,l)VZP+`.?YFCCW5C*7+3janCeS(r1Y`0@O_8
%Hg;Rs0.Y^+U'##%[qjnQlX8nl<-<#Vd-eBegVZ)@6/Jd-p81<88c#'FVLpF8!Co?+QlU`gJL=WA#p$F%!.O/?$:`JDFI[m7m25EP
%"ghG]`?$GW'ThL9+0s`i4)k(/RA=/0&9/PBL1o[7r[Se`fH-^8lmMl?D^6,7Xq41CbFG>[6#Se9-``###AAec:dlk3N@PE4^=fmp
%H<EI)H0VuEkL!l`2"Ucq#T#\_Mke<W"?PI*>7i/M7EMJiP,o$]RBEPn'++L:Ku.fZBBSZBY1;oe,3*_::"L;CEbR*$"A\&#Z9!I6
%EQ%9RJ729=<2Bbl"PP'n%n'8p!5747#4<6fNZfW3n<mP_#lc2u4C]J&\_FKm849ddD5\5#H*[0m_kg([o?i3tD$VfK-h8rm).<RJ
%,+&Co4mtY2P,=T-nph;SS**tqHi;uM+"N(,"j0rBgP_G*=[@Tu&eY3OM%aI3ksh@=(n%0[/Q\NX=aN,lb=]8&b#gfP![4=o;/r!?
%VK=^T$n,<hTH5b4kDnb[qSHe-]H]'lgXD(CK%R^jfLHq$54Lm:F1<Nh1bk2/D5AKOK1BAjqVZFUD,_B1\2PhV*VQ6aNd31DflRu:
%2W(lN[&A'b&s@hiBh<OI<jbec(6QJ`.[?s;2oK]1LX^65HG/-9T,[ik\,1&I"r>8EfoqX=0MFR^Y"90cb.S.VV\Y^L]R\c"2Rk::
%dt3HOR'M`F]+0M'%Fd`J+$F@;Y"B^Ic'TK&!n'Y7!,`b`bmrS7DtM!Y6(lpjTf1*ee1C=!g7V;/9)HFD`uc>(26'_W(TDP]12]V-
%#:"LT*X@B+%Yt(eFdKR!BZ_jM::.)\4:]Ck#kS-=FC4Dn$6-ubP+0PHPXc0gd`YL`S5cI&r@tIi(>'"k=jd.jBR-XHP[]F-?'[!3
%2nA\[3B!P6[^"B=[<t%MfTJFiT.nO1%gmWdUNG!lI6C[=(gbRFOV*:.MX$S,+[Vuf,ol-9[:0O^NQ'n^JV7k(;:"*"2U4c@FRS"H
%b&1r)<)la"-:Y9NPoBcMe1r@],RrKKeZ@>:=k&I%LVfp]R)CS3Yp_E>Xs;lSi2LF[@DYeS-&c@BW/Q+Ram22#WN!;ZZ@?0=_Isbk
%JZgnrX\f4"Pk:)q[FE5._lL=N@I91(\OW+Mc!3+6DoU"$e#o2u]Qs:tOo_>0Q.T\?pn';k>),AImN_@MkKgOqb/]oioBbuQ7UW$[
%chSDJ+A]\YLI[dW]ndn$nRjc<b20b/_\:m#5/)Ae+LWu;9on0mR%[.+.*\IN;;79cWXtATWGJOZLjV_g$)jlI7T'(;[AE*p6kG"A
%.(qK(VmgE0rbkS?dAu836/\E-OSN^:MsXA6a=skN]qRAS,,pq%G/$Hc4:C9=#XLoEbg_W44r^[#TFR]ulC.Zk]qXbVqf>,Q4WF'!
%*?uUPnU_G6=!XJu.>72Yj%U])<h6b&5X@#?510RFEj$eT*;i>_cGC=-Lq;L^8,.kG3iFHK%Q6#_q.PdYnO-Mt/(LMdV$?1'<7BcO
%F6iP@5&j;rD1jBfl=sfK$EPlLU?T`j62e?lH#WP0_ui4__"!J?3`::Sm?J-aAG%e#Bh*;b]]n,^1(LTeY+SXmV3\2BL5iIuXSFh?
%g$#clZmFP]:XC>VH=*I'0L3M'DP_4(USeRQQ'tEaPaX$YU/p\PldTb8*/KPP[FFtO+2QN)'8`rWYT*\:a3be\X@nDR[BC(Y^em/7
%O`?D>:f28#Zm'2($%P=eDUYriM\kMQ:.)68#$e,uZ7cS?+r)pmPr2If<Roer0MXFf?uYbHXQei/1[+7Q9TM`tH1L;(CUNJ#$Oh3b
%5$!0+(^h$P[=?LhDbUUPGAZf]*,EM<#hMPlMNo.'H*Xp>F)sh:;9?A_>i=P68E]+bX5X.@$OYuFV.SE9("Xu/Y2#&fl4inCkXI)8
%;l"mnS7aATKb"]+2"NMl7=\WAC)(J+@V6T_8UP6qeXgokSpEED_?5t$^&:3<=S"%0fY9jm!:k+YQRfih5!+[nJA@;IG&`C.dfW&b
%i7"+hO>ejq]d)6C;jit.Xf7S#]%2sAg<ZX9g\2iM%dJR2*>nYtdGda(A+'%[K4d&A.K(1@*Wog;2f]K4D)qaRP#BKUHDJW1ak<8W
%HnR>c9ZgM2i"`;RPJMm+:subGe2`eCa`cH1;+&.=/O:_43J6<k6D:@VOSe.UgY2+^</TeWN/jLhkLu4Ud(cgM)p`ZN!5j=Lrm^T:
%Q-7u#b`uL08SZL*p5b6V^bJGMOnB:nIGA#bO=;'^A2]l+QkOee12?Lp'pDAsqpKPp'ff.lEtEBn5p;u6650-n3=pPcrI3]f;4=84
%WZb=8hh:M8d*@NG@J=$<D)B`k\IEjQlHtB^PaSMdn<OJN+?s&RkJHFr:p5goq_&bU+(KlNd2B+g,k9eN/8]3_Qe.MBRAAFBmR5["
%9S4QUrS&$ALr#ItF$H2JB7>6LllaL7&r=r4_Q1%.A1>/c>pD,=J/p2T+(LVLSX1@t":#Gr$GYG0?=c+M(A:kg5%?Qqgjt,!23FbV
%ah)_1qjBgiX:U9MCY_Ib.4OP\@)ug-laDa^KtMau_W<*<RWh!*W/Qm^F!=FaZ;6gH,"^A,FWkaKD9HBXaogYL:X5GL,D=JbQ!h!c
%K78m$XGV<"c&Z+\YaGKI>`ak&MYtpnD:$gh2Bu9,4@$D^UbsB4Lbn`m^^(O6UX-3Je3<1UO[_dZant*%K&69RU!-]M42Qds:^\7o
%Yi])gfarl^PmJ:Uj7.CBfKa.@Cp)/uc=i1%n9i"SN,[bpHej7[A"!qI0i=l<NWFaN@tdV1@CLhs>TMKH;IAp1"O%SoPDU2d'U&!n
%CGMtRXR3d,()9PQ0NMad:ra+JY:IO&(=[#6NcOu<RM`dYrHTaBRS[dJ#WJG_4MmI!bduJ8,N'i/%B_DdZq&/=(iTX`6t[M#gf6(:
%(a%J%<*qn1FMPLJAbTt9Ji-PO=+gqgW,^<\aTe+\B8reuj'tO,P]^c^TF#c4PC$'p,`gr2pV]%8N!u"9Q^lbCNV[%]*a3"_N=L/Q
%/]Xrg.kRAWKOnK+T)7)*ij_-8(+?_Re1<\.iC9e5b:W@i$ci.D$mpb?]uYt3"k2:Bp"d_Icjq&#ATaq1+ZaDRgOV6Wfa'j+G+-Cm
%#Dn>'$PIL%USAZqP"Y"&GBB,'^K>aemhBqH\#%i=@s[5\+sur77W#3[$m'&5)f)KG7>eO?\Eh$h\%%^551hr,p:!d==3hM*\&;q-
%e6-UUA=,f;BW']beI>t:Z2GYJ:[Do)g55M0[0a_r[SMOe<U7.><Y$iZ'0D/C9.IQ#V,T:_>4!9p[!W)\nu9k((4Uh\8\I9Db^F"h
%BP=;\i@*<WL%i*rDC3=R'uW%R[/e+?.`?=H?uJ\c]Y`Q25!02JAFsL/W:"t9:PkWgjsdRcN]+bRNTG%im@[^8@5,AMYMe98.Sg4S
%<"nQa<^j*4Ou<61oMFUk,ul-bh\/*KWs,7C!4n_KY!-XjC#qL#<'CYHOkAEOOGbYJ%3TPbEYjIe^TE2_kn8?RQE2eogH38-]b2+,
%2dXCYjQ^k7.<jD<DN5NKgSL'48"Z#b\oLt1L*haOM:\#hf.H+[\1FZ'ql:;lr7D`ZF"?\bJP]hQ\44@ih"Juk6>2Zc)r]VZm7k=b
%\?#,sB"LA;HKg4of=+;_b>RW8I05_o=(T*2'BLel\LG??P@qLCOUYGmq/!saiU1eJOZ_?#/>P5a/3;6@FnEI$mdWm93P9E3Ib:BP
%Mbgk?^#h)C[)]:%U1no2$J]2+O_R[nLU`/^TJtt2Jp^`a95R9_/"'f??:VnPke].D"]p7`LuQ8`K>3*61-=WrSO31kW1Vj9^Dad_
%GLR4Dn1>7/gIlH]WVu+bfhl1%B=n(bretL=L)Bd!&6WccW$NM>+?VY,ODDI0W0YZchq4ThHGSYH*P0R9pY8tEaJ[n3WQOAFHWlS5
%QUJ!$I2U?`hd-[,8MQ^7jHTDWqpSR\L(Ticr/3kfH`hagINcTf,',8>A5[?"Q_a2lD/NDnbLK:lZ;(H1pKi.EWiS2_`cCO-'B.qm
%r?RR6PtqhR=L9tS!3nee'tk%Eham2?8paf:8o3ZP$UXj&e*TZ.LU\s/=Hda*#Hb.L+@-f8F9$O]^:[^I??c*A7-63i@m8Ojh8uIC
%8(KW9U)&7HSM)X9h32VKL;?(N[<<A8$";j@ea_mTn8_33^=`h%[U1h+Q'8.3m,[W7d*hNG!K!-e>k]^#B@^*eTk'.pWi*b4d>YuH
%+:!*/<]7L1))5k-UoUa%a=W.0eQTQ/DjRW1"TFuBoZfht:qcC@^2T0oC_Yo^VBoQ8:QdDjO?Y7N6.tVD;r[%II1X'$WiP!m*FAj+
%8Q,b7^mt)(:FDV<A_$0AMS5q)HO$b<LiN_X^oLGVUf/ftEfl8!XF$]&iQVQJ27<86=r6'WjbB]lD_rVE]3U"P:;V/ZXn7?k:1[HM
%r.ArgWNALnV\P=%T@Q]d)+mn0%lo/AWu3BAI<0aKBlk3Nj=*l;'%PfBV!hYh7Aa)sY*VduDnQnE.fZ0]hUKUVeo$LR5f5PrZt!Q8
%XKT$rbg$7"k#1mH=6l$=/7;[eWgb8kh=TFhHblsL4]`4_YBBUi!%@%,.`>Z2gILW<kjQqD/!=326--_\-dA]3iAIl]R#F@sf,N'A
%V^is:hgH)Wh)s_&`KcQ\K3oN']sP1V9UT*]D]7A+9iC*K'5<R[eden);P^QnQBp,Y`:;Z$*58ionF\P,QD1E/oBK4r%t6Tqb0.UH
%rWL-s7dcSiV5.*KEWCS!ZhQ&b8fZI+.H2Tec^K@)[j:l#$h1&D_B13mS?1Q7R9r<j%f_9f0fiZV,i$:F!"I"F0$R6<D#j`P%=#Gd
%>tT_%gY0P/r$dQde]u,D<4Uk@57`?%$qA>]5sB2sK+WrH,4&C[n0od&T0hBS&6FnK?X"Nn.N.0;$Utj>k@Mp])Q$7*_G*%+/.4g%
%!liD@IO*sA#6ZCS5oedcSf>q3eTM:\C()m2Hjk[`?I3t%oSe>"7*dOB<BS@]@6F>X+a5"j[9=cg1$FM1EDVF9`P_=fhpS"1QGtTg
%(ZLHKa=Z[a??quLn8TPKF,L2R3)MIJXpA.ncXCJl)lpM0TJK8+VtY0[VSB14Q9cl\N6r9amtlt:T9KouRB].$Ah@gMG`a6j,(h>"
%dIb_uMdK/Fg`5[fE/4Ko$u?Ji%eG],5p-*AO`"bbL.:j;nI9:=EL"e0Y-BYe*#omo:()usqcAO=@sq`]GccZZ%K:j`.QG>U3!bY^
%iLAr*P_Y"2R,"H5%#4KH\K_)<'Mo<Y](CQUKn)HpSCXTt4j"bn$h`h[^,,;V(-m3.dHdO0$i-9U-4H)0XNGgE9Ic:]U;_g5f^nBB
%k4S(Y.hc0Ked/gr'semCa:c!aWHt;CG[4#ncS(,sWW'V@Qs,j"_fi?<EBt)aTE*4'*JFlR!\b$tWYu32)_Pn!..l`U?r)#<+R>H*
%=^?q5CYc&geB,hEkXJ-kObKiJl6;@;er(*Z2+[0i@3"NJSJ1;3:?4:-oj6HZ#X(H.I"S")P:g_52aqV:MR\7D;CkjInp:/ZjTO_,
%]5`TaVR-%7]5Z`oG'"js7e(_.c"JO!*7DkZ""bbOk1S:[J7+:#BYiPT17#e+>*$;o#@],tQk.58(c`hdpB9j/FXNi>WDWW@EM0J$
%l_YnNHRrWugIj$&\)3!oqLZTCU!W8H6%e<3819//Ik(L]Hq^)ega\6o.Z0RLLNW--q5K!0GN/CJj@t*2k_*GADt&D`@#mC+VN0MX
%WJ>NV'F;rNr^K&q$Q%DB_"/\G]o[J++;i+TJde[IESS,W$4!<J<?HO]Po`a&:AH)V:g]MSa=_[52PpVL2ED)FKjm.chIb&mLqqR0
%l&_iYB,-IWjO?R7RTJCgdae=#Q+.=Dc0.4'/d&fPbb/3pP>B(_EF3'HefKHJ!;+Hm`<&h45WF'6f$D2E2e=Lu/LXgON-Q3)e8EXD
%@.QLc<Gn`<R]9kn3o.&(-Y@PMO&<M654e]Z^6hJN]<B_)]FcspCL_)M+i]jDO2]:Y,"mXX)WrH;h7I7WniV,K1'H0^_AhkFL"ZmM
%f=T!QES?;M#OMn%s2(I,Lc]#:JO<WSS4Vpjm@)]h/*u:.[YatM<tp]BM+TmUjML5W,p%q;=!Wn#gph5,4nJ14/B#"n,5-^Qo,^m7
%\=28FkR5FdRJ"o2"0/C%n^p=A$+B+KPBdH<CC"!&Yu?$f-46*uQ*"4LVgpX`^VMUkj0?0:P'f9KUlP-@f7A79$E!QVHF=Z;\h_5A
%fpgBP9Q@q,Bbe[F1$tc2Hc-cGNE;9K^`Z4'pf4@?Q+"Q+.Zju*Z-r*_Sh>F:-W$tpl1Zq=p=tgARQO-4W4:Co)%3$K6?h+CE,nI7
%NJZFR3A7;QNVJ7IJnkanb3D0Q8ffT'MDCn0pS'WsJ[Br9ZO4>2QMe<<S"r*hDMi3$MM-G"9ue('3kp\<V-fg\*ru4R0_$bZYLt8(
%Aof%B?uBZr-kS[12@/End`'IX`Tu2b(&i`I%]0OsXTE"'[;oS`DUd]jkd6k/^*p^G]<[E<:F25XKo&<N=c6X=.P/NbggCr7"G'lQ
%m-J)_UlHA9K?2p)7YT%YCfS!fLGK1Y#>`!7-d0*UJM@SWmUkbJiH-)c+BQ&[kj"_/"1u\%#$A/.b#0k`ZFFqAWW:./27BlS3aN2r
%3A-BW?<!9W^_ZHomE/>02IKJgbj&1i*F@nYf\SX&!1L4EMtigP=mC+qThf*oX$Nn0R^j'aHo0inYSndI*Y*A;%W$KMe')HCQ-,Du
%H?f^Th?F<L19%n'og*ZZWQKt)T<sBo;,qMbq=E&.78K1cq)MDEAdr;Q\'D&/8pWk:-UCJ4Ul](B:Bum)qC8NAAgj-4?<V/tD)nX7
%%`pnYH]U?chX'tj#[WC>@1N#'hue5SmoM3lM0G<LB_Fn`J]NN\?HsEB%oEnf'9:hl]H?R;e5OrgNm3E.?47a_c;uTs/1e'Ailm,'
%gcNpgnWL_5(L!dQ5HAU`_SoRP,dAr0ghsY/fZmYeO2SY$6RN$9WI0_]M8*r*n)_he%oqY.qJ%(!J`f*\X'Mg=>pKQLj[J.3Nt1pb
%e,GJf<VCSrg>Ok!UVuIb3\U!m/*p0JUah_u'-lgW_L&e[8IA8D9JTJY3aCAbO+d:?>o6g8=F\5>8,c'%m%cZpLd3UH/gRk4E]"GE
%kqB4#WmaJ,$E`@a!aa%#7cS5$Bp\k_m:bZJ4_o`Fpk-K&qu-5Z4]O=Pc#ao,3*ZN;]WEGs.f$6Jo0)NORu1O;,DiPo2oO&qk8jQ_
%\V3^5BeCacEr.IcVd]bpTk=^5e]jQ\r+aV_B&)H,]]c4&TA/b_7PTN(_+nZXq&5XkmTjX6m'6M:F1D8dXaVqS\&gMSGg%p&E;@aX
%-*KZu85pK[;*8SX]cJ_;JgUkQn[Xj`BR1@K/^a\A^5[acXbP2CeSQX9fr+_dk_Vg_jC@P#AX75k'S9f[[FE%LZ4)1PS21f"V47@j
%h<?g=k,;NM!U(b+(q1r>k8D5Oh/KR7Ut=3b0im0aJ?s@e-<uWV%FOs"4gD?F>'(.KjVkt5ntn>i+PIe/gtjoP(>-^M-.3]BmkD6Y
%#5'uDjTetfL!46e?"09WF<hdi=naaM>8?qg=U+$I/h:U%V,.&b@=\2%Z(=/G%bAFp,-"j[@2`rtIO42\_Aac.5(qb0rUquJd/dCq
%2[+fecWgNY]b9SXSW71*<8t.TDUmXkOKZ\B%!?NU;"9,cFudFOa7mV,!eCf,&lh-#KHgqII?m5.-2`'*l&DaG87b;8@H0p\S/m=i
%;,pi(]qKni*A=:J`6PC;_`#WW)&EEUP0jocU9V/88-i;NBd^<.nQrXDW-['Mgp&e_R$Dc-JU;u>-`C\+Z)bcK&*3]Yl4f$&gQfe$
%$:OW,*-+&%/lIa3E!H/#*?@'$[\L*58;Aj!_a)-&aImk!@PP$sG6[V_Z36q8U*GFG,^.[2aR,YpNgf:!5*+tsir#B1:WHfO"1-Un
%O#socUU7XV)7i0Ibk\-A\@#iC\lP*?Mn7#]_W92LIp5VTZ%I3)Xm8K](-%?0,g#@AHX#?1B`R-o+ns?1mg[a`gb6cUe_([H`E(N#
%+gCCJ^Q]5E$.Odu8lsTK(A9dcg3RM_e]?%c@-6G)a`n;cnQ[E)Vuim[](to12TF!\A;n_N+pJAgc@Cl]'_j+=B0pJ\!HV1FDt`[6
%]$t#1&Rpmd!qI#8*[V!Le<ED!?7p:Xf2"=[IQr+FX?DdaN.=()OP%+>T2R*b3t(aSG]1dmN3naCCd23X43Cob$#8M6"A8^.%VE6!
%'!>3Bi2C25a3nh!*P,NISK-*,b9>p^`RZ.8CMc_chXgQ0DA2:]G>hM->M.Wm4t>@Eqg'0tV"OK+:8VQBUogS3*VJW0BN(h:c'T`f
%'&H@P$Rr_O!e>Pgo!u'7F3n*:NjqE;Ek.FlU87I`W(+l+_<q2<'BZ/:3lsU]b5!i"ONb@$F_bYdaXRdl,0c*0dl6GX7l"\PZ5G+,
%lsHq&c!n(tlT&%5RFc)OJPDlFN<G"+p3Qmjm;j(WGde)2m]u/l=qL8VI,6#R]Uj@0"j@nh:RVrZq6^2,X$sB!@L#,FgQb=KoFb5L
%nu6bCZa@&YG9RC!N?cs7MULMup/'XX:5fK7rOt,`=CMSl\0m&F-+J8VLd?=%\m,5V+[9d9"mmnLR=8AcUuRo,I_MpiKC4TO%B03I
%?!f_,REFYKo8%b5SCZSC-Ig`"dNpNaMJ&WE_DdN._u4<99CN,11984@9D@\l?*#M2"ZkXP!TeU%.caOqFgV&)rC#AsKa;u6!jE]n
%4.tEWqX/NHX1k'L;XP<+lt1Hp_gemVNI`+C^gfAl?RBQFE[5e'-4;tS!'smS/nW[0`0cY"hp>WHojlDi*MK,CPt`(dC"C[o88d4X
%h]mX1Y`(Bo<\ic#N\`A62j-*aZ^$h_h_p/MIP@7:?$i<-6p.?,K,)6,S[2\]ja$aeip_i[]"K]t2KHfZ++`BEeT"8^OoH5L&K]b"
%IVrrkai>_XCi@u$9/q>8Ne7=d2aEo(m<!(2&:1rpBe@<-dgo+AC-`*W%T,PWqCL]CV%/+Js7ZH#DsO7H%D@<#]H=I#8Dse]Gjc11
%4ZsD50A<`;&T-Or3=;u:2=4=%5'&9Fd]BM:::0).JC*5&V.R\i8[%@H4a/G!2=#flV;6.KXN\^o]_g&=2u9\Hi7?+6^*r_A("Ut,
%<!FB#U`$:\:D\+s3;?IhSFf04l`(u%V92.):$,J6MK"B?<W8+\R#-\_n?-PMA5*tEbDif+f=6m_NVCL7T#"egh2Q'.`L#N=hB&6A
%]Jtk&c!8hD`E_M@nW_lo%gM\.&R8`SY7b%UM,%<tS3?ij]=@1X1+NU-XagBL2])t:VLlYWeV.CMm228S(jh^cpt'f-0L71^?QP@!
%@7`sr+e4"]WpjHm')jH#%`F$J?pM(s6P\7lc-q"F5-1pHYNaZed4tL/NPC?mCjR7P]eCr!mn6mKCC,J*@[D0E5--?/c?FqDp8nCg
%6G)G3b$6!h7YM<HZArZO>TGBIcY<0]EK6Kc5rn'dd8p`+$_CRu%3Hc>^7%X9qE+P"NP7m1YC#_Rk^s"fiiG]$ME:`O?kWdt34@dF
%!/pZ[q_)Wr<Xi"HZ&mX1FbM5l]"_!uRuse6IrBr_&_AJ)pY&QW\?tpZp-^L1::g'RVAc<Zb#R@;#RcR,)O3@Xc`#@A_\Vcg6XK`g
%05(bW_/[LfQ-2\cm\t:^,&YsMHXU\bTK2iZ:GeNWl\[]Vlh,Vb8(Z9;*N6<SJ7osP_*=[VnG=r5\pEoU^Xj4$o"l02U5KhtEcgCC
%b[[L^06@"FqXH[?*f,%7=2Is_Imm%L/i"9<[:o733Lng(n"s0ng[t[=Oa@i/>NLj_qjeqB36LLZ!q@5pfgUM`9)TchA@2gEf?jcB
%SWqL(hSUqlY,<OcV"o!+1ipsi9AS%2s)-DK:P.Q=Nm=+nC*%:r5&2$Q9a$0`(Id&K:Z#5/,#3H#SlEQ8hfp9IHf-mddr9O4[VMWG
%6-3R>k4:/U7cKaFf_%RHB?9r_<Hbq:0`pkm,Ua%ea"[4d"pPYjQ'eEu#6Lkpd&u6"l'Om\l'-F9[b!UGk)B:tRJGau@YfsG(H5!H
%i'R8//Jq.r(gpZ5)%>pTG7^PXk(JH>T,*$Po@s#tqGqta1V5BR:rS[U[3tSUbb>jtroFJ!2%4qS223_P&<d?#JdX))>J\:<e9Q"i
%$5\?<4@o"bmKErpK<&4p6#^[JI0bSU3A%aiZ5jC/0,MRb`m+*L0_1T[$V$&::iNb@lir;9p+f1IGr\DKG*[`%pR2Jq.m(d;DI`2s
%aHJ9'0U=\nKCK@k(u2\44pSPi,rA?4h3A$`gtOp)#k$U:6H%A!_a/9X4V^XS/A;89/,E-tPC640&!pL]_4uq>@dkYk'nW@3nk8J"
%59(#B=1G$`APl9U\YCr-GYQt"#B.1l$c-%a,9=FHfgY<onF?4@%mF@#O29F1]+HUN>igS!gX]9,;VjJEehj?>XKN1j_8b'^HVh>1
%*X(@nL%etfK0!6C*_G1A`KkbWYTb^&/?IB>Y8>'tI:=AJ?@H0&cD9h2RQPB$0FR7%f'u)nI!':7H`QtPYdZ+L/0sl"pP!/F.^tLb
%5%,4eSrV<Se&T@aKo>L>ZZ)aI2A`MX2u/.h!]kWAe:iUC>ju<ufRTYGgIKbFEXa$G(0aQBX_d>0%F\Injq\bRqU4@1ZX6oF.E0/5
%,f^oXP4W$rO^4ZuMm8#d?JKh^Xt1p&hX21YkJnBsLH-QbGZq'7/nQ1YRDo*YDIi9T0snOe'Q5QS8m+_mPcM@7iZ!#ld[c<@X(6(P
%]cpFB(,#;29<0#Rl;IEQTXI7)T=cb\_<]*=r:/lsC%%i4>Y:m7eYPW:Lb,*N$gc<l7XK?Y&D]BLHJH0T/kK9*%ni1oPM/q5[G>,'
%FUk.h_<pYCntB*%cVKnF?*nt?>\Ym4*?i).F2"rh//"6'nj2ZK[X<8()d:PWdDYV36K`Of=foFlQerKpq<d9$]A0EN)CrY0`2p&k
%bEja,Pt#PCi>8q([^+u38jX-@@$m2]mcJ'Am'bbUaffOIY2!A*'NZPH@90B`qlnLB'r!578>rc(dOmpg,P(!a.Wb1q?/<6MIU!U`
%1hQFE,$/*q547gA(6l5Xl>sFX[T_YX_Q/[FUR0M+4b<<eXf_$Y#1oT7q!At9kI/rbhdW.aFCtDnm0n*t>/$D/=aPO\8o*PKf'/VQ
%'&6Y\4BVrlMK1/QR1*^qr9<HPB`GU`%3<*Zg7`>i?4Pd4-OZVL/U.n+p@;mad(:3+f9]G)iUuEW_r<`OP^6]o5@j'FL\-bBI^u1E
%lZ\fq]O"R6a7[%7oW[3"?66tW;"Z82`O)!$p>J=mS9cJ2iU`%n)D7Q9l="D#]c;J_MabOSKe"4!fiWT('K;u7dJ:dW7!mQW[kl1H
%7B*u1EVG]o2bL8qHD=?=(Es73Hp&*Fh?ujKXb[N#cJK"l'=FQ'DV.H?o(lHJMq"M'[7IcQ:IN+[_c`4..B:c`XbDLdT%pC^U,Su3
%92Xs7qCnoj2q?0,@sVcDEckC;N0P44c"-S<H1PLG6Z:gg+$XZF40k@Eg#jQa[O1>Po^u[afOq#hESSYg&i\??JLFiVf@Yb-alT9T
%Pdr$\o?\hpRg[cf,DeB)Y;MmqMe#^1RtoZ9CAD-I-u*r`9^QP.Pr_K#hbglKd0$C"kBQ:jFE*QUV/f;!@m[A@P't$@Zb1NV5K/s%
%o\4(;`[hfVd'>L7fh$pdh&Uru3PGkS0Xp@@*CdbIC,9^QWQg1`lQ%lii"t$uA9+*OhRj-!V+?kZh`',3DLGgGk@3N<+dWd"F'S\o
%pVIZq23iNLhlZD6Nss(L6Y3V<N^%bP\`Ic'W&e;:[<92h7`OTWU(H'>4D_u3Os1ROhqL>U.49t]pu4_oMGs(;2D2/f[,RG:g.qQG
%?3860m;-U@.sI=a>FC0fW3?/PXZO)Eg/@LR.2ZZDksX(1RH-YG4-`udDs(%pVq^=Mn`k9f+ppEMg*4.m8A6N7fimWR7uBHaG2=bD
%YIfqq]B&D:H9&?Z0%ES+0/lNO]<,S/hV1"LdJ%f_`M^E@PP(]aQhrSW!dcMq[B^m2,jY>SkPE[,7I)eB04d%>qg(nm-T3Uf2A6-f
%Y9n:*bJ?TW;/ZcWkGPmV9+QoA0&KZ_6FBW%hH$JA\@PUg'B>G8L3V,jFR`Kr=;4tc.?%<tU?Cia;P6eZP.=?N3*@[Ogn^6R]B'`V
%ESaG2?UUZgVa=*K[9h1"l-5JV,q[-f6g<pWTTE4*)g@_#_HT+.]ig8+cK4nFVKgL&*sB&>]*E-tp3^fn3_.(-4=uoF%c5)HrK)i-
%,S*gV]mb319CElZf%''57fHre8-jq+NijHraeQ??JUSU(;Wl)Inm_ARQ`iOmf5BZ_PI6=(p;ub$o?GCB/B'o#.\5%rR!s7jqa-,n
%b\:rp=?iqD4M75=aPb=rSg#N-o%+4kp*OY^cbk.<FtRauL[tSZG^eN%Gt_L3cSF5kWFpgoGZa0I>eI!#X')GL/S:(;+1p3mc?&/(
%pf-Ka`\Q8bj[FP+D<JF1KXoI[g1HY\g8Ej'X..c(r`/"VqDbr5Y?^6#2Qr"KkDN.e+'a%!k@=>dSU>Trm35p)</T;nV45G>n_n$E
%qEC7U][l]/oc*UMQb5>Zm@E'4<mko?OI0NcR"A/:>Slg<b6nKeZBr;e%\MTq0>_MZ\(1=Xkq;nF`8@D_Y)@L"%ohmZ-n1GYXkN%=
%I=>[!]5OK4V[m=7^&Dt;=.^SWcc*T<cu(<-Qs<\[+!6EC]r0deF9RDEg-4CD5$_OX:7no+b!.Zp\+k=_]WXFJr;-(Zo_LWIEjS=,
%0;[E,pbfu0F^L>,ZMs^ucm_OZ8&[u45B0V`mM"9De31r\(:UKQg#>a%-<o!OMcZb-H05Bd.HT:E6V0@"P02QLorWUE,4op9jrl!+
%`rmo*GOIt'9l=<<kem-mje?_KXjej-\k5on;=u-BnkuU![:#!.Ci7k1RuNo+>1[nNGmnO?Qe,FP9(Vrp3Mp_"[WM/-HOMji>1KD(
%H@/.5f5FOg?Z3]e,]tJ_),p"8Utf(^D<s+m41Ri@RE?L.=4cH4c1EL]fIUkP]@mH2m:aOqF?urBpNB^SEO"0=k$D@u=u_?3-b[Q,
%pXo5WOgLbdl):[2U/*`Eb;t."%P:cAhHWNWA3235@39`Zd\WR"%`FO!V4+8o2:pOWgB4_ugNXN'r$C/MgQ-#ud?0n!5N/[LY/.i.
%E`Hi5K9Q<6M[UGVJ:ddknGl/"!Yihp(Dcsq>5\7N1E1o6qo-$iUM!f%2K?MbkaaF=D_iJrJk$7)-uJU@)t1[Bd.<-uO&?P^pPneH
%,8oPg?=9^Iqp>kJ#4Zeq#kRW]?UR.EIr9`[UkKT\%)EbmNNmIM%bO6r/fl5cpqXo/E@MG?@PNo))#-A#6p-5'B6]"s<sT:BI,J$l
%h&+XoY(*-`a7/=&Iet!*M839PiJ@i)s+ZG5J,dIg5pPT@#On**cj>#\`\47X?gq.BTY@HAI'*l&q=nUsfs_A_b17?4:.K&"<I&@1
%WTd,[^QQ`3\%T1\4o&j[W;/eY(&&s%HeMc!;bQ'N3kF;qm>USJXo-")I1eI<mG+pC++fLM,]*J7\R?^I"<6l&f_i4"_aa:@B5_'U
%/(K,!D0ZO"!rB+`!2Q297nj.-COXs%d".>QUW1qp?$[RQ`=8qME1J$k,NIi=,0T3BQ92hrDk5rC\rIj.Q)dK4@M!r[%Ju5Z:ZELZ
%],D\^c*AhbXpf5ea'SGj[Jgb?q2m3Mj^UDd+"eV2G_/:DM5R(fL7k*p:>N\T;2V5\kVlT'JNl2t`?Na=CQCSD54T*iDuPm^ksq=V
%i.(OGZGmj`7L#LeI,G;*+2+?\9,J+8-&r>NfMDP^-0So("r\?`USB@H&5Z4Fr.gZ_Pl6+*hPJhe?F^]<$daA_6b.b/i;57Y=)Ga-
%%j7S%f@EVL^.*HKYQrbZGH;Ni1760h[BFudBH*u!XuI:j-6J-X_0EJN5Q:Dls1?cEU\t#af'B6NXaH6Z1*>C_&R;O$_ajak=q'uC
%VgO0d+9*Np&T_ub507GbX59]!l<8N)IZ)<jr(J3_p&(5a8--5W9:p&X/"CN9qo=clq!r(l-%C=69b+?F#%)=P56"ja9X32mi03W/
%8WL&oTh.Hb?O<]^0BX#[TBK5Mlo>;KHEUie1?]d]A<_'$-SAO)^/gb/(mR'a/(GG`>a,tBC+T8.)S/bNSARKpSWr[/lsrO7Ooo(e
%9[:h#jo3q+S\:6k.3C%QPXAd&lR-&%[8aEBjjcrt[CMN4/YT`CX%_`./UjSV0ZrWY-DV)7k@@u:k@-NuJaA`kK[?G)JkgUibc]#r
%roRcGARQ\5WY`+(JWhr9I3RQq/(E2MR62nS'eH`5p%_qq"Fl4SocO/B47kbs^Tq(VXPrC5m90.2lN+4tM"6BkE":W.5,"kgG%-`!
%DHUW.79LHM@OY:#p-t9"$2>e1W;!9S(u/b;^?n<kk->O\p=cF[^kXJRcRauT#k9_E*/.:$q$1Ul#&-AXn2pDU0-qKGo9d`?GMMkg
%n1!7[=*qe36QGFK0DST#X^V),=`Er.D5.Eg"R5qE,S@8EisXQXAC/2+'*NSHX.R,fYk+H"dV"mQa/OI+,i.?k%Kdm3;.T]aPfr$N
%mqj+U@#6Ib[_VjT\BQcg&m'QnYKE;Oi>$?\iH)\\NO=&68D.FJA'ZOu9'gAqaQ>]M#'4!rdTD@8"Y"[?oX;9E:9U1IU-0C(e,_IK
%@aSMFL#Qj]/`H=>)j[`+[AKh]nR182*ALFdU]1`_AA1.Jp'AGVqef(jWbq/l*XZ#s9tj7!ap&"P,'NrT]JjAJ!M&+t'_':35S(Pi
%@k;^Gi?/J_9MQ6Lg]u1$cf4h=6m&V>m0P],VCrJbbO$>*`)uDd\sTq7n_1HA3R/NY\:(XK"Q/%\+j3Mh"0QTb:(C@6<^1*L8WPga
%k(;NkDe0A6Rk$6e3!Sa%#<@?u^VQHKEaZg+66Ip<U6":,U'3Fp<L2iZ7(>Wq"_=#N;(\XAV.,$F9s#V3!Ss;^RB&'`<%8(R5uLiR
%n,$a;Xr9nDV!+ZBMuhb9ah1tMZ!\e^?$M=LpGH2]?<&*URaDb:]P(ZN^kB-Lr>qfYFW\>PL%"\M4#..m*L\[geJc"7q+3#[mbnZ,
%gGT_4PLZr\<tAX/?9srXpE_1X'[dFu"CFQi/K5</&31PM`4E_/Zm9:]kMT+:KqOMl91`^4h^37L@Gde71;+r_gU:[L!Eelt/pJFJ
%80NG[h&Fp?q'J0RVm2(f<5Chc:@U;Q-ZK-LX)@qg%l(`9)jEl,Q-uEj:fK9O2r_ODhkaPmel,eo<j`Ki5dp)`[0Yu1(W!UZJs3TE
%3u5$`5U'EY&\eI?]<"c\f+BN,FUO#+&0"&Y'?Ec_qZF/q/knSC&6qX<Ohm4&RbEJ(/-jk?/Pl'!f8R!dTLt&S/<$`<$:[o^+iW0q
%RBqf@;ES:S8no/TnN!V,6!`NdM03&'g^rmYBM6OAE$2d!"78jRS-<U_5iU$]dD4J0V@hjV;\5X"f7G=r@b.AjTH?ufHp2`i_!Rl5
%;(?V[?HNI0&5b>0cGC6m!1>6D_C6^o/o:^4HDtalIr&!-7>SSZ&"/W'W>hgY<B$p>Y+X\q)WD%C@SX54VoFiRY1,GJEA$>as.l_>
%\q^R&AZ-U;/_hI(HhL8GAGqf>1UlZiJ,/uVq[<D`55sZYr;GN<O+6rn55sYn*S-'s!\e$9J;f"1&ITiB:IKcTc^_qWN<hCA,ot0Y
%VQLa5*Xd[\=i_fQ4q&.eD$*4u3aAT&'CckNOds5'!"g+0&k')*<aA"Dr-@IZKgGbja:VaL!.O40s3sC*ZZ^h1Ts/nm_p'bU@ROL\
%Ru*j])2i7uhkKbm0T*GC+#XJL-sP?ULbhiFLQ[7o;Y7Sd@cPX6c\;3c&llo<.K$POj<LFUYc4YZPB'G`2,m[I&M&`W3&=!JN2`F#
%(%''jcZahlo\$YI;d75\fHIe6r33$Xa]<C$)Z^lg!U-#/?TgAeX;1\BXk4IZ+q)b`A4_!DP^g?\?@<D7-N^QGY03ign(B4q<Wr]^
%DQnZ]5lMCn;C`[2SLXJS&!154+C;n4;,%o>Gp>Y`K=Stl?b5t>iolZXk0M!(@7mX`qjHXj$k7iA#jGcm6)][FN^+3H4nrI%OAd:i
%7/?E#TJ6G^4]^(!WXLMG4-:j(;EKoO%p2nJAp9mkKN`)DnPEAf/N5[#^8mij.Q4JUY$p9:o.osP-e%4%Pp:V_[uN^9D:fs(6QiYT
%2hr=e1.B)u1o"QH`gO=@Hl4JA:sCg<f&=N.&[7cK(Lo:A?4RK#l'`"lECYLH',C&=go0f+OFV?B"^e1:DG"^CCq_7fSfat2-Qg8)
%mBh(W*sfUA+j<1.YZVV"FDWmNis!H]+)2r1);XaD1-hGrf@HlK[\EeEo7F1+CNgf#ct6q*$"fdYp8Ne3Vrb;5?oQ6>,ZZRiD`#_T
%U022ITDSKjQ)%7ERpHS+?fLE0(*:4eQDR;6.WebGUMYoCW9UfF`+S[Bc-;WGDO/!$\\WD]`4H2/"/UF,m5T4F)tV[Y^WYNEhZ]?T
%Zi<<C4K?%A$77Sle^g:#U'6hm1#iI(*TnL9p$7lMVflr9QN59AlNL=:mZ'W7@$'_L_%0[&]\;kZp#]*#Wo89N:[VMS1XQKJ$SK[q
%"l@@j]-YRhaa)KV]HTt'VX;YuAGMOimEVjo3@h_M48SlGMa-kQp<SCd.-fSke-aQrdN-LT:d)8A)kI/==W>n2iAQ(8\](K$M^"tG
%PjXMtMSIOe^>q#u!Fjj9Z)O5G;oU*KGW%L>B1^%imd;0S6e:.UYJV=Gq^X5rh?(t52>t,OmYE*W4X]YfKDtu\dHB7UnU0XZKgb0-
%^Hhp[)$1-/-=,P%TQ@V$I$^D"cWY(622V_`TNkeZ9cnsErD%e5iOA&,EY]tV,X!\&rIm\99T)G)lG*]e/.PL=\0FCTeRgN+%[sjt
%LN5YfIPafIP@I]Q'9lOC/jSI+-BU&8)fIXJCa-XR'M,:3:I);oj^]#bWksjl,O_KtLhP2tpMD)u7V;tU&9/gD1W(.i&K-s>RMq;m
%\84C!:#p-f&a;AV?=,sYElAkada*msntTiV:_m;legBs/PDF%]&?tF-G'5KV)b#..7#\<#U8IX515biOUMTZm[&S.;pn97qN$@H,
%C_2R[!$YW:hY$m`CY.#hMsCEaO<.p(N`AJ\h,m5I9m%TO?5oJKlGEjF1`8^/;*:>00;IJO@K*L`-LK"'jA:&+,m"*Xf`7:,)es$?
%F1CYgS%OX`4#_<mA1/:C0k_pQG]<`lR]PBVlage?4U7`ah.\'@,\Y;,p=i?Lokj_OBS`"#]*g0TbYtE!_,)9CUjZC7I$iNl$PHdl
%q+PS6NlcF2p%>oBNnO)q//!aSQ3R!H4`0?U'<M9Z#-Vj<%Wd;?j*FJs;TJIurHiZ<rki)t)NpbZpI_$=o_)-qH7:)Z9EA\nZ6"%t
%&=a#++LHMRmNKlWB<iFAelso6-%E"nA3"bb%c:"PZKjoTmR*h:]jK&An0SnLjjQi[&4cmpk*m/FgkaC4-odIl)>ASd&'68Y8R/Hu
%d$<ZL='IY^",4.@f&bs-JDi>CgmI@W)ErK2!:q.*ZoRJ6/[oRk]*?c$#Jo*[?=*!Gf>oL_5oYWQM&mgjFUHTS-h[2+Ht[>5BC<9"
%Jdr7=Gq*OLnVnkNZc;(:d(>=C.k5f%I9_\BT3pt(RW]5hlQujKYN$\1W;Fa2,X*+ri5R?1_C&Vt!qBiB2n8.YO+(CH_mUA'#%JLQ
%#*3a\W5+lVhTm*BJ=3<)FP#k".*Bg?h=0B$=Yj)i\b-$,!46r_p_sX$>2Dj6,.#&;3Y$k'L9[J(1ZFID%'$DY^-*n#ke-OF1m,/>
%Y-&0\PrU!Np)R]*\^GaW2Os:0H65kll_CY,[t2%i)a$Zon(:,""u];E>QW@"Xo2bDaD5^h)W3^,@Nsia!;PK*e95$oCc*`_N#R*e
%M>3pG:`pCfKWa't$a"i!Gj3_fTn5BP!k:RgKC))5KrYh'#g`7*N>cqlGha-`2dJ0EE-:!`bU89I=S5RWKAkSP6-*IG?T',+"<aD4
%kr_'Y?(C4W3XBLE-mFBoZFM0SJedM*g;%#p<cl\;.*>m1)+3i'YmN=+[+Jj:>omCTrN:QA6U7+#s.%Hf3*+2k]!45\WR'u$,bG>g
%WtEBmRSGq>Lk(.7dBE`3;a&StROAh17'pYBd*7SQ%mli5I\U%"aoJ3F@icTp79aMbkR2;,nU2.V$MUia!c9NI.f(M00;@f<_-oA<
%il4nc0kaPj4s84241nK!4Y*+6C,$01;7H&f6X)%-ctt:k;UINfV`JXs_eBE9@rrt1U@W-QJJ',q6$GUHJun17aDnf2JuhL9Z!TJI
%1(Y0)ApdFNDor281T#fq>mJ.'ictXHMqHs<;X1VULnn2qo/WE/pti^u[m<7^7h)YX%PormVnc`8lthOQdJd=X?@8/V9a=6"c!cNt
%n".J"_:i<YLi]gMqaQfKQfe0:6l0Sb,fgV7E\\=b'oN>R,So/-WnESKLVMSt20U(bKupBHGB"&NQeFYb*J>aO92,oqGr2@W@f(B^
%@Dkn*bWB.m7*qh]I'kp^hm^</in(0IlWd>$!o+A#f`ed??,R)fN1`9;Np^'alZBu6i#\-OC93RM'R$"ZLa'UVa5ol$FLu9A<>J[N
%o!#u@C1:.4lOrcrW;YKbj"]?.b&Lir,s!ZETkR@^[t+;22g`2n/1T@OHpImE\fn(b=MM(O/[5:3E-,:WJt#\g,@V"\e%<NIL;/eR
%-eB&03c:b<C_WCdjl8?cIm3Rl%RqICC\;"JgD:.tV)G4/@bunM#eOd6UWNYU'mUBlIhkbCO7%*uo/39RO,e\((?+5^X:ZLdJ]OF&
%8jcC.geQ7+cu;MibQfau0`<+R4m$!G1GbPrgeCZ,@jQ0S\T)k"1io<)=ZS0i1CX](=&X#PL"DS1H23tR`<Y4>"Z$_>A%g']IT4/0
%#jDAY7[E/M^3U@ijD@C_3'"-s0RR.PJX.5]NOPBZ6J^*G03kd#?/4O_;)b2l5&E.JM)\IVk9"C.6U4-p:h8&&FCX%?F.qg3nW:bT
%QKbB)Bu3SCL",/,j?@21^hjZpcG<76>PZ+WW\g)"O]$=M)cFlE1He;R^1U^6bPJ3Nn`d8XCr8CA(iEHSZ?`D-2L8IgA-`eSfoI0.
%e2NW!31@lT?bB)'FNM#0F$0aAM@((7c(+:OMo#k&'+H9&piV)kM"&$%C-<q/7)-:]B)aJ%]gh*Fn1oO^oqcGO"p*a/(_EAs9q&.u
%="#F"35uXF+J<_%YW]aBl+<$Hqf':JigV,FNV?^7G\)830,r/p`LPWa$)<^63T75bDYf_?Y(_)"%F4FI%,Y']RH(?r6S4jC_CM99
%Bu(<K!k0EliA*7`/pj;OdXFdC4NuA4d(B>cf1Y&5mn"?J2;IeEF')Tb(T8,Z-<7!\YQ_M3`g@+lPOhrK,05.trlIF&8V.2mS5-f[
%,0Zo<SV@on2D;Zm'fY%k#8uYU_s.V&'<^AL:i]@dkHBY[^Zb:0HAs$a4De,'7&.,sD^M8FLq$177DgC)l3AoLd"f4"H"]$lh<4oL
%Rg\l)R.l&9%q/9<+4b4<RUG/_D2G.V1JufQjtp@#_=J0$=b\'pX?*QK(<oP%+=JcE?GB7h[8,n#em_tWA8)XiV[>AV(Y.kf'ZF2\
%ST,7/-NY9*Zu0Knoai>7A6RQ"1@B0VLZW4Fr_aI@+r"VW\&06c,Vcg7M"DUZgC95<W89?op-&u]ib(q`MKq/0N@2bLLWI8jBU./!
%CYkQRD@pm2LS5-1%&`&):@q-AN]?MrVk-:>Oa5C8qE-$jP0GFn#%=(q]]eMNp[qWVn/nf1E7u*m.!2iSEM$7:%Bu\@?-L\DM]0lH
%ReNnIBYQJMHn:k'3:Zmq0cdooDE9*dS?gEOpu)KOK+cLXpbP@$'gq4tINQbK.TnrbB"GXC@im4qnkL+g2`sXFDT#RrgkkXla84d!
%`HADSp=Ji<\,O_aYK,R5OMWs\iN>O?.q(sK6'iaO<E5+rJr9K2_qjTi@p/.0!nrWIomH!t:8,?DihROb&fj["q:<jaTE&oTj[!^&
%ClF93701-,'I3:<d9=BeQF1$,>Yi0r`9AEZ3g9kGe@O6#6`h7PemV&d*_l`+rb\SL1MdQ=J)DO);7S%O8An?`P5FRPZL1cIL`6r(
%7sfqKmgi'uC2JWN=cG(j3-<T=1h]K2(sq>o&Z70Pd/`S:)Q(';3p&.f#LK4-M]a##nmP^;0I<_/DMdu?=i>Tk1YS;oq`Oe!P$Qce
%"?73oQF_K<'UOgnnp8hT0rN>eN':QH)X4Pco*9Mpl"j&t*q-XM_MFSe6a7\bUk$p%]a:E"M7+59Z$,GeSL!u7[ek/Q7#D@):SRJe
%D8?f*S6T'.*.8iF8YCkhf_,fY`um.E&+_-($o"?U#'%<Q&YEZkfAp5UH/(4*/@Dc/!],*pDSQURc$VZtXlSeJCVcL^Zc!.I)^lHb
%`D#4k3H&@ENiSE8A;_&rGmgo0jQePA%nRYZWus[WnF>:XY9f"e4q%=(XYHB%Q_Ah1RZ(:=TroH^EdD$qgg?-k65SHF)D=pA)$g-a
%(h7nF$G5ZCgAtJ4V-V=Io=>8=8M];7-bFL!-A%';eDlW:0>e>q];(Eu\7AlP/`8+rGp=AHi,Ft29,;">7mp6KFgpuqU3*7@qkXRD
%RE5bQ]b!`_AXqNI]n3iaDg-F;4.No'?Q?$gPdHUV0bpPUL>K<*]A&HML[rX>e$,q(!&mf*S'gQVl+QJ&`"uKs8.?+7il^C[n<]Eq
%J`IbR5gK%F=$lQFL=4sl8!%7j^UWkZoZ(3T]GZ'Di'SIQ6UOW="5bn_K3IudirTMu3$e#tcFVndc)^jK1FV>qI65u-=R?8Ufe`go
%gaL#1NdMYj(bVe_[f2-ipXq_H;$u@/U]t5'//CJK=D6+5jYLd"Y3s/1*TD/c!Ou4L=2Zec;0qu,R3t,0qYb?`95$ad'LC96(fuPe
%`5)9&io.n1n]^Xl)_Nuh5p[G#RCmFbifL?pnZ.S84%1(too)J=Y)HHP#dm&'Ag^\k7G-m?We]2*Tiu"K9MiGqoK,nMMrGEhO/\1R
%$okf:SVHJQLbZ-kPB%^'SFaq5-XetPDPhYiV`b))kY=iB3>?`9h1uVN2/!ngAnht#$2Qbr%8XtuE#?h*\T&k>EAt!aBB\Xs6BDes
%9K5L4%u(Rsn%?ApR]@Si7Ir';;VXhCE"OmRAXKf5Y^`5#q6`>#'7J:h7A`B.FCqu5+ASe(^J@@RbB1<-+7I\`c&ff/g=*)\#H1V(
%D/TtRODPWQ:4s`)=rX0#13sfF-MCT:Db'a[M\'X1UU;_t6?!jP=`=h?FXH(p=jg&mFR\Vj\_K7!oU=ZnH#uGn&]I_pVl.^T(f>q,
%*5J@lhg"=@KL4QO!*-`bG?f&sUp;Mbb;f]lgX$,T*(;kJj)J9k0DGeD2o-nIG`"nAoE_b*8fB=k@5a*uGji%&rFUPu-lZQKD[9[H
%Ofg*!QmC1>@*oh+I,G_7MjttJ'*OQ+3`pnD[[>SiqoS(7?&eqO3+9CmO@;(c"r9rCGWg"4B>]Hne<3M^F@OM7)"@o$"!S5FJu9/=
%^*Ph%kLj&OHC5_P2BU8Y(&Ua!6,Pe?5'ndb#;^AHAp<Yp<8$+bIhsoqBU_^#+L8Jj16CV5=Wk1?_#V7t5<)T:UTt.pe]6]"&sZUk
%np3Mp^C5'JC=ZcM,`6=!hMO)?l&aY>HS>LJhd!f?EKIKo&'&g'SSiq>_"+,tnN[$as8"tZci<i+rSp-Bo0<6?pV6X(s5h#Qe#G^$
%!_>2g=@:rsS4O#Qo]hr/LgM)u7^'1=$r64(D))&CUhM#-1$@U$248?*o`-icas8$U4`ddb'e[?8?oaRTross8RA(*fCjF<iPJ'hM
%r-."9Z=L;=`0,%YYb&gj0bYnV>AXjtq)MATLDHBg=#R0$=\bNPV()j-cO<:J(gooK=H3iJ[TXg#,0*T4-eAB#r/!/F:`MtFE=Ld?
%8i<hn@#X+q)##_G/JkG^M(6QKd_M9k'o;>3J4c?)EpP82%FqK47WGRM9F1o%%ZD7@.tf#4$O]o2`0B;0,kTVW%9_31Af%=4K.0Sk
%`!0q7PmCi-Ud]NHWTII+P(Qh=(@>^('MU3<R?LpXWDN`P7"7lZ(tpt?3&l%@bAcp)F6WAYQ[Q/)GYLP]^;'9K_*UEH-\27JJ7*h)
%INa6[#n7g3-V>/g.)V`KI\>l:f9bH6YQ>>GJF5pk6Xs;oH=.I'>#.3Ird4KPrM1`f6n:\'ZIpOOr.6T>_Vpo;TXAS9U'uS!@%RZG
%I-%n%j@%-,Z2c#i!/PZ+9N5(mhTThih'bP<#nZpR=>;mof`Yc)<po0PmW^M(_fK@,E8;lD&9.\<3d+L[.iD7c"J^=Fe<)+D*4q)5
%E-9e]ZKMW"+HdI#SrAmteP3U;&.Cb@JIfs@n6eYM7ZC8hn4^sSi'X(1E9>++fnf8:;8Z1WG[nPs$t4\]g8qUK)\U3+kAU@or6>9!
%bhn@Pj8-71iJchIU1M!"`qcN.DOI##.!fXBQ-NO:<);HP(3;P:!sZI2m`iBCpu<Irr:Afpr29STs8(W')is(Ss!R/;0MF58U<uqJ
%pl@@F_[r/8@b?a[hlWq%0jMn&-4*?T)kJgATAedo8[>@nNMeoL%T&<rHtDAt*/1Z>iMAktLk\@#qss23l6XoM=X4>6o&:PqcMUKH
%Al^3B>D@6^heH9>lsDPLR$5>l8)!<h=>HZb7Ys:]OF!Z<:#uOkRjF=.Td61uKDRi<WF65bd0M%<#USo[.$?l*raXRr?*6XF#u`64
%:.`nOjU]:j(O/h_6A_m5-jdpiUa_j+09@#,7jF8n+dB@_4=61Z'!gdWDi;YnT2LO3D+Z,EaN5qQ7YF-RX2YiOl4?TFe)#_@iM/tC
%.$Qn^_C:d)d[=RdJMFbZZ7D/#`':UajNBKKCh=;WasDis6"&e$QfO1*cJ=AOG#1SsRE]T)`aWq-T4ktY)$2F]jf@i>N-%TfY`'Dt
%)eJe-ZodM]L1aq,^3]tupSk/8cSpJ>AOjN=<Xue"6BjnNO[W?C6<`4r2o3BQnaeYG(bmoqR*j$/N/>(\K*Di:`m33np&]Nt91Zn7
%_.CSF1;YQ"G7"r@OO:hINZK$W&_Ze,*&bc3X;F#D,P*+_F)$O9&!dsje5b:)abU!I'3m*%_1Qj=@dK%I/tp[kJfWMm.1[rKc<,kL
%)0aRdF573K`l<f_d8]c3Z6H![:M^k0,AofI\s2m9_mG?9Yu46aA&T&R&?r`SJUlWj8XNK["pI;q9S.-TZQZK2DqL,hh[Kgp"sHb8
%D+W^'KJ\`9R+7%`WH#u*Hp@u@\VUP<+@`+[cAfB,Hos(j-jY/hCl:D&]*2j0Oqb&^T&+4,8I@[p6s:q@k&eiXF+H]G(5u.PN3F\f
%AcNWcRu+K%!=nY<=<-m"1FYP)/\qc%IXo=u/Kql/jII4F0.ppoQi5pf-peW#)me"`1J:\<!uh*BU[h/#dfPT7B'^=IOjHqZOccV4
%EQVacp22.0bC4G7!P%+QR@]Djbb5q@+Ur*m`5mQcTW:rgFCI-e-@Ps4\YF*rlu\9._t=(cGEsb^Bpt[)f;cSs?[S!De[QOqe%@`U
%DV\`kjW=>>?+Z<S&YgH2]mGZ073)o`Oap[9OEI69WX+s8U\YE`b"OCsHjS5\8h6n[C+ng?h%T5S#k-=RA#NMZoZPi-%%hhV.@Oin
%9B:g+mCUr/r\XnhB>+/(NRoodJ`i?dI>V2QYFVN,l`@)L$%lp&r"L'd2u0OjA%2k?\b/ELe$-E&R'NofPT9RUDpXTZm*td;d/Rc!
%$YWV:oZS3n]JO-.INCiqea&-r"gsRVF[TB92gcY'qmZQXiJ/#/Y+aDCiEfCU[c*(*ok&7sQeY_9a5;]6\,L7ADV#>mF1fZjY`4CM
%pB=k8RCTOQd>qsMQ;g*RR*;ofAYe"#E4<>8>suhZ:&RD>%@*UU\hZ2rlV$jhp"@OGH2H98bP=:k$`c6,4<4tp9`N9;dts\l(--%7
%'I[UgJ`WZ9"+2X$c:uq).]UpMG#049C%\Ge*4Xq/8M3!j_TV>J4IeA]inuW#LKZTGK%1o;Sff)7%\;lPm$g#okKXgh++/1qCuoa+
%0D(#5B8%;1-7.u\^<drs4s['.`6&:oWOpTHh%b_Z-UN<h3l4@N'00h>-VgH[A&&D.;-k0s?%k96OPoJ=lAO;-)69YFEV<TK4df@s
%d^/7SqRol:2*r+OAdZSleZZ/;rX.T[lhiI9AiN?a#>]RiMV"L,2.l>^#OuRWFqiXb#*Ka/;m.#8*`u(Vam/2=4rk1.Z0.*j5r'sU
%+[0%!D'0ehUf4Fm?i/5b!r<F#$N\m(7@^^QfGi),IE)hV?%.;9acV!F#2Si<[shef37ab07EA*H)fWDOa3KWaAuS3":\PO0`=j=E
%X%\e;>Lh/\qQm_l*>fAIM-ZMe6>M_NnesU`'WOQ4%Btl.r1diakV@_;F,^J[Qm^?d7]aqgJJ#%5,=S2>c<<]=bLh@X?"G!hJ\B0/
%7e5@j@Mu/'C=5Y?F2Ba=^UISO_i]iW@4)5Va57Z^#0I?=Oj!V(M29=\&0:0\o)dVV:Q`j#j*LE7H^84p7UEspH[d!ii7L@GL3K.V
%BQ!&Ng`2kR<)KXe_Fur['Q+Nl>:ec9iIY!hb]"@a>+L=nRA*7ZQF3PnWT_t$/o/W`(hJ`KLltW[7>!PjAu6T>0ERgV_d+9s9,HI'
%M)Rs)"T"pp+/,mkqPiV62b1;?ZM^DrCWt@6UeJ9Y[YKAr.c#o65[=;?Ru'&D%n&>>VAV/K[!_5cA5mGBN\m#d$5)KC2$^5Q'5Pm"
%/R_U!`QgCeR[B^8Z0'8d[+0#,l89!7;QuS?Q?F7sKVS[V!5ZjW?^ENd/Q^HNOYoWP4fCU2^H7AO]<fTYDk0<n@8W?hn*h*<p"$%M
%aK$\4D\8k*H26g[>GV2+kq0bLO1kL7hBLupVep11hW!$ZM(uB6mTAm5of"BeW*icn>B`?^J]\[!lEnMdof@$;7=V=28^:T0RIsj?
%%YRHO%-FWbU$MZ.)*/>iHX$tXnr,FE/Z;A%U:o+HdXlqa-juE$.!ea]]c_4AMtQkE8CBo,29O:aRZ(3$*Ce2>&bjn]<?rik0?K"r
%D2KW07b0,!$l1%ZN#%X2J!#->$`GQ.BT[i$b_RQV3jG7q7.sg8IqAR!/""hc"e?L(>514ceHR94>*;IJP"@Yh,.tG5CR-7PQ<]TN
%&*pblR(Sij'D=`LQ<_965*S^gOV.G\qQM*35eN>SG?-8iP")PsG-:fc-"o]bge9:<rK;>&M]j]8Z2A8"mm`_kk)cq>/^G*Gb[j4,
%\ld$QH.KE\-sr19%66-_NRg&l9iBb/\=^i/J_N1oBTN66W=Tif>Sc;m)I=i`$V"Zm![H]ICTtCr['^l:/OX.iAUH9!!M3QXO*pM0
%JJVK```B4Dj`6VN3g4eXW>AmY[SX;-I]TUJJ[$Fj:9t&ag8qF<Eg8k4("YF9oc@3i_:i'F=8??a."eI!(%e\3>DmWh5;77+5p),J
%9M4q6[[d5P>Uuq8\i;8+]+gp].IH?T""t=>#8/iCQ6stk[:g0JTG>),YdB/"[0_*[NB4Gt%;:Lbl7S&uU4F#rJ#<3WT^`&Vp>p^J
%B%_8Z?c!-=W9TJ^a>o;LYH^kJ$W<p&So6<T38,]$b^qZBTn1AL[8\8=N%_9DD_ujMl5gcMb'u>B+*-J.<VOVV<8AcJ7Bc6H<VO:r
%O9Jo'N?M*TfrBDW6V/Vb*)_1]='"-),8*c:opLH1:j?R&4`J995RUVuU?'_)HgGPpN$^E+k37m%2!dCdOiV"]=%!DYGQaK\,<DmU
%_N;g7]X$lF30D(CQJFC?[/][qZA$J>bQReEO2UUY/A(qcMtl3e%P/.0Lo7%VL$W]Nq*h*o6_A'c4Xrj8D@:!@B:a`3dBXu]b".Tb
%,W92deEh'Dj\TRoe*>H(Cn=&;>kJn9`6*Z5qG,Vq%f&SYWFBSC8PF)7FKAr0gLWB"('PUU&@_ke/0Zbk2u6K0]`9jj?tL'&Emh5K
%IHK+KU[^@K?`%'>4LuL#)c._'O%PIH.YgIjdO2q+clZQ+LpR[;Z$t4#P6m)EI+N%8QI*VJ!p'V79>D'*ftU@?FlX=XpCohA#k_<i
%.PmrtYfI;@*bhSo`%Obo,%jUoS2@3>]Zo[5,\f<!\jmRaNe,d:8?[hgX[mMi(;7^j[)Z!mX]-\CY3`hK?Bk&bC7V*pk"4?sCT'JM
%i`p5Nh%G>e*OpnB:Ij#e`]CHN;X?eV7"g.-%2gQM0-ko8m''(L\FprH^LGYlAN34#I>hau[3Ulb`A5lca-J<nG4?c&FZ2*p6Iouf
%BX37Wb4i#RKD9TSn(3jj+$7`p@mIYfoQqnsY3]Th<--="kn107A%<N#GP1)K4AI9ob7Ya(i-_Zc`mV!122tg&:g>([oK.i+_-aD,
%\YR-u&`YU1,51uQ]Ll3H*8XAI?)oMpI7(sj2^H,WqJQ99&W#\"Rd2Zs#(.X>,]mSY^Y%N-T'3:kM9't/24G:#>m>Z?8n1;21E2.;
%anasW5C_P!<m^bs*I5MNCqUq/m?9$jjCQ*7<er\D*'qo7#[Gt*c1$FJm,g`>SMJ-Xb3+*$m)cTO5L$!b$T1^QN&`jRl5c5"@K&[t
%32)+7H8suR^pN6CHVh:SA)(b[/6a\JM.VBOj<5tIFN8s"o[8ohW7O5]`uTuSeTt^i&Q(2W.l`ms3mjOS,4p4SB_G7j+&X)HjX,?o
%,3iLQ0rDJU)gU#,6quZjH18gM_^cphZ,Ra[Ogn5;Fm2FR-fk-J,E\6RL79b'H0MS+Xs^iYiqYVEh:J6J:F&c4J^u*."j6ZPjXRe2
%e5CL0W'jet5E7p_8HU9KH#t8shKN7jj0>UQ.a>$P2qL@+>"&AJ3/""t2"6-[&%U4l6tRS_ZO%-GJ#5M<pO,$fG$P,%M"5ChZQ(Xd
%"3ht7lHYg-:6bF.8)bNfY?*_D1ErDg^Yqe<+:raJHk@Meq<?<7ZhDJ;IBAq1,lA/+SS5e^5hE+-"jmA]*;aNs08PqmqP#dnF9rhe
%k42`I^Rhg)Gon=?,Z1,I2B5#gRHeZLEY4FH'/^\!KOlsX>:6R$OWD$jg!-+DRrU1D"juc6!.4Ua:&Q>@pA%!ERdCY!m(%N0qL$Y=
%j)'J;E"Q4Nbq+&K+ehm*IO$Qj$T=gHp"bU:!6C336E!#;$=XAEh)n<Bj2uZV!@1O+$]R(gSkmWUdi^96[,B1Q=pT\-R71_K`5t1i
%dV0SbX-K\rr_-+LSg0M)LTeb$n%)g_5Q,>9%+'4Q$TjS%,2=HX+rWFDdrQcep(nPJX-'GAN'Vkrbqa#f-5S84@eKWBZHKMd+rYXc
%n7/&],8&@=>W\ag;,m$g]'DojAWF`P&M<M5WX4M6%Iki0Rg5'kV=rkP7%Jg)N0[t06g'5SW,&0OeG8WTq9aDWs"UYlQ"58X*@3Bm
%=CP3Of6?b\YG#bn5DV>/]IEdsAj\dto2=hn$b]>Y.K,",J"dRRda-h`=,g<ka)pVEn17%dW"$$Z:!4^0Gn?5$DmMHr'-,=UCc)%b
%.,7K@lBumrp/miq`6AGS*+bo5j,6=I1Re7QqduVk)kqo=`GUMQl'`%n>o6!nL:V:OFpe/IrBYS`]P@*"fjUZDY8q9*rJb=Pe9Gu[
%U1&\1`WI_YWj]\A^NWLg6e=9#)$fsq,#d)PrA*R7UU.S8T38qJ?ULUjl:%5S55Nb1b<$3p)lqK0>?n$G`ipCs?GqTI_I!\Teuj6<
%.eX8!lqT:_O2P,59kYHdIm$e?]W*(97F:Zu\_;\\g@r9np/&n<B&TVP0;;>/7qSg7'+91$>hdq))YFrUGKL?6g,;Z4_o@ECQE%Ze
%N1oN$VruD'[RtsHohG1IWkXA`LqD:kOZ+`_8YjuOI*,+42jDiA6QE-*HI_B(Zbo"/ohgr$AZ^_+Oj"?nLU(6''ODq;,MRP-4`*MS
%6<TeV`Kf&K_'>ZuH/u=Oklf(;Ece8BhqN[),YN2ImF-1;5`:p';egnk7J^+,RhQ82o6=@6(p]g^5#"+T9QZN^EA;4ZZ"F@$V6;Cr
%2UDoEFD+$fbTkD0\@nf6)QTTHU'F3Mq&544Qs&K:'gHU@iJ.n0DkdAWe&:FFofd0.NKm?QU(LAN:PbP!^p$?lnj/#h=#=)&PW:EP
%"nNS[_i5Qk.?=ad<(A7gNpG9bqRrlSZ=%)@)NEg=iBfEkWd7tk-1jG2bYeqFdf<M41M:)X%cA6_>U$#E`e'.[EFsM%"^b,09%lBR
%$RO87J4DVd@Gk,jMn<ZU#nVN%6[uYBLYFZ<UN2>:_,:d[Bu.dL(D0%'&UC?%DB*]F5rYu^T0R9h[LR,E7C8pUc62WhXE!V1&Xq/s
%`]"7oJsO;&b`g53+W8"pG3HdOgo0\mR"Z6^R,,22#)-gm\HZH3?B<3_/1a*L;&G=/\ORIU0ej(QC95r\e5>*.XH)Pam1R3(;>b.t
%c=n(L%,BrM0SsYt57^:k,;L*XL,dbZNpgHrlo(lRIiObb<&#>re<irE.9*O70erfRZQ^1)C;"^c`lPYVo@`dRIE@\e$4-^Zj5btF
%c;KuK)YgY"17`1p?pcAadRI.0L,oQ:4jtA`Sn7+R3n?R=DV+f^r2K!W+OC\)GQP4Si)LZ3$,#=9fT-gFd'HgrqnC'fUNR;=!0(0T
%$S4+(I=r@q%[Dk+8fp'kQ%h[V$)E7,'N9A-!fbjp6&c2,\?6b#b0o$`&ZB7$-^V=kA"0C7E[^N6j<uGJ<LsEs(o-Mb*js9&G'_7r
%Y:AJA7mPF!P#P=8O/5gQ5_DiPI*R`J,O>mg,1WW+XWe]Bc_NJa9@<Ru],jq:VEYPgk1o_c$LK-er;+9%)/u*&Xlb#4H[64gS$K+O
%ot&@7W"SVm`tUu6g8J*S/W0TL8(IHd`#6m(r-l[EFpFkD252/6Mc7;[n:`H>'STs12,Kg/R;@\p$i9ClK,1lVL'rLHQ-XT3A"s`g
%Wlr-4L-*9`7;]Y-K#%X/=GrY<GTVOs=VDLBj`U$Ec`)[:!b*=A@?#=d/)5<K>u+)f;`?.r4Oum$.A@(tA"Dj%bG(26N]#c#mT$B<
%N[d@=OYOdO3a/CD&J[pQ:;ZOLGYG<:+?]s*`l>)=(b2$[BMm,_NUoht1gB=Z[Y!#Wkis*eO<%8@T>!ON_V6`%QGeT+(+>e03ts`Q
%g_s[a[00ne-:gepBGH`$V)3`mQ<Y=ER(W..IX";8.$O9,UR(I?I.lLa[lJR;f\t7FS[pR3LIK#ae8`/`FWl/sj3X5:iYRL-clWg5
%&n&2+\>tY63J>7BD+;gYN&nefGqE9AW?8Xb@JZ'Oj9(Z&ECHUa\e3PNCm^?(D`4\g5]:U"e86KZCR7gmm#iUT.HKOlN'0-64BC.4
%aECBd0@&,tB1(QLV`#-f;-?.<qGEIgS@JK,"f;D'+P%bb]Z$;"$("2`jFSdse8%o(Y4s4h]W<;;1N^S"T2k+)LYenSr_@^V0ei_F
%Ar.`@)OWQGrEPK70-;'7!tSUjL7%4bhcs\(FHKg-k'Ad,#9#c.qkM@:)CVf+/jeO=jkM,7-d6hZ.,>\oj'.L"aEs/@bf;/@h7C`l
%f.i_(1>c<HU1HZl`i$+%eidJ$b(G76\Mm1g4N#n_;d`I?Kp[J2VZhl#iXpf@iOGo][)76?)c?h$Z`=iji0f?pH9d?]?cki&cpVMN
%%<diL/96+>:.p9\,DVS8>oS7TW:!Osn+R3+biuq?/KgI>KB!O82D$I<E+1Xs?dAD7*AI"V7`8i#0d')/k3FBejG=NJ`!H5N)'cgL
%M?/Pp5_9TVGK'ct],hb'_8$g2il$XOMhqblY``EW7s:@*&U?]23AKOK$q6LmG?96XU;]J7+khbbV5>:-%aI/n%7&t\&>sH"h1nLD
%/.(I,@Ls^mKOF<8K2FNcbJZn!X3901!)Wqce.WoDG6*r&&jYrH$Qkc3L%oU*</(Z4nK`K:a2kp"=sF-F\H"[rQaD3o#%*H/^>5Hu
%+d0>'E^@JU,^nWY&=9U5S]iCTB/Zc&iJ;pbS7`@](PlH(<%)no7"U^VqLu<()/W5ji$#6U_q5hE?psWsGu!VC!0IP8"@l-O2@LLY
%+5HE313OZlJi#4r[;SCLRk5`#N?]g`kc*A?%s#es8(,><;g0rhcMJbKf#?;<35-W`V?8'?3YsqQ>OD*;YjpemW3CRKpRCon+A&"m
%&rrJJ_d%nZ5rn$PC`GYQ5uoOn+Ku@QH8l3MrlEc#YP*8HkB,f2!1:\RDB-D)jd-YYo-3N+oh+'L1s&\O-qDR]l=#@b_T-K2NGc[o
%"(T>:"A[?^Mjq7Uhcm[RV\7TJ68WJ(8/iW7+n(NPZ2=/=1(j_Q^Nu^pBd;P>VVcsaq;1!UD'7/LP3$8;,'/4jJI;3$Ln!:b?:.$$
%DTjUC;6`f<mK<k22[4HJ4CbMjqVVNN5Y4:+%kNs"RN#n,piWWMOEg7<7U5b^6@/eH<[##["^&_]D#hXaCfVK8Zka4gU;DMO"\PBE
%nDJolc1<C%PZ;'V_h/JLU!=oREV:uVJDp!;Oi^nV*_NH.;>0A`$P,Fus2F_4"MK$f$Gh80K9,/0J0o*YW*=_*KEkk:8.=ED):@5H
%+i9dGG4_a-"%,SMOa?Jt:r%D<`$Z@g^ACk>$KjoX,n=&i79Uo_+E[r92oNjakl@A\"""0a7>?ANN'MPe.[>_^aT=fdJHd=rY^#P]
%OFk5ZYF;YImgat^YBG-H8N#mAUdpcds#r506"ml!)e`YVhp5ub-JGD_l"TL:3es1*I%J4b^Si"fECjTu%IV-4Ihk$\215DK/:\CY
%kLH9_#kZ&tLf&_u:#L9&i<;5+kCeIq-RVMB:<jgD`$8pE8sS;,>t)YFJ`kf8.bk\b7#9**A/8#2nIp:F@tY#J<(E5h=_!KsIP*Ft
%M,Eu7X";&D!c6.&"d@tZiadcof/Mmp4d;^LEb*D<@P#S(PAWK,d$YKn!\2QiMFFlhFBLoXM).4NM[Lp's*BSiedQTW7)p],_XSf#
%$]!S@\WHJ@]sjL?LnsEV7CTt$)s$s&N1)p5a!]p:n:S(=6_T8K"]R!K1NA^8V\pU*_n-e9$3?JJ!6BgZ->:4#4uRhn"<o)_:]_\s
%C3#]j490:I2VP4cbDEQ*G8F5_??jUS*rh@*_E-e4_BTONQ&E4-!Ws[-"29g4,7s'E;r%qC'p(IS1Cu#lMUi8j7RVALK8Ka:D%-r9
%($5ie(A9@!#!kR)'(AAlCrL7*"BQ1]Q=<(!?tGu#PcXE3AU2QUk;ldfW0%I0.@%qmW#F([S=JI@mRW^r)hq(O`*N/c`gs$\.^4;=
%YIJ(U9WbI*(KGnT&N:euJXcP/pN!d$@?fi*)pjU-W?NqE#ertj9!c>626BYm2EU;,5A-at?WV#_$c1Q*0<8)7Eltu.e5U'?XkE!l
%-7]LD"2n?pi@.Xt,A.)O,aCeC6E(KMX*iu]h^m;P2+:Zk<Lp'pO.75>%nTJsZ\HTNEqNrWTQKfEJO%pU4IWF5N"KBl;,(,d>mH#I
%dr\TMj+ACrk"*<oorOOZ`[btd<sMLq)%`[,=f5Q(rmn+2#O5LV]^:%Rf&$^JkcfV0]clg^&Spaki(Qf"+@<T_X8r>o'=]:/1TLUY
%?-.E'::"T[H\Xm-B(]2[7[pVhGl>Y*9b<_Z0[)U=.Th'q+*".2<.%S"o@9$2#X:?k<&ASc@pqT@O:ZfZr.&O"]cMk(8fQJdLGuOc
%73nQK]ShZJn:Gi8lfN`Ra7[d9-U,^Qq:dKqa9:IeZ>RYEOqB[E=X-pgIQ8>)b$8oJ"Vf#BH"*kFQs?]5=UV.%-S)>2Ml(U"W-V@'
%9'@fg^X;CNG!7TLc&hcR3[gElL$3nl'Zm*u@tR_V$d&4[fFUJG3FC?4kiDrQjhQ^GbMr.>L?$?t%="),%ua&CU8NKpk>cgO3?L3g
%dhes5O]"7Kc3M&fbB4[!\EE]TEdi%T#;qcN(ho+R3(_D.cD]YDk5fa6N%ZI>"",pJhU`HjgP"3d03[-o(1oF\8@=0d*P4HF@=1eQ
%6O0:CeHgDMld,iWTEb'EQmaCf6D1:r-k-5Y=V'3o(]mq[9'l7#/F-n%`_[Ed)</F_ql53`VT"7>[U[p1k^G=43^,>:i;KhQ,>j_$
%"33+=Vl#1UKBM+9RBb-=*7WkilQK_6\169p>E;5YRQ'/%%N`ZC)7kRH-b`l*.]Lpgi#Fh[$]Zp"`J/upFM<'?_k)_^*bi77p`%[4
%J:+-N(C9it6rBjE[#*3HGhaJ5_$R0M[Rhiu`HfMF-YG^@3Npp"]X;QZj2-@%"!YA2-q.sp0-Ki-=94Opm$_ql"[kO6"T\`M#p'.M
%1$9>iq.-"<MZ=cVgO+R7:JU[PZ90?o62bppo>&Ep-WE'=*Wc\I!8(UdjHC6GJ']hgRB/FCa87AG`h_en2gW<I&0@+1X>^rUs1l9R
%\74\fA@)MZB(EcrqR'0>Y#DafMg<4.C>SI7]X'_P[B.]nB6T.cH05eC^,'"XZ:2#!@(FF[e5J7FV'T^'W%Wf45Oq0WiNibJEc+1O
%c-Tc/m%4-uMi_;Tr9>cm_-+F:5P^$CST<pAkX]>e3,?NR!E0Emj%ACSMJ==t>[aXModF4u1Mb#o9N,rOq0nR4r/h_s[8$+7iOA68
%1=l8*iGfc\2hrX-PnS\\BN1R9`]f2@.EA3N<R.\%^Yg[j1sEDmZMQ5qK=1O>!lncgh?mH`7EL`nc@4)tY0+>b"%;!M`K<@L]^0L>
%qh;Yd<=mrBjUUC4"p]SR-UbD$p17r5X*T9_gh5p3s)!I'$^.^[Z:74lq-V;`n1OI&0\GHj?=6'>]oLoMY'clOp-,B,GY%ho[J''K
%)`=XX_cjL!LiS$u;5<t:1;)*,=kG]Q,,H5=;81E==8LR5'=KE.1GH&nPsTZP6km*Pr\cr#s$GF!E5H;V\dHu-(8-%G)[AhLFjuhW
%I[1gH=:n;e0O6EH,k#,^3scjJF*r#Fb"LbTJuDr]0;OR0-Z\P#GZ4+]V9@]`1(KhYd*[^O'@j`[3Oj/p3"ZkI*)lp-G3S,WX^1?t
%[C.6\)H&T_3.ZU\`8QJ&KA8FgSd9]NH3H(&kVb4CZSXK9l[[MKe'd-[<r!>m-K+K/UROYZN4T$j_]:3i(VON,TU82LhEca>Koh@i
%4snm6aK/"](AZ8fQ"*D<EGb1t.cR^DNS)k!a">94h*E5<41IG_^7p'7e6pn3XePoXq[]WJ3\nrV!M=-1#PT'IgD;pnX"QH+BR)P_
%+\e$,?Y2lF#V:+WQ$M+A\W9b[)i\ZSlF@k>qhY$c2t!W,2EXke!A[3,M'%khY7:Rh$ef$4_3SIXlB0$]cE.CT=bTGoU-cG;Gt\*2
%dk@l'T<'RO8(.qV0)6g'T3-*.=bce<o1O0iZ!u\>//2OYHjT6Hf&Dd(Qo?H<",BtQIc:clV!2WfW9k>8T/[E#'S`A`FmURdSiJ<e
%3aI"]6D\!3r/"DhAYJXj?qaoor.26[4o'?O*PtI.5I&X6G51K^[!dN'40(=rJrkEal?;b4Q1@rSe9gK15[,#EJU'dr<GS.8XW^(1
%g8Kf?Y8TqPd(MnF.8>61pLc4o/]8Sc(Cb]n2.P%]ZF3UB[nmN2`!9Q%@c.W36:CLN,fZ(JFjNsISOLnM]aYR0K&ifV62A6S`ZT^N
%LWF!o$#k2>If._>*<?BVLHoX0qR'0NMi?IVJ"slEX4q:W=UnS<pfYZt@O_3;:F[pnrPQ8V=T_(gZ=C&%n(Y;[in$XN\8$o=Oh2'9
%h.Q\4(6Oti;t(f^a964P-_f6=I8b`)^cm:4\dontD((EOq\q($$97@L:27kO[9dt(6cH;E4+N73gB0RJhDY4OkkKA60!82Q&@*DM
%ZOG0QNir4OhBWhAn9TBgaWYc]P4lUb.XZ\;s0/[?"g/6UfQIL6?ga-SFmSoF>s-[JFmu7W5<34Q((KfW&s7ipj>=`"cn]LgVW!%2
%@&P"/J.[QIWM'CT>$rh'Rcd04[XB*XXFp1\'hKkNAA*eT(E'iD<Q?p1l:`4I%q"((Dc?^$Xb;lVGlHj10Ik@79B+ake1ICb76LTY
%hDRmo0\YD+]-lpr(T1E]bQgi,r`Og\C#g>BDm7ad=[oX=TE`nPF$,Nk2:&dpb\&LOdZ7m)bhGU:%NYR`rfY']44JH@5uj?!gYWJj
%6oi:-Fr4k.G`T%aQ<u/A^8Bob)sR>'o%'aXYtT>bRMWh'MdNd`DH(u0+ZDgRksfNo#12FQSU\j25o&oNrs["WJt^'=7TM[r5DYl\
%4jahaN#"P)6/[D&4Yl0q0[BC!X3?oFca=ji4ZuL*Bno(ql:]2T0H/IDC1=nKN+,GKGYJr<lE;K#*h:d`;_$3eN.jp;hamXb:?jh+
%OD$k'F10aF?Dj?Ec`jO>dr#a*/lqP97_iNG:\+0016]4o,Aq!7',KD6KJ'8fq,n"#/gNOahO^DH`7L@fH\S]TgG@>Uc"UnK@&Z]T
%d-Sl3N\n._cSO'Ibd85P4@@BJjr+$^\3342m^-W*iA"sn&iTMklks!k8<iKZC.N\Y-Zu#Sk&p8(2=6hgeF_.YU!K=fc;;)1=lfLc
%'Baq^Ug`(#X1F\/5g4cj$<=0L4+A%]rk-N^M`fDJ$#0PL".BF#+TnJjYCLFlh-Ign2@oCa7oD)[Ab.Z&8!&.3>,>dWhKrq^g-Y3'
%-./6iXAW'9N@N[+[!k6UAL(36pU6G[/W:?*[!Em4;Z@-h/^prWM3)Y")"kq&rV>)qm</hD?XXK(75UpEiO;c3c)UKM7ULN*H$>gq
%L:#666_%enH.tH6TABM2),.de%DT2]E-I-&]]hq@MUN2%(E@3qDU2/3j>:#EGnqmLcm9IT*/g[%B<'d@IDgWJUh1Mppk"Cq+6=4L
%T2=#P_skF6_B"!U!a!.^eC,"f&3H1!YX^6h]S\NMrs]^R/9.&`0CmlLT2:Yl_I)3a1aqie`U8IBjo0uNe9,f!St2kCaB]m8,[s*_
%goBjAIkIAZ=hnnn#OujT(Bj',mCX2Oi$a2ImTQ;^F!\5h%P_9)eKGpr.,1uT#HH!s7)_Xe=@Z=P*aCAa#WAk.VU`hV=r"XXFTGN2
%Pq:K9Imp2<rg7%0b$ofk/T<Ys,Z\k3C4R/;(Y#JQp9uuNW=,t)cd#L:1p&Dp;s0Zu]ug?!n,QM&_j-(6I_h*P-L;^&g(+55:sGSa
%<E9S4s,r7LU<^Pq!3XZ>4Db#j/>*CMJihMWPS]=fopbWtHj*Q13bU2YN=!>-8#)_iImLEc_r0OkXf(bVqb<8d^E0q<Ek[UaU2j4]
%\b1BrJ3bs1>%sQ?Me#KmiVa5-(6ploRgoN%TU<!*s,u\N?pc>$i^+6SJFP_VQp+I!cnYc`H"#E1q^?3K2ueJAg@iVEE`sCXV#@$G
%BKn[7lY_&@Kpu(5pE><*khNRP`_c9[p%c''\3XMu"4P']JAbST/CA9-pbP?=+>&klTa@J<YV)!uO(nuI8=O6h:pT6UOug3/W1boB
%#p>0G<K(2.(HN^t!FqFN8:toc<J-CaK?umFQ[Km3_M.ttg-m>KI)G]\2\pAapRJ4m6:gN!,)@Z3oeq-ifgW=;]nZP\*5*B2Y2Ng@
%B-E[)X%9CS7m(N]pJE[VcJ^U`RtL]B+5^G"EJ@<X/XlUan:Xsd\@\[J(*$-ThqYM4pAp!6=V`dBRfl*d@(?&PVV3t>B'!s?f%.19
%B?tM&3![df<:1A<0!iDhj'P2^cg43L%,87ObU9*o27:"KU&h(?qN5IEiT_DS"+37I3q`EJ4*2SOFD,0B(1`F(Yu0m8Vd$M90<+OP
%KBb8q#S]aQGd0%U$qkFa1^t\ul;j_oQo\E?#9bPIp0h<`nF<0FWhWjiAO/,$>H6A#l[)r7`uE%bGSdid1.)ACm1<2-`*::,F7Tda
%gTGO@%/K5VM"W[h(e6CA5;>=Fn"Y[8TJAbl1+X&P=$oY,2*K8n/?Gkd@nXdCr9]a/ZYl^?XFn5cm7'L@s-E4K.c+"0<.G>5iG't-
%orQju*Jt`B8_#)Y3/*_T$gbb\T+u:hJ4pUS-9R01(AhK.,&[,;H5fC,B@AF15FC+agq(R>VkN&FS40iX:;^"$0<'+cRG,.*Ka^.,
%jX*aQTXq(''m!,cig$sCq<&AF`]'P^khC1meZ]2RBJ1T)aOctdOh>d6e*$oa[:&Z=NP9qf,pCjjoO3h@.gbGAZ[ECiiL3Y^^5^P"
%0q1Wm.@,:&&F%d3F7?>FJW`;4qAZF8eB2HVqMGRXS-ILgQc<N<>gG0(H?^&Q9N)amdDhWX[F"*P`AkmNNWXGf%h_>A-_0<S=q=(J
%*R"/!,gH#+G/#Oe/F)S2@Bdq')dZ=o%pr9l7Vc]XM0@gL/+.lK_#$&b^4Ht#5;oN)?/UK<>^f8`)j%(IN-J>UH!m`Z9NRaLDVC9d
%VaEGjr$,7(1(PSZ6EM@'FXRWTE:h[uAS+p_nVp_,XD!EGP45"?l@roCI112f]ciBW&*g^6*Xo9)<:_k4d5F#XQH8KR$2*R@EIEV(
%CA-E6(.b_04tPj43I^+5F-Kb<F#s$OfVpBfn8ff!"Ykfsc(ia3^^!nF8b:@1.Mr]1p5k3WK2'P,f[lhd"k!qr,KDerS?pW*>V6rc
%C-Y$;BiMVF8;Bn%br(oAoV\8t9r#n7#M2;W?=ufE2E)hkpSC7i/@M_^dTt965F"G'2;cDa4ZCF,]PNVtF)Sc.:-,KAD&u0qEe?X.
%m)B<;QCC=N)FQs$SaqYOD&fKEiR/22Y:$I*j<E<q)#:i#j+q"`Y`(Js'a;cTkXgdN@JqM&oH:tobbs2MAY(d:AZ02H&u4;eHqC`s
%S*)=>XTgm^6Q(kaK3!EA+.HH<LrRko7(bCL^-s,Lk*&5<-NjLh@n8P\Ap)apDNLI(h^g^fBL?^V,LP.]O:,u?nTK=cO':SgU0=)t
%.n$`9S>k(cA%l>RDp2#slcii>DTAFtl#,,3>d#T6Gq)Y?lk,amdQgARp;s"AN3d,_mpNi-#%J7\jttr@,-QG&LWGj33k\O2[U'0I
%[te"oW7LTnE]/&DJCP!Xo]mf(o0ndAc+O#In&d^6SCS5B\nNBlm97u"Tc-XDIF"<rbrKB(QKcGKSpAm`c$R_1^S!4>O."Je?$>5J
%f,n&7'9n!;ADUCt*@$33kTF!Wbf3Zp)p:SQV$s4mXKYYmKX^dXE8O*#JuL(/AO`'YrKUa)b7bnhS;&D;JeJ=UX:^NloL)Ii=o,fm
%hob.=.a2IMQNVkr8u&0]9M?/g7kDm!d-^q$>hIK*\o%(ai;G!pbnA_99$Bs:XmsX)qAKefR?)iuh<B([91IT>XIXrB#\i?r5h]d!
%h2O+1l7I'6Nc88XcLg23;EJ>&*-Z"Z:W#4e82D5t87BX]aG5EMFC.#sFfg&]NFR#eQn-M_Ne#iR:5i$c&O"tYX4bdY2D&b:f`VJ=
%*K<a,&K%:i='?S@-8Cd#@Qa?@;(^=E'brV_D)$pph9](4J'LEF@"@L:/ruJn2LAiO6=fVem*:e*cKm)CN's]kEk9O9Mb*'WCp=L7
%=>&iuj;g!c\WMg7XlW/*Nmj@o-;.#+<"B/aTJFjGp/No73J^npfGT-Mh!@#E#n&.)40p$%bTqEF!'3_Dgu%if0qkGL5m%#QT4*M.
%"H6\XTPWfVb<c3KnS1"3KFV'_aF,4\-6tAhL`ca]e'_9q!J(j;%q^@qGgE')"7d7bhAG7("?+I0l1Z+1+Q;LBOX2#]'%e&7f95'B
%KURs\L^F//OYJL[?qEf:_e;P0KLGr/^;2h_?f</bm^\2][2p2/Pf'FrSE_L9',!KgQk5>9kdtFsr`2M!UC.c<Y7dLiO'N37fIe\\
%j95VmEI^A9Fu>q_,"k:s5^$uP'^ur)+e/cb3[?$<X9"c%+=C$;Q#hH_n]Zg9)&t1J0ihd`M$j#7Kn\RF6lH=KUf('Yn:H@<egrVE
%2%77OL$.p7!9kK+4+)f*IMGCr">)AB*f$4T77@>em>1'T%%pQ+ll?t!jUg8jn,.%\+C.<1U]h!ZF6T+m7);0aKYSu#017DSo7e'L
%$o5!f;0`7-J;O^_aMBuU'rO@WL!6)(YQ-B@8.F[C><H(k@$C&d\,bJ&$S%ueYe\814k^,TZkHZ=Kb.'t\S;J"i';d472N==h)CX+
%YTOLS?uY+WPN#+b<O2&t!m6%DFCKl@3%IJ8B&BVN$N'mSEaV8:NAaCNAtQ`hrcuWh-anbS?dFmO0o'Kh!^AUCBg`g19sg54%jQj]
%$3YforR84Z'^/-tD*q-=Zoc%KSUXaC$l,sB.Qmma06uKH7EGstTeXQ(:A_Kg'/boVm<]C37L!P<RksZbmb9q#*QY2a+J,e7D;1X'
%+>qo%T5`kIDK=V.;^PnJTkIW:FW`Io/gm%DJT:Q8dkn?O$,5uM58.BeK]<_%U.(J5KPCS2aGi5#\s)=!ra*2E!Ii<q7cAKnN!9K`
%P+WDfG=L`PMGu4^bikfeOJb?_k!Lhjg.+tfXr/dXnj#5++UF7R"XLNQ$lDYY+WeB0M$/Wo#cN;Z[,ccrjago;1[\Eqbp0i!W[E'7
%T,?[8j9hc-iS?AgO9aL(#EE*/4W32pnY10)H7BH4.1[E1>$re0!eI##16SC\.RYKl4;e`hOeJ,7=Q(eBo%n,XH.l+6TIfW[&l9Ku
%Y4Pah5VuLfdE)=o%a92s':<nO&rog:*\[G>R"1\uJp[b9+u05m=,Ol5"OH;lm$Y-dM_f(uo$44)?p<ZLbAs76pI\(^fCD?hAmb\5
%4$cXjaPVP.km&QJfBs:cc@!,6BC[-"q@b3/'-kAA=]p;iPPYY"c?r/2=>f0m`I>[WI,pK6J=^/.jCTPY9Lq-l@"t<\,95.4k8XpV
%9Y3SSFu3h`')@O]43lOh_?L;W`fAFDW(@Tl25GbU3[*J7<S.c`(g3<;1]n'5E"J(9V&okY2.1Fn,PS'%6J*F>cH%t"QE6lTDI8-N
%?a!Lt0=:kaG?=nuhCp)W>TS'+X6M&ZaJX=KSL?g2_t7*31_aO9qs;5j/\iGY0^fnp_;TjlW7!D3bk*VV9F=1eN0(U/(<HXG.T<R#
%2'6pD^_LXYqf*h`29D'GOPPB\AKh:<X=a'_."8H<qXcSr=de$CP-/,m_`\QfMCIpNjr0U-9$C8*TW/K?U;/k]c;e/?"tq\-4"L"K
%iB_C%-fP\-rDjQ[XQ4LJ9'^BWQ4,mQlJ@V8`VP&L;IHd_mJCkj(5U1.NGcMZooXQ5N<ZE*Yf<#i>+WrYoV?n_;6Gf,@I6a5Uc=6Q
%b48L<1Xk9`\V3U#WCaoW!n=/WIKd>gOFij6\*UtP0K]F-lk8rhmE9V'A$LK^3pSp\`()#TqM)(%-O)`%cG[^$g_ITk@)HsXIPZNu
%n1m5WbjS_Q7VjXd?e0F1\pT1#Zc]UJH6,Z?,EcaIKNAKkaDVD5V$Af:[=V"H8FTb9A[t%ugc*r7.(TX)W0)TH:Sqfc1Sa1uq%?uO
%)F[oS\*LU14rb4##G_MiO4s#QY="JuglJ.?F.1XUm692YC:hH9<R"_m\5@G\Hj/2kF_gePXguX=]2-.mQriKjFC3,/g82eZ<Ho%%
%0JNaR[P^Qbl`pldJW0gqOQep&i)G#rn3.^?;KEU*:`kIan`K+IZ;KbfJS88#HLC/;.m;0^XIs-^@*O<]Ph01CGYt+XAj7of#"h?a
%S.0o%TWOu+J)tUd!*foNgVm:G]!>rS\>3>'kVITeA;!dF!G9ecAlU?P!t#-dJ>,oUdOC#Cq1BQQ_,8\9UV%a&k@$qb0Q;lJmkqb^
%i"q?nN='0"fGFVpFiq2d`/'j*]PiX;/-Z^O'QDBW0I/\B/@2P%5f.(95E-2]Cf]n5$&B3'.-)i:*kr;u;M.&0:3oYg<1"<dZ)<Fu
%mWq'B%+7Ir1aUpe:G^/AYXgh[adU&CI!]Z?l)n-0VXi$3)H`Bdm?pbaSHf2`q>7[`:fo-8G^F(VNh%<!,-?8d;nRNo\Z0Ji/5<_<
%m^UX*CH0X:S,4mm;2!!A:Z@]R1WtRs@*UG"8;1Sb71\G4Y]bO(bUcq[#3"7FS"#X,o`EAo%H&KU;GiW3bZ=s-Z*5G,ClqjB@#+K*
%lPm,6H!W*FM4&NMQ+@lEWRbrTm%D9*a@J.=gET,\!o&5]n;B)00dqOOaA4b<lR><@A!!iP_<8%l:40O'DE@<XM;K^ZH!0l^%N7G5
%KYr91$Tr"_fJ[IK667WK0uTa-Q@NB]:;R*/O_UKRPP9g6T6QKQ'N0U>"VLT8am"JVmkoL.dk`4H9<a_Fa)-..#(nf7o`Z^*#+4LH
%=Uh+6M5W'e"]SSe$sAdVB]U[Se`.L_0i64(IM#jcPNT>?4La#7..r@B^>9?eHKONaIoc1_4M#nQ[E?%`*W=tbXQXJSXa.PJ@XN.4
%k(_=8^!?pk4Yj>:7NV,kLTfN#en,&f'.:^GfW="_5-%f"\T6X1aa/*e3`j2sMP9cA2[F*N2>%[4AQ$"-7"."3<"$m"<Do?aC6uq[
%bqPZ9eK@&4"+=+fiaF#^<";:';.]o`,n9?rP&$(!qFVUW)_%Kl)A<r1h<95\i9bFH>8NC&9C&aL/hl$^A(lBtY!>`2pi09@G]_7_
%;[t[tgS1oC"YF0V0gJI:E?+$`mMQ@4S7Y&m1a!GE#-Bi+%sViV"p]k(T)=\3f44#+$SBO>PVaC`A+"g0^Wj/(n"*X+BG/'<@b11I
%)\E*Sa9[Xh"Oo0!0&qI?dkN8#Wg.g.&>"s!AjS#kI*j4`k-uZ`D=rhO?('sT7P%4<_[J2)leE18GJ_t7HS!'M[13Pe+o1(!3f,E3
%V"P,WOfaq4oht/&;85\Z&N2f.UZ5A+_S>Q#hj35dmK'T5rOe>HUVFAo/(:a5,,D-_(.T8\ZnrMGL!q;Pfhu2BK?B2h2FS-5H*ZG>
%$OHI*>"C*XcX7c;74eSUCiQ"e00*/*7Qq^3O7A"e8iJ=-a%sSf$&ULuoZZ/0Kcs2!_N>@!'Xo&%/*G0d*c>td&AjPAnK2%br_gFe
%?=YY4X[[tbM]F_tS\(b`C+milZm$J-EC03$$h\^Q[+FGORLtQcQ!I>QAI*(!oi>Ri.`67FYkSkb$":Z+h4AG&=q]hW0b9`_4bJ>H
%fudk=01SK70=:Xd)>N'ScLC-WRTMn?"q3,9oLRhrc13OfjmW5P(^F=?nP<2Aor&`R'#*LkS<EY9rS"6j#M6WI9O2T3N@!#HPAOua
%.&e$20s6B^*M::h3E/)Gb'l_A?\2CZG_'\;Kh<:_IMAniEKH5a&/GSGR:fsL);P1,q6a?(D#(r-?Z9UVYGYkG=P(5'<B[(3(*S/_
%((Gln`[iI';@Vl8^dgOD,+UN.59StFRf:/7g@Tn;0*G$B,9#'N<Bq^VZtY2@d:-*7%6=b]**QEY'0jp5ZQ`e/Y$`I5qU@.u)<gTW
%VFHFfC(:DUQdL';L'\sp\-B0=$ZQsfGh?oe-[paD8onC/+UGU67rtRt:aLX^58#i0$:+Y9bA?dp<QhK?=46Pp.N&cU=<4i`7l%"-
%VfZ1Bn6]/;/o]^ArB_&<OVG*%:4\s&;mp8Kr:reZ\e?UfoFP0udM&f8&.'L!WWn$/]@1#^.Hs2l))A6@+ndWM4)9BfjA1!U;PI?S
%LX;K&*?OL:p/UTpnQUoD)+&-'4kn!YU(t#KX(%%WR=:),$3C>>9nZulihRB5aF]"c6.lVYcgb*f>5j8Mkl/IpcQE[::dfnCW"AT9
%Rg!an*,dB"1`@Wh*YRG-b3CY=_nPN,m)Q.$NA=q[.GFcnaFrlX/k\1F8?jKC0qF9YoV*g+q8o?Q\>Q-#q-XBE@sKi\Jeb2aIjl'1
%Ur?D%Tk+fj!e=-g=iLFd&r%&5S:gI>$B4X#&Y@ZPF2I6SPisUa,SBkt,D,8=\6<(HN89skGani$H/_OPPJ.hX&V__H*kR<8(PQiC
%*qq-K(C1IWEtEXRm<Ga>cKUf`G\2nRO=BHBR]`r%&.$/f#g\I2]/fekU334X&7;;p#9u"<+^ZBFV0oecW8CaM":2SsF=r*!U#V<\
%!j"jOggn,jh.8cplD.9EGeN'02/i8,"lX>r(6nU:.kJaX(9HQ"=NLr[pT+]NX/P3<#&kCOR+Mbh5UXmA)gG2`J3=7VTt#i"W6Smk
%^X;6HKV'qal_8_Y\SQZ4Fk(m=`XEXk(eMWjBePr_E#'FFoH'8Bc_V:1*#TnF]&BP":c8)giI#MU7OAgpTeC"1rWEZ`3*B<31=F>N
%T+*cI9BQC%UdWbh,2+pb<9r-2gna'HU$#DbeMpC-Hfl3(\<3NO'f$gij&B/F*d1B'fRa>-,:XH"rPr9M>U(n>'$m)Y&q6Z1^+0!L
%:T)>W0Ue9T<6Ha^!V/V6Ct'nV'#,t06"==MZE%)l65rKOpBQfo,MZt^Qc9sfDF#O2&oedC>ao1f!h=M4=m#$ccG\8*J35TrI]qqY
%#<p/jb9Y+7bYmj8h@(D%U#&e?FZ1Z;b7Yb3)+M=P=Cl0;hKj0)M>OK$-R'L;/oq.X$?;SmQ.AVLdYQiUGc"X+l[-oFdimr"4DVC.
%?VfC:]T:Il/Xm+oBWi?_<FIkA*pJR27JjBtL(]arj'dJGLg_3hVq`+]OdRtt!==n1$"=us@VB,TVWh3D5m\160s:Wed(Y";fT8iu
%mh[W$[&6)W1SBh1HpsRl@j[BHKi]cU&Jo7ZOI)X9>DKE&k'*q/?/L+=3/6Y/m=lKO>YZu2e<'sa`c/4iPB/!Ugb1F1T\(1Md*OsE
%f@1aYjC/LOaJsHo#XeA[7R/PhpetpDaEX?SAX(NrTGX"TZI9rT'hl_kFrr_\+^G]$.r)S;/J8d#4U[@WQ=\ETh^4'A<cD,/hqRJ%
%4q'T>!JHSc*kKh!hZP;1jpaRm$ciCjkR`Ls44<dXZQfP:OrqV#Wgt@rGokWhOK=eO`5oaq9.e?0H/5*Tjl9rs#D'R2:lNkL#`0-s
%dWbRZLFEATHJQ7D$6sWAi%,7Yhn@+nb^0L2o'$F:;55'8gnlp:!-:VO6T+J&9ueSlV!cY^EU0n-fdI:Se?!krIcjkAUIY!4)+eTJ
%;%S+#EFsMH:Ag61`BKV8o!?e@r(-2,=LCq6BFH:BE!a$$X=&a1@bm:D1")"LZWJ;bH:sTZlW(Pb\_uGVcuik&3l]P+d\b&*/5$f]
%"mRN<J2m]L7])42\h"&!g*^I5>>NS,ob_.(Bo9j3EKT?u=V;9!DhtXmY/<NZ$A`CKd>QXr@*CHA,#C%aglVk.V2Rfi15E8=s,)X)
%DqD!B9^F::'#o[/OF=&>V3/FuFb3Q?Nk9`.:($T!iJW%;Ntj]=B.dPBPP1\VAQ_NOQ4k0^@$Kk-QQ4dbL2u#naQ;$no(""s-BkPd
%E$#7Y`p,+fB[5D[23&Tu-pJ5m.*1^d!,,1gO]]'mK(Ts5Z!hQ>,U/bRJ0:,^$n.BCB==]GCB=L@c&!tc^4Am*Ns%F]<hc3']Y!W/
%<De^SG-64=#?4)nH+WPmj\Pj#@\,lFeR%p<@'RR(Q`[CLN#XPs.i=FOB_m>ae'-EXkM5/%2IH++8Z7L@6\d0I3Q!+O\?mkI]Jb[L
%">?J6<"N9DmWgt!NsW&@$-g.^-qCfN=t^F[dac?A+MaF`%*BE@:>+TP$s3-kiB(F2l/L7)g3h`#*=6L=j*GZtj%<$S_<KW+j#)i`
%-G6S2!!BK.L0R\+XZ51c&64*LWg+kGOF[KL63g"A2P7NKT_$ZY@MG).*UF=&"".Y29-&f\fGlD0FCV#G+dJ$[a-(;0dJH,6+C[Fp
%nqtLDLg_o/7mlU)fMV<XKIUr1@)E#d-k3HT/h'=Vdd<AMiD2TD$OYKl&#"@TCSZ+J:'C5F90+ADG0ZV*@t=iA!JgO]rM=18`KXa_
%[+J!]cQ(bMFI`f<<GbTq#2*g@@uD3i!_TQ-:W>qMCS"TdFG=Zb'ta80HfWLSU)?i>agt0XieK2ZXmV)(7FWj2O^np@2-:tQ4K^',
%HIQcLV7`qM:Gf,a6%#&Wc[c?,.M_buS]cs?08LiZBkKXBYqr]CHZZ&(oKc)EeYmp]PXEo.(^7tl7@"E.k7s/kW0@(7#iWV-1;D!e
%8GZ"RlAE?_+,NY:>?s9&NTtb:jbX0^]+&&DnQP%g7]n+AbGspI(J5m8lEN,>V'@UUd7fXa91t><M!Ar&FeeZ)dS*-h&l:stO6g^S
%[+m?KmA>Z@a!r'5eQH@o$CaepcEu4]L[00=%AP.S+*"(WF3!eZpF#g4+,Qqo1VsGdcbq,"HUU>afW]oXp(MH1G5&h&WU@#R)1s7F
%VQdFNh`&bJCPZjYUF[([kVn^BH8$N2DqJ_24''6HRcUAVlcZDmlUfj%qmVrPNoFkq#ki,1UU3qFYcaE`]SK\L,7[+`HP*A$]ssY%
%XnPsGD\CZ.>E,7g)ma2kmP1HfPGU^.n%%gMeBH>BA@So<BmfCqRb`^5;N5l^8)e&$`'?<sNjOl[=`[jn=j&AS5(dk!(,V(PU`UIC
%g%89b)T-RHZj=^HP%V=O-(=50^>_\Rlshdp,7R^)aNkZ\m0OsIh7^_XA(Pp1YI_IH5/PV[IC&cN7!/$DDEEO,`dNn6X/>icI`aD3
%7/J5_^5@D+1tGK&=Y)Gd(@HM>ZEGmLfoWE]0V>PRiZ]+r<s5:jKr*JCk!u%W/ZB6k9iI"Z\nQ$I8]^b/B\#A-p)lm%1+"6RL0YJp
%X$[**%(d;fC4$sg&%g&\(Y=k&8#>%obus=.Ahs*:XY],#Wd*(XS83WT9@MuIak1MDW_qbc,3OU%,&u!]VX]UYm00a<eu6l#n&'D%
%ksW0T3=P-TrV^/]p(3QH.'q@OOU+lOnQ3]5E0CZk&P80f*JmbX7iaBVX7\6Jb/S)!\e+Q$N'TgD7%',5(10kbMX*LNRpbJL/]H6_
%&hWjNN0@r6B7@aTL4ZO9UcMfa@-l1jp`52p4Dc]7:\W5UPbjd3eWmuBNHJYl;n]"IFqJCN<FE`8+6H9o$_RnlAldl,8d^@pVr%T#
%hl'M3=tJpd5%_'<=>#?qcdb'KW&$;%)X?c>^.7Yb2@e*d8$uk%mu3a23b]V'<8ED@EhbQ0jL!K-WST%Bj)43eG!4Z;ns_@8B\X+?
%.FtS;IN/l.*YEfABMh/7e*-[=4KPoPPBr&N2@<:d$Uq\1SJgF7G@5,X82?sg+c:V)?'qnB9"%<nKJZi^P\+hY'DDSj7_(e8C5?;n
%Xc\34GdNthW:]IC<17DC91s%["E[qVOh(Mrh$`$cfuLD`\X+J(eZfr4,B9&KR"[`LqhdLjMB,`S3mNp#.E`Q#0qT^gZX;RF*GW?h
%$@Wb<(8=G(4;s*iiJ!,>DG][3Nf4-EeY7W3ZX#p>0Mjrl21`qWI&P5T.02.J-k=.65[[,`5$X5V&1_tt-makk=U\'47+d6]bF8-^
%E36^IfgTn%LPk>`>.n?0KHhK)i9`N_s4(DnMpS"8?Nhf(n0L6(i?ME#,;pZ)U[ES<[!jD2_M/WrTmTP[93hUc4cNbO<mJhV6Lt#I
%NC\=uY&OeJR33eRM/><d&_;mH[HqkSM%=&5Og]qdETr<@EiQ^fFH]3h0AIi)EP$Up0OhKe?!]f',1]XIZjc7;DbOSJ(hohO>fT9?
%RK]I\Ce_,1=pFLHPd-:2Q!f^KK&pdL"G;)KHF[K1(e3e4<=&N8haQhd4B2&*ZSfBD@o_#LH"Ka$OrnlS-G^$/GH4$J-0Sa>5)t/<
%^e[s]^Vj!Y!TDFPe&;Zn8qUJbh%^V>qkIrn7dMPsVcH?#%iS*:&aq:@0goBLQ7ljN(I)G"5H:(oa[o)@NGjQ,1hFk']Dh-3CaV]l
%-<GVNMkcdPSB4-#[/ItL"6ZV#S.#49_]WJb&*c(<4MfR\NJ.M12!R^[V]3%]CrBLTF?bDS;2[L\@mtIOHoId#_V0dieIj*]F_psg
%eqWC1UI,K9aL9lIV.`@Sc0EC:jMjr(DauCjbb?rp,SmJ&9R+]p_*L`H't'q`o1[R?X9d5"h*`Ar]4&:GNJQ\L22tGbE=?eWQtp.U
%b&?]^b:[E<1XGJWO/TcRf4pgDbr#[H%ld=6Xu8.<7VLUilap;G=M[[Qaj@l&*YGt')Xf1ckprkJ&#&g[f84pXPJ8U)]8(r1]ph&]
%NtOfBY*sVpGYu5!Wb<kbc*-gMBBjf\Dt6&%UkGZ;+V;T83K6c"T$E,\pn`1QLHs/W0o07GRY+FF_"P:/A[Z]AKb(GOY(q^nk*-c(
%Xuf_iq8*#(Aug;7JUqV_A5.oLj!N6W!"G\)gRAYiM<l6P"Fr5ZRUYpNmjmR_H5MREhTCZg[kXtcJ:r!V+W:90U!gLq\F,`+r5f7N
%J<&b'.$5i[^%t>=d3^.n)W8GfdUn>U%If*S=X4_S.2UGrr5jbFLd3?QJ:qF!mp`A);g8QV*QNrE_"\::ku;8*9J90<=p*7*4;m+r
%^cJe&)2Z8moN8fLjH-Y1B_g^?W!L72on#L>1WWj4gS"Pf11pO$)%c&P?p9VS$I]#QP`DW'fSMdZ#JQ//?_i;[9UVg[kAN!-J5?W"
%R`j.N35@HX7%?A%fA)/J+`-@3eJOj2s3;-JoS>,>WZ,Bb'>8p&;%^T8>)o$TFed&m9:J#RThp!P+O^Jq6S,6^(6ZR-Ns9;$B4Yp(
%"_bLkR%YG"JsHu-*S9?td8YOc(N_G34tp^R*TE&kqET^g(.Xf-))q"lq5&l2+Q>(N$l>11,tQFK6$NJgRFtq.]b+mA&1RuZ^anF@
%3p]F=Xknk&V=c]R't][!IZ>o#RSa_9@o#%b:JEXOVSeL'-CDp/jKDfe-R'<3e*gH5(ISMc,JAt"r\l5kQC&ha'GAk@X<RqJBL2uh
%>T`.ja<H#/2&p&B[KomD]ct<^oh$&\g!<&ikh<bX?Vr%ces1JsUE^@.?]\0)kC5e2^=;cNL1,UuLgkmb5Rq+!Po>]a/oWntp8qu-
%meO%"&/a)(Tu(UV!F0/9"'1'^8"a7g51/@]'#hT)I9hH-gpnmtP\h`k1FSB)%F)g,\5@tDNW>$X7&N"%&mWr='+II%,h]0l!1n9K
%&U$lCbe]Xf2rUK1K=e:(i8fd3gKl"T44S[B`E%^PBI)!uQ-\EV0T3c![jn_'Nn7a=TI+Z&_%BjN7uUGY/l)$N@4ja;XKYT[K"i+!
%Z=n@N)SLJ"?`%hj]df;SCYCdIIAB4=]R8)n%2e_Zb1i6'o*tEl!NJZNPX&(O6/N3.%u/3sDEp*$k"\keFqQ]0eEK6dQ/'Cdc4EHm
%%;O]ILnSF3G3mV4m=H,pMq;bbV9soaKE>0(+H@?g1$IDdbciW($snHYSg6@nUEY:?bdNJ"&Cc%%IVQmpJRM2`0hDnK.2R^/!ggOo
%_&*6M0ILu;5Veb#@j3RV+G,=fZ<>]eU[RZ\T9!qW\rG>[k$p9/#qfu-K52!W-/8>]q9@Z*IFb+tX4POT+5C0Z7WKt'ZL;t6)WQWr
%N>TNJM]TudiKeTt=X:Q&q;i__gXn\#5pFNfY,3hB?5Xt7@3Ch\bn:!$Z6kr/O]$mbd*nY@m+RiG60jULFEK`N0^[&?gmYkBTA39"
%e)*nUM"JEA+Wm;U:\ObCbhOutrPs.SBe!MfU!dQL60A^Sn%AA%"ZFtXU_Ygd^oeOC>t3O<Ile8M:oKF2WV43Jp3`]N%sD`5aP6/K
%N).4%\MA<[D5"fGOtr<uON.`GA'?M@p;RGIEl]Oq%8jVNlF1t"GjPuq0^dBghBl1:C.bA@NOmYW+F-%`\\AVm[&qUJnnl\WOXBZ/
%I\CpGh8o.UDJWk%&'#jQa@_q/I!_dIa%/.,`J9!V9UEu2VJ1suD-9l]o_QC??S&3_%p/dcf&5I*>4*aEU<9/IhXDo0;.g/SZ>mGR
%T<I')!OULgYJDA5a(j.)+QtkH%[>`?q^al*DoYH;+l,pfU`sR<ep!>do(mOBZ4AFB%*,Wu@akh6L\G]L.#SDorKDJ".hOS5:1ZDH
%g\B.g8Itep#_3Vda$"<5P>5"dFO]]9&q"N4D&)$*p1#]75#h!c&$Oe-c(Ffd$6I^u8r34"i<T+M7Mn;^%K(IKD(d'G6/7edK[%Z/
%X_gq.-lW%Hm(4A;p>lIG/R5p$4H/U1Xl#OX=RLc!9#T/^B:F:]eM`iM8>`Yo6eooD%Ujj672Gf_V\Z*F))*1%Q\Nr9#'M!CCKk@&
%Nk0]flf6j1:^orgP/boYH@bVEei33ZWndbteMpnTA%E0bgjJ*KH[3?aGF9IkYFD0m)RC[\?:5d)c&Qe2*GNJ[<`kg3@"T-7K4[6l
%,+B/?,MZ\Wn5uW8<Ea?\2bEi=_%+X5]eTsHNsKMd3pFiY(l&.^mC&AKnJA:r5NAh43=F3RQhAa%lf4D>N`7r$1QtKdf#KbPO5\0;
%Qj>9YJ7+A$QLti:=NuogbR&fqSI#d</qmkdbSgQMZo63\'j#$A6Gd\n@P*[U=<OS(5$;kM`RLu68VCa@Z9dVeK04AQau"l\5#l*F
%%+>E+*$cYp5[)ULd'.C@,GaeG#^IJf5h/3M,tEd9h:Nn2ZpPlp7<$TFEt:6-7uaQ.f5U45\Ih,H[o;#*%/C_(I2U/Om<(ic&4j2E
%^ora-lt2"N8Gp_6'crD#/`1Ir%cqC>0u?>;b9GfnBH(Jh0Se@=iur2n_?CU31N$,:(M'j:nY/!!PZ*\M92"n"9a32dh"#Bk]:e0H
%I./B'4CqoEm(i\@^kpbUHrrHBG:N]6k]rGE$C,h(KS^?aY!6>Z$;>T6/P*5T')B>!b0)X1"C+%N.h;b*U.g@k-UqW>lGJQe=09^V
%+R4dq/ju'_H7eqn:@N5fC-sI=>%6\Ee:Ksk5LJFH3)BZ3mO$oW_/%C"2Omt;3,C$t,7J.L[8CH?"rSJ0(^<U?#ge/rarg(*=6)fk
%N#bC@NP`*pDFQcoFCTlq^BsR#)$5H?NmSEQ2BoG<X-ImKT4j/Y\(.:3\;#M-Ai%p;(u]aoQK8,DeF3!J_&GtC1G6W``*59?;R1XU
%BHa-C`cT+<6nf?fP1UOVBK`-iB!W:Yr1#>mdMmQ^dL,UD"W*VS)0k\a$55m>#%;5$M#4f/<Rh@K]10GPcW`(_,9SlRE[Eqr8hbcm
%-=EA=g*hJ;QS)XH8Dse[[-'"jEk9,s#<`5Ken,$lf*>XCkKTeVAjkY[T`B-+W`okD#Ql^if<=uPeT5ieZQr&Q&fQ'*MZR5Ge(DGp
%ajX)8:i`?L\B"b)h!#IQ9+4XM$`n1"]\oN]!>kF9iaCO"eUj;H%?:R@]Y@W#S-h(DJjC@El-8P<%,'7orB<$aM'Lho6-dEio&KW7
%d$Y1"cueaT^R9G\<a1mN3qWBfr=A55+G%j9IXg!Gh:i,Q0=\m-I.c'HIDH2:e0(Ols8/9q6pt$S<R/:UmB]'Vl!B61UG=>M1GV-a
%=N"oL"HJ(WD`ZR\6j,<Abd,S94g%1TThOfFlt!!dAF)0;A1*YDn[mhLHQoa!j)(B7+rYl3Wmeeu,pLN*lBmm1ObRnJQDKu_\I7p)
%\:;'Sb<.=hYCn_h\r7/&rGB5)T_bA.HNEPjVZ[6pCPk'UN[tsG2;%VJSUcb-S.Ubha$$X;i@60Plp:G"TnpK2DWgI"b@-5B*k!],
%AM6CCA/Z3+GdN"q9!tY6i/Q7B?;]#bKVp*"-N6>#%dH=A_Qd^/V[!9'*=E6n`O^s*#Jcjk0[8O]s"'ba&fMpfd6jNZM+A/J&,n`b
%gj_!o;ebJk71YQ\S(_+\-kcfRgh$N_K=[uGnc.AOL!P*^'54AdW]hO!Rm\Z-<.:BL5oOXS;`!tYl2C5fH9V)_FfYSRf9<FF1l@2D
%,Bbq5Y(s*06MTB*k\A=L=PoUM>NsjR&UQq\$c!/@X"IOuhmVQM]T>YkkJ-$/?p&a9V^,`6b'$8\U]iY%7Ends,65a(=<a0c9f/^l
%C*qHMMaBS&O)Zdf0r8FNfTO"k;F_q7>W->"?We]'KRt,q'n**h(e>X%dr5r+(C.&#<.*F0E`iV_iYD2n2825A6B%`)W9Lu$D!"9L
%\_dM8-X;%a5u:XdcUV>?lHIj-!V]Z%4@ml"3e9BYZ*9?`f#[g]\JL;XeBWNtfR,+dp.-WI&q/g&&b#$s$f<%Fo3bXcFiZ\CY$&-E
%"oh?eKsu/j":;(VIuB5(l>D)8pG+52&b5iuL]mpF8g-`U,gnVt4+Ne*g`d2erL*RiKYo3<2)BtfYb74GO'=l*C`qm`Ys0+M-e+#b
%,#rUaHP-/q_oGi?Y[?R9V]_]B-bO96XD`^/"EnALMu)MLS2?ns[rb.Cq.9Y53#NN#?)'Sr9o[^Y":R#li0KVNG)6nm)%jgMUmQ?_
%/`(gni%f\sN:$P;iRVo`.Ki=DFY"Xk3?!%2Pn,G$AH+#J&LIo0Qk[.PIrklffn-rIEA"SR(9[1_0gP+I[f\aJ1n`=2W0^-'`W`C2
%9*_E?@kScO8D`-5hr;7C?8=X$np#Pu0^cElPM^;I.U\s?At/X9+OJnT"*(g0r@QF8O]hs"Mac\Jch%;Pg8SE9"qC\-f^[:"X>\sH
%*!>itp571/\cGZ81raZ#&K8-BN;U!<X"NXuil_T$ouVe#l8A_d+sL]k2cY:YF>;VtgOn6FH!R3*,2P38+8HqVkiedu3N!)BeA)NI
%6b)A!cY'fidEANG?3R)pkf^Y$5Z2p=XW03YgWk%+d>^W"X)e(a5ZUPP0?Z``&RVGXI^7iVL$IYG^^HIgd[87"&-qrC(Vpi;S^^Nk
%&H+KdN@"Z\?7l9qfuF4e"dVH)d8'<ib#=Q&"-F)BaPtQ&dWa*Z1>uch+2ZLBa=&.=j<g,kfZ.:k(W\B-r(a;DO.1!ejZPX\<"hQ/
%Nd#n(M9e14L<77XL?J(cd?^Mo%pkLYOI'ojq99TNpHVuKRGA[IM;46cGS35]^?ZCH=K^bg!^**%)3r;1ofajChPu>WArX8$THp!-
%;$8*N57MH!Hl_kL=?e4\nClnsWGgZh#K*dn`5L"W+8h`L'L`nU<5F6Qf&ns"(V?a`&0=0QJ%*H#^<Bpj!<*7,pV.a_XkVbM97X(/
%2F(-'(e5M(Jc'*D<(jK_guVg4'\Co>aYmO5UFXY;,5UHCRt0]1c3Xn5/ZK(2'c6$m!i"HE(\W0Q'TBCt%]FW*3f8VPnt'uuCmDh.
%,c?XeS<l`:F<B+N8H,f]&XTW`i"cs]LN"1Fi[#tBbm9&^Ggmgj7#;%F2&Rpa3-I$;I7TSNPKD67AumWMEPt9>b6/!1mGh#Md8FqD
%9WQ?]Yt>,oOn?12\t4ceI$c:&^IY+mhp>^CgQNBFA\P^5iJQjS:Fn]L-1H_JikonYGdo.,_UR"emclMfWQmH`T!5,AFfY[OITQTb
%;lh4]a2cmGFOWSlWe_-eHu&uDk)A)egMfYkhj9AmBWdL=o5;(u3V&XO%lb[EN=ojlK[JWcH!o5<[YI8)9.i_)n=R]_+QisbXc_7E
%V7mi>J=%iQ;N9Y*/bRqu#9Aa)^lFl=d+Z*?%pZn9'9e4,FDo/^O?llL7>r@06=Z6="!>l^"LJ2LW">#kO.V.jTNWU\8-#j*-k?1p
%Z&`HVTIVY_ETHs@62$B.DdF^0PWhg&6BU$k$RZId=h7*1;`QBVQ2PMoihn.J*tJtY:HCpjTZ8r<n[DeRM9_=EV)jG>23m1`@0%)F
%;0sKj\nD-agc4Xqn;;NUi-;(=btSN,ZrB_*Aq0aLI*K\UI@fQZ8E)"%F(5#V8[CfC"e@_EqfF[9TI@klb]qsf5_"UU,@*j=esJ2F
%b9pai]qQ^Y=?M?elmC*%$f]9X^<W&.V?FR#a/;.Ok[*hb6D%<f&Ca6iq]iWr6oFTD>]eF,5<U`rN;JuJ@g=n'>?SEYJ3[6EKXiBC
%q-j0^F1-^MCA5&n-A^^"4UMa#;]K+)@Za.8hu#<'(+\C.I[h8>4l$a1?&5%JYidEJmRM3g0b^2nSNB1dI/_@Hl[4r1q`1B'd5O9!
%\!ZZS"^VV@W#=DE\Q-p.[%j2IHY<s)?4aEn9,ZqG;>b1s=?1+#$C^`mE>'ZC%J\cAIiACM<,PYg.ZPtEM5R;.N:E2.Op]AsC2FRT
%\Q[0l._m-9^-?%%L%RLmF^eS77L\7XLD0_L3<YX-qX*Wp.XX=QfLu@_IpPt'XCJ_!\KUX[U5!%<1qiL._NsJ`f/^/Re5Lb*2r7L'
%77,CmJu$oPrit?]AF@DUonC'<H\N<>!m=N'6c,SV.@Y<Ibj`j@<tXA)3Off3s-QB3;bG=sC/&C5*2:^=K)[!ADs5Gk5-5)aJfg8.
%el$d;;OuH\n+)&;D-k+LJ1mO:MsRD\24[cZ$7+!p""IQXj8OQLd>P*hpNS9I)JWOp5:EJ$OoAV,hk*kj%k==<S`'BiXb?6mOGFl!
%f,G?#eX[M_M/'rjP2@&R`iM/7;S<o6b&i":Vj!S&J6_dX_&__@]SqU&1A6EijjV>L+rY/iBF@Ek#2>I(OL*hr?P+T4(C+9HVRGb#
%!=qPEqfj)BnWr.R`JUnsH+Zk65Afra3[`Im3\&7=5l-)tQP=uuVDhgNj)8N!oM[3H(#,bZ:#U[M#l+5WT3K5kN*tYa]R4TK$d%Bg
%a5Is!AFrj<#T,Eor<<@<[#saN7&*$''j@`M=X`OHp^2YL;]J#T[onZYj)H1VNaUmrPIEcU`uLFoZA.5;T.9P2P-kS[+F8SHZoYL2
%M4&$?_gK<Qa3D?FT<a*hS\Idgbs@SrO7%C4d%G.eDFG6Zq%;6G9G5pY%`R'\Iu*s@')g9EOWl:p(<^lp*]$2Q9mWDKo=+/,:T@bH
%fc72pIc[2kmX?OW=TsoqEICrsf1C(n%pC&GrlUN4G'%t.C<8c@STWBU#d*B=B:.t+*!X$=#R^H'^R"j1SZA(Tj<'0H!$?EF>GSdm
%gN>C]U3E(OOA4Y,C+KunEhFckIeERS8,=j4O<=Vfn!;&@f8#n2*V>iV%/DZn:VAAYo'ZVRd($_>r#7N4gT$dYZdh.0AP7C\WLr0*
%&,4J%ZU30q4]+.im]+D&Z5a%:1,iBKAfm6F?kDhMP=X;:b3';_)]Ck?h;\k/'\n]2Yc)g]i)*9m+7c51_\cU?UGpi?*X]qkk'?ca
%9):0pMLIPb_df#TO)q58I7m)\3Duk#d_TnanM1YtZ26IL2q8ehD/%;Qfb1lOfg7nujqB+GQ'7ol(u@sO.!j2uXe/FL?-U*G`(2qG
%rg.Hg>@%o(-<13$U_<Rq.UgUEVC=dc=5nKc,L3-Cfh"Sp8>!K!4jA:!\mHLs^84Qoo7&N<JQZTO=WTfGgM#I/@k!tNKObk_`Tp2D
%UdE7qHn,("/Mk*`AoEFkJ"ORI6blr_gZ+qekmfMX1;@?mbQ&]H?&?kd[GBKopl)&^,/OU,d_(FG;nZJEm['jRN]2.UiomRFjpP@]
%bj#)]/`c;"!q]bT=($q!auG6Ue3`t=T)Ag%%8PkEr++AFQ&NNMLBoV.\j^d!\?*8L7AG.S@:EeY[4P!e;2&B\Q7ejBNaj3ph#/])
%oeM!+-_]/91:Z+i["o%.H4lbdFhY_YLo>e:j4g]Oq9*jT[_uFi)Nc$gNb=`0W:O/FTiOLGKMa"m8`d^6?2(Z.Pj&$b5)ERRbK'4l
%^(b>+ql:OD`)Nf-lb#;8:*PqrWS19i=6<r&T>*dFf=2F+eSl#5VtpW@_j/Ko/n;HL\nO<7bI_9$KVdXgOJXG[/a(nD-P[`L_K?IA
%eoNJ,Disam8_,9>X-2Wcp/M'FJ:%p7g!3S]J*U_?I(-^C)R8adWZ)6u/AGJh:0i\WIaR\CB`(Is[HU-646!6,b-5h9;?TOJC,S-a
%M>JH\&#9ZG`t`!*oaa8>3``1;H;_F4jF!F[eXiGk-OI673E.n%LN>cn-,&)GmXAiQkT4@EnQbV9#I5Th'^3i5.(iq311PjV'J"=.
%!3s#d[iP[d@Uq9$/EY.VlZ=D<9d"j@'`Z&R:hqBl,)I6=8]\l1U['Kn1gteLZjOd8)"39]Ma!L>OAn:m+mYIQ"`rS-Ur=-K-:/u4
%fJ,T80ng!`4_OCO/?"Z%qCmHQ&UR1?@k_XmafrrX.JZ"jY)k*EXQ`VtST:J:dr4fF6%F>bV[-?Gp/#A\,<W\=HJSZ`UIj9HJMpXA
%d#-TPo9+m:dc/UU-uQ2R"f@b([2Wi6e2i_Yq=ppY+4Ae6;NLJ(pr00`d*g'Y2JR(9nl1ge8M2]k!T@'j^NMJp$@GFmJndXkY``a9
%>>]'RQHP6-_IaM%2>II='ZMtB2l@`)$h-H7BSVG35l(-88`J$+Q(S*4g.%?P^N`r#V2N#*k"q%M$jEs=2&<UG_f<Ji@AR3flj-PI
%Yf8X4C(@+p"Z>dJ&r7h`3tpI,,3t5c^3akm\9$e[6M0eQSO]*]oote'_q5bs$Di8,f@22?gb#.2D2]PIM5o#)C=Hgm7+=^96,CFJ
%nOC[L*E3EGPaVU-[Ho15[)@2b]6lC\nL^.sI/+rX6DF%AO#op^>XnrU+>VS)>2t<OT4,eJ'o,m&X0#3]c%>n!FQ7!\ne@AQ?%il&
%cJFEQm0RN[:e&p?4geQEOa*Z+"1&B(5`RNArMdjYWlP6qUV)WJQM^2P]R/'Y*qZ=TJ-sh70eH:+@R2h./7(b@!_9hL[$-ACd+X8%
%*1XnpftU:>V!g(.[B$Jq7(9q4MpZc=$`]?>'nbcs/iufMKerF%d:a5[?&BfWP@Lt28#\p5HWHW<iPXcCPT!Cd"-V5E0_-.IL#h+d
%U`PGH9'KY89DDcXD\n(NaR9hDpAt4>K!.$&K.aEj.5\Y9_,/%h225%5o:]Uu%5u!j;g$.qi,Zo;CQo?$>OV>(Sto7;$V8\8_o*V"
%ROf$S)_hGTegr1J:oN$Q`C-ldS@lA`#<cAqV>U_^=70q?M7fn2'V3AuJ4_LEc9h1;P%g^#.')2m^qt#1\T]JJ,)eG8C-^[>lI!NL
%F2"c#']E*'3JoRRFsR`D*U))Pctmr[.kl_sD3]nOL:qJ+Ge/\.G/efl?Ob935^1@rhU,JD2ZWZIHk$4da]lZF9bJpWWlcW2')a0;
%N-[$N<fLN::o_61UgS$4ei,7mQRke(\IV62"9!")$eP%!X3$m7:BDq7BQg>K#"ATRUhTm7'LDZ\$4P/=Wu$[HMuOtndf$(GJB&06
%cp2a7M4uIiiGfQ+m3!Ut;UCnoB-k"C9UAJWV!k%n[MYqB+]Qe/eF2F;-clnbW/,>"^D&Zh76g%"JA#+N;[R?jn&j1pH25S_p;bFF
%>e3as&-Gf3M_sD9m*f!R7+OWYXD-IHq3K!bdHW5d3_L,$'c'.mf3cYK&>FqN'r4N;P82T#p07/%$ARd0Sd8&L3-3I!oQmS=lSH_c
%">+t/S6FJC[Ij_$o!(YZ_dt'bI*9$/[8+:.muZ*K'rRJqOF5e$dJ$2.<)ob27J;=q"F#C)i.4^B-:Q1.`aKEt:IdhE)*rS(9qA&\
%<]ZmddSU0@a)b/eP@_.o/@$'dfZftRinZ8C$WrRgnL9nX.sd?!Q/IL[7<3\p(,ZM!9W(kfU=k88H5[BV6,.G3Qs9kk@5abEmd!,7
%ZTk%=1d2i_:[?+70@,C)e::aEm%9UpFhO+o$Z'>VPN;B.BauXM\ghCg&_58f`nFBO9;C2E>NMm)'e=[0mfD^_^^Zkl*-J\ZA!WC'
%mq'D1W4SI!'"pZKcI)Q?Y$'#933AH,];o'k"oe?lf=?dO$*W`BoX\-^CTJdMECW0%\bQl3`isXF6=eo6)J+%.MF>eM><$?,;p3G!
%#k6Q6DJfn'k@T'A)^;%[?I=bVC,Qb:NG01lQKJ"JI+K))X:e;E'%7#a_sKCm$j;A%)dJXlrT34&rGsK3J(ccV6@]LlH:4"_8i@3Y
%lV.[WL_aL^UI*6B=t7<\D$3`;$;NTQ]Q,K^MSaCc\n59:&22\GGhW"'+Ot`T((_8n5MS"`XAFDCd.AGDBDh/?1ATNsbY,)_P95&S
%aJ*&=OMtnB9R^H[iuQfMQ1_ZVf\lW/59I:M'hoK*OkY5u*bQ[H$1MH//>AmQkIP?uLA@0@,N&^Uam-f=-YhO_jDSZO(lHD("&%YJ
%cP[nQPn>_26.<;orJl<KX\"ksP7qp96)fXnF`L*(6Hk&6bYL_#9TZt*M>`ni0n*DlE'b=`K<%('BUD/5E<(l;`Zr/[Z26J2&@QK`
%Oab(R:7NZ#.o/"I>2s%9E^KZ.ed8H"2$ZZsi,"aaakPDm%$<(]g>3j3O\9/fE@a.U;A;5R;>b'9)k)[Y[Zsng8X@n)[ZdgA0s\_Z
%6K!J0[I'B)5B*k#mF%a'T"n8l7rI&-kKTQ%;*s$VSsW\bjg4a^eXuj+&-)E#s6f?js3om*q&fV(+91NE^B#p8r7)nhr9++MnJ?]R
%L]@2mrq%<4bFed_+9),?s6uq)J+K<4gV<d3O+3.]r*0(80'$WuE!/Sp@%=>u_DcX.rOc#1^nVVKm<ldBH9U;G&6OJn(V1D>;8!Bb
%5uUM)Ygs3H#R/t"no,;m[gIL7\jij;7*n33<pjX#ct:qe:M'U&_%418.DU5%C1]Lm;b^T22t/80Ia$GXF(2*fbcU6m9N4"sI@M@;
%L`^9;E'c]J7n@ZDQgC\5:5D5fCdM_d9ZU/\1m9b9b6dtAUe^;;Ed!TmRAAMW,*SLN%\*_1+X_l=R%W+fNdu9b6dAN##HhMNF<Co/
%]^LRgb9%Fu@B:n=6'G<qUp9#LRm4_RJ12>JUkpF4[^/CQ[k<aI6eYZaP(mO7PVcsp=^Wd/`Wf@prqQKDX_9^pW=YdIE%SO#_\PP7
%-LN.u16C*-BplMQm]!*Xn5%\8^K=D3&g<L*#lT/s77FSQV'0[*"s8MS$8ehnQ%!(T55+d>C]1QQ,!tMZRs$&)7s&Zo;cIR&IT'9H
%FI[!t/H\jAHbI*9/1QbYKX1_hm9NRd#q<cd7-$1,c.s>5U7u=Ti#aMrTAs3K;,J<u"JRo7MsX59d/]:kW'DN@!SIctMMd-Xfo0dR
%ohTj7:c-u+@4FMsEJ!$]'MFu#"9qMsObfY9QZ!.e(?&a85^TS$<3Yfb2Ju`C`Q3.g7/!PV+g,9Cl6Z>S*f'_RToREK-\Cc%gO=Yu
%:3*E]S0st/a]p*)]X2crBIOLgNIXnkYLKs2^dRs^@5Q+(6A9W<NS`$#)Lg?H/3l8%:aT&$I!8b-#72/LKHlk<T#V?D0[$bO>!O#-
%l&).O_IZQsf.C;Vj/M5-i!ENn$u],0Q@#bH:n46p_/gdOaVR4AF2b>X?duHHH4&P%YVUSa?;P&lhIu5G(j1DC,QO%,lQrd+>=p,K
%.19&=V9b_2&C#<X-'H<>,T.>oY+rO##K=LWE>:M!q;.THl'u#4D$NO7D7>M:5)3a&qo=DffEop\-IOA/RZ\\H"<$j6WW9\to*X$_
%dPk*eY`Q5X\Y3F/;i":9WrnhV04peYkpQU3,_5NSTfG^D]0&HS0em>%h/WGH3*B$FL]ZdAdJAmS90hti5T=*51l?7/8G'!GRWah^
%`=B-0A-[5@YsD>3gD*im)Z`^d%hM'lAf3:9S%R'aH@GDk[^3>`8AKAB0<bK`g%q0q/[)4r?g5MC8)p!Wo6N;8b=Q8["'Bh;]tGUh
%0X2+/LCkA\p72NDPI_sX6j*fm#Q3X_&kK>'ANC=`AqlZJULo]$*YTSa"`K97@`<VH?]/Bs@W;bPV6V%@Pi3O#XpH"t4A!,8B$^`n
%-lnWjkj"97$@C9=>gsh;@0;T9hO_gOFsJ:fE&SI&dtcB]4eAM?'`sYBPf"mqU^=(gf7&@5@uR(QKLkGEDL4ubOObppR40?Klr"%0
%OWZg'iU:4YS;n*=Yg\TN:?N`Gp]oSjcnur4,lXse*'aB@'K%\LDfAP?8IR4*=gB)9FuiOP*Ht2Y7Cl%@Sr3@K;-Hk!,`_A]o50]P
%U>Ul]hpc4gduL$Qctr4bDOAHarAR!cE,]%*+^#1p/j`L<g<_LUj88p<)X'uY#9WU9&ZsLTKd:K]0.A"ilpRt3@&5:n-2/=P!>PSZ
%d[ZZk`tPYsgq.FY@Uf*e6iR;sG%@u_Jempla`&0h_F\L+%O?A_jLE$WN1"i\'#;&Z;TDTGIUO9Pc>\j(orm]fb/mD1q+Wnqf%-uR
%&`=;%W1ur4Zaq;=VV"%PS)WN5OQsaE!f4:a(I7@kLIWeLbUCa<54,:sFs<*:i%_6`pB%#qm%`:O0cn&_/L0jh<6_\j+,iCZ0G>WD
%W;7X=_erou0>3e6AID4_+F;Y`DaGHG/]O8j.G,bclDM:5G`3H<\RqTl<FGVo=/%RMWP./?3Snc'Tb1a&f!DkEE?1bnX0SF(o![Gb
%m0)MQ3/rL&%&HH<Y=6<s*Rot3@-;e!g+b,NYpN&`IOKSs:`gK41^1Q@#*NTL-c=J$fh4mN^%u36n$3r?0R<X-,t2jEm:!dK'21bX
%Pm6.+]Zm5ug!f@Xn5\O]4'qZl0&OFfXVTJ&?ES0'^t@4ts1ZiT?HO[.L/a0;h&^]D'=&.?)a_+joe%n?7h"M!q]#fU7a?PVK6a['
%L'M''rK=!B5#eqSC!=j%KlIi!kJqE)K/R.jg`+B_2KC[qIGM51"g::Y?d:%b@#BiOm`V2EBSIHue!>g^cMM=!Endmo,plhAon4"^
%D^Z,NPkRNXNLMM<J/:%@G'<FQ41Xf?VrhP_2?(ut*Hq!1hgO@d_ShH;A:PMX7mi%S9q]FK^E'Z^q3F`FYRB/%hGeB).aL9D6qNZb
%@KHk+hYUo^noejN[^0f*.\`&Vi'72om+msa6]X5;'@9McfWJFp&KZKI'fZ=ZPYQ,c%X3bu)YN\oL$^KBZ%'W^H9U;g&-2#o1RBr1
%#`j*eDL*:ZVers%+$l3T`;U-ZQD&<Xeub3#A1MQ_C_DE/OFiZ#7BI,4m_KB?)gWd5n(u_.&XVA=CE"mbpX[upZgB-A./'XgTI`Y3
%HQN=EZ*"b>X@'Ro5@T.I^5a`X=un4$$[ifn/:1FY>)6NrSRathCk@1cc\gB[eL`jV]mUT6_^a)8mC,1gs56$K\7:6<P8$-`Ucb.u
%3T>R7c\a.l@J)=LP9i^EY\dO@l.]l_PEB$n$BsgCJNHmH1Q"?r/#eutmCdAld)rIoia0Lt\d4KlQkq)6;,Ji#);o+m$t^`5H=DT-
%:m(P4-u6-t:I4S40i-RA7fBttQ2=25&=`KD=nY-hT&dHl/eY*6j8K?1-k`JJ"<r^B671?h'mWEU+HR#N6nJCIb\Flk7$Ih1!M[2-
%$A&LA<#E!J7U-K.2\YGbVZ?!/7G]$\PWqCm"F_aZ)]NVh'SL;n-Z3'!@i*]kbTW=*OQJ!B2N/ZQk=)0P/A)eikK/SL<6Z$']bXO@
%qQrC1k$$8i5%F6arasUA"`+.'TeWuI4M/KspiI05>K2\(''?ZUVsG*\eO33eF2IXo.R-g-q/I'2FjGq].ZTs:`E'1_,VOJ8X<UoK
%DX,;W2a-<:%9se#(n)pVfSSkebX8<[c_e5\eYuYg.o)u"4"L!q8hE:dU]b]KfFh!Z08_=_Ak[bK%s]r4&qYV)mPG4HN=?+4c6>HU
%`!.uI/a0/%&UC]Vi*<606\ZAmX1`RAgbcMZ5'd2_h.SIIS_b6.TC0)F>_]S(FolEu(V7nUZOhkgMo9;rjLh?OD&>,D=[Fd:VOaff
%>L!8f%!1/tf+dnHn+>[/X!Ge.7$K(lr^,)eE3>BOpe-1/iqj*PB>_h01&<L&$9n#UcRCs$7OY8d!b4fm^6:G/fqN/pMW'0<8*NIV
%dtVjOZY5fm9UbeHk0BgF/kSWB2>^Ct'W=>rf'"t2pm[G^X#h'ZUcM5h4^h-/:\Yho0i=ZBas.39^(M,_"iZiANK"^59co'\mc$l+
%/Occk-C@!>=>uH5iN'T^rfSdqZm[4E0Oh?6<Q]X?h])5&&jPHp.;]D=3pa;OLk&5DaTp.[QDKL5.Bu:RTj7/QRO'':%:;%F-q(aH
%ET5ru4Etm(7YnDoT_D*6;H2>RHb5#88t$=lN@tT18L6a[nGtb>Z1,p-kgP`qjW(WThn#tug^9uonWKCV/a&dEp^0V-WJ(l!2EYQ&
%MM/X1-C]9hQEVmWE2lDm>UZ)l7)kA)*tQl_)<C?M41(Z%dU6MZAG_.O^!d%%\5L"4K*H:$)H6Vd4/tC:mKn7*QV2tL,`__JV'N<6
%V/)7>:q6+nj8j;1dCobO)5Z=F,7,6#!D1]?nCt4\SWNI\pYC3BZp56nF<H<PnSUN'4=Xel!3r_BZL^-q8O,r]YNN\BS3+![bpu,%
%7,AQ8$B?g2AGC.6;@a]5L8H`c`RF\$N251d;6EV[H,VV*2_pP(/?FV.M%)&Sf6^#:R$.YWU#[Gt,Rj,]q-d#2r84?Wlk6jP#*]$U
%:/YYi[&d(d+_ZK#Rp1)>DV0GB$^Qp%EsFf$V&[*"d6@gsa/(I-01`19lr#tL"L^!I'hQi*RElL]8/,<UD-/1U/pS,,TErmUdrL[4
%,(;QUq?a:AZ_e!s1r1L%5`s@/8?^<1i;$3B%WBTP6R1RV2F7cDb7=V[d1u#F+p/)7]Q,6u[@^U%L>`'!WG=ps6AC),8i'Uu?31TA
%WR.@W/Hgf_@QY>/`0-jU=7eI)]W.dg(o[)g3cQHoQcu8TY<PDbY12f^_#B[]_G%nLLc"a01=Z[:fHo8"$@!D:>8:EFrFY@Xo$j`)
%#RtK/(cc-EX(\FRG>g=2f/@E")>?M2ERp"B>if4Y&[\dW8p)m*;%*;0Vp/a9\LBNtW9]L:jLp8N5`FKo.uS>E<Q:diQb09$qqR(T
%4mU8hQOlCfa)=5fr6OmuruKfa(t<Bc2J#M;"S\b2F>7.@ENu#_AAbT@b@a$I-#r<KUN`DP;5>F.6%F&JR^mV%KoK1\l_UgqU7gcr
%]$el`=b>0JLHZ3eSgH0U84`!tQu.Y=K&0Y4F(5\GCI*L_p:[*/P.o--C/U1=r".Ve=ikgecG;8SOElq)[fuTqW(rma6sI^u(;pOH
%\R/3Y)K]mF!O9O5Tj"uT1C/(9a0)9XmQA]j],q*<":.EI;aupf@7A[-IYXa3@A>TCCFI=(`8qS$Yj>d1&*TR_iW7r6gG#T5CqY3d
%('u90(!Ydn9Z^RFk!31+is3&I<!"[l2<!K)au,?rb:C%e-2mT^l46hA_X<F[c&*5VQV!<>^&mR#C,;h4K(j7'cD!S'I!,%2PHe^S
%4b4d3P+re9D%WbVh?F.YI+'QqXUp.a<tGG?.U#EDVgr%kO^<\hiPuehIN%O*&oKoO-0_/JjGB_=f;-MhISBf67k:0J9qZ5e%4u@\
%lagT+/=p=@,?:Y`9fAL61<H!>KccVH%13R[$R!]+VumnkP8I^[NVWfJZF!RV*"KqQ#`.okVr]&&,JAsGTr8+A<B5MOX;l;hf%tI@
%N9]^Xh8%k0J<WN#^><;ph,#1XGr6ULQbp5@b?U;(?/r/P6$`C4![gC/M[#hk`/ZEm"%ATE.MH8FHj8(l;bA<@:3OB'KQ+'`^@![N
%%IS?J5@r2UG^C$+/d?/"Ef%pr8[QDHCCb_K%i@c\LFHHcgrb[@s8<Zj=IHCu%A@Z=XX$7kMmSs4.Qt9Ac7rImm$9re;>U.UWW!2(
%OC[qO$S!knU)#F-7B@NA<orZC>6"u;Pj_SY+"uo!7M]:52sO'AoV>A$kHBb"`;Ub4;[-^IEebW&i1DPHRAE!_$De!E-Y3pG4H#6(
%oKTlPSu_eRnI;-?b.gBipuPWM],fBsq(>C7M%KYckQOF6%<cIdkFY]r'h^,:+:&UW$g4/`'Ekc^Ehpm:SlBO9MB;nP/1HHl!goB_
%?7#-1?i#p.AK(758jua&edi:YO67lSIOeO7q*t#b1/LAOT]mCFgtSN&gV1"kEMMA,hdr%i*C&P7h@*]K\*MM.H6!Zam*b7<4hq^;
%e_l7N6]lJ2i!Mp/7n3%kk+H>I2D7524j@TFRC:]ih0G!CO7V-!<L(_+U6b1[[0(/Pa'QY6T:Ebi]$0iCdN>]<cc6WGkV?/7I(RU!
%M4`O:J)5]"&9!R$R"ZNTPDG*/gkIUgOTrT-@@HCTFqeiT2;)fu]qg*`W=r%V@roq)0^p+%*[!n8neI]%+JagiHG'g6he>/ns"L70
%j#/ke"j/*,c0Gdpn>9S6#[*KP?;cV`dA$#(hCVgoN:OZb:RE]#Gs$:98p>PIlI+bpdNU#jg6=a@HjIZjJ2$fs@,E%rcT3>NiU1#=
%Lt=S<="^<-:0tV2-b=m)T44ZLMkiji/:puoUgm_kLg,3W,Q<(X:?FS"+6*F]Jl">d]R#]3?__biZE(i>$(e)H;T*gU]rmQkm^K\M
%/[t[(Sp)=[CAi/hhPeKjF0j[9iV?;bJ]Z^-9.J>I,a$>7@8G_7Q`+SR\,-fr$alAA@Y3B4EGh5B]bFr%a4F9U6B?A@_NoMjF_5bH
%1?k*L?AHQ?ChXP'KVMONjA=S/"7%Uc4UV2@@ngia&0f%2hh0^9K[SS9Asc@eH.C?)B^H+@b#7!!P_GU^nim74?UVp,n[+6Gb4oqN
%AiB'j<Wf'q-V5fb(:Et$$MYTpqIB1alT_$T[cdX?*RRF`mJp;R]V;"lJ7$Vc<EK"fQ0+'&X^WROj'UuQ=`VjenNX#>jJ(NO-<HJ=
%_j9EUp0.UNb!kQokOGZnT9oJ=k[Xb3<eA<&-(aJdC[Hsr:8f1uQ1a`5J*Z"b\QW;`1^0A]b(Kt+fXT+XP7"-L#W*/,2b/>BjnLEY
%BHL#h#G%8O281?IPE'N!c*E7OeFN_(MsZ@=<[_rJ3Ye9*E;]G#[ZC*mb6s]5$I#;YJL_)g\9U:^-P^3#.3,[1l0-q/X<_UKmBoN]
%JOiC670/U<!h]'sB\FBfLOW?Z^NY)#5r"Y-72cE]$^$/^,CrhM;XFc_*I8kL6V395T+Cj;EF,Pkrlj6E4j0/,%B=4:m4oEkXrX@.
%U6k;I:@bp`[ATTlGTi-0a'/t&mZ9r[lkl>hl%s5[/H/I2W9!l<7`S;EX[Tq[:SJLLkP-^/V`7hfeeG4<4jdsa1]Np'>sUK,?KX<D
%?Vo^GMWm%"4`r-I3ahjQG!;eO"=2L?W0<+-^_2YdUf6\-eS-fQk#/qZ30*:2)>Ae9eVTl=@XFi5BBT0+TF*^_M.PAu&(,P!'Gl>N
%h*.1q0"R?OZo5V3:;h;!NJr2OW'Y7YoA`\ROh"?=Sf10Dgs3>))+l8RL[-"9!!Eq4h5H.a$CJT'HH?7*Pk5?36%p-%5&^3rMN;(?
%]`J>c2Wak*H>5_5!B["l39Rq\:n>B^hfhl(0Ci!L!Kgm;3c8D?_NO.B#F_EngTK,gc#u@\3i2ZM/^W<`c?JP&FPIiu26n*UG;>mf
%W4/aMFp$lg,A#AK"U7.QFeZ!5qJ_M%=5(=!F50`(]J]-jr9_4)Frp/B&@/3C$=O.(=W+@l:V+hOWA'/@<H=/,Zg?<-o_uB]qEoa1
%@8"h=?OmK:.F7Hn^P./&!^3#ss#chUDCu&sQP88,nBkE[eB]W[_7ZFc'.@f`D&`j-q;7p@=n[fLY)cm'a4.;JUCu%mT^>=i>5"iM
%Kn9HsPN'?o8OQX6r8A].YHrLm[pLi8;6%?[7NM/?pU)2Fk8>R*CK,cSTt]ZDN'0\Ac;TN*Q&r\,\7acD7Ri8B*$p$F9[K`1="5\6
%;mPLj3d6"$+F?O&'hdUqoAZAY=.rC09.@"P\m8Lk@?XuW$5^k7&]1a:'L8QE!1mSN8oo-`ouf\El6(+jZhkoO.3hmVGT&i6fTYS?
%'X4C]MS`6H[GbH3;ZS](X&jt*+(S3[Oqd+/pnBLd(Hn]'<FO[Va4"j=2J`*TE?[7C8";fH0Hfe!Fk"_FQ)tef[/e"0$oaMq<64S:
%H;5gB+s?R2lZJ'_%hXeho><d%jj;Z)DV-).K&82E6.QPDf@MnR<"sq_LKgb$!*c<ne=]!h<upP2a="AOVW47[MmHR*++"\FY>`3n
%SIr"%qH\j]J=@f_'_XE3b5*EJ_O,Ns6<WOg[NgTjoFec4Mc;R_W%)GrILKruNi_FPJDZcMUEV"T(D'd8m7%9m9MW"PW=sdhl>F^<
%0c6"R&BAXl`3skFXd2r2I]f#=fTCJ+aO"7%7s;[m.."J$KCtH[RWV&p)So3>^b'?&5+nN?fF3iO'#k.NNBik:0$_OI_Y\H_=Vt-_
%`?`^6ejP)/S8Mhj.SdW`U]Eq_7&hZNFk:gC6s8o$C:D2u':ACI?6NoP12tb+K"4Mm&.RqRCBPiS8;,&RBU5'UU[n4`3j8#iNFK+l
%O!j_K[5Q=`;5,3/l8RBUE>D?`4b"[-UtO>24lL^*?k^LqMIdT;(MHI8WZjS5J5@XZ]C*HCpi$:r<AUm^qu'5QHC,5<4Tb5Lh5Pos
%b8O/[3dA,pPD42\.i8qt.d*f&R6[jhLX"<EojZe8jD3(TD8t-_3a%C67*("R*(2B965nQ#)5haDSLae5:*\YqrTJKW4YmSDXI2IF
%G>r\GP(8XD!rJ1?4#I)^+Qm6E*s,mCWICS!cof$<%G'lR!h8<A);W8cAI`-`duH7"^PD\tWr+dV\pcXJOIX)`h"#r47J;dNb"E+W
%W+Vj\'T$EGb:?R_r4ETA!;h.Mq=iD1!FLLI;Bebn!ilnHcqbd$QXTU/OCt%qCo:usXK/<64rI6?!'SEoB`\Tk?piO,hN!78>bZ'8
%1HtHDiV`q;4VAc")MDWkrrSu6j7\UDm>j2\Q+Z=Q1Nq/KI`^rHXGd9ZX/pQFP0<`5*2ok;,EZQEmK0UU:%2L/.i^Hp8E%K9aW36u
%feW-MpE'6<&7F6?k;)*3F7O?AgTtLGn[2kZr.:4QKML<A<ck+RA-\PC9M6<8&RF<KfbUE]ji.T5Z>M?q=JJ7eIO(?K9_:<H*F7p7
%fPh=B@DGqJ,)JT$!"g(P`4l:DSLAGQc6ZN%/rOeDD+<'PD$%a<i6cDr1#ih(rXt(B+cJYeC;a"9.;mf*!pBuRStgm"5(qPfq"D.u
%N0s-0iV86g#SP)5-CT4O-i>np:94a/_tDfWeFVJm-g[hq'>CL#IgJqR85;]d/^)cSM.o9XT+SRgS1#l%)NbLklTB2uY)(5VL3OJO
%Fn>c)9%J7XiWDJ4>dn8HCg'?oeL;c@Sb9IH4_;Qmq2"VI^;Pcl3t]k!HuQq/+4AM2^.Gs[OUuNMQe>?+Riq323XLpB6F7aX_!n!5
%jt[O/c;$V]'+gX%,og8;'NB2l+X/"cabR63"M,WD(D&i_!'[5H2X+$rI-=fG-"VogHjVMGR`U;sj(mXP=F:5T.Qc%^)mI.+"(`u-
%KkP5'i_;8r5!EcW@(@iC*jC;I(uErHn>:C*T*g_%b.L@OA2=C<BHl#bs-l^h@rbOZ0bg9>nu0U:))!8.dPh2$F4:]<q>T=p#=Ri\
%5Q&#`,4G;,<o*^nl,S`H]#U?e5OM*+-?q`BG`Bc@IMKF4)a)>dd;#&1<Asu;B[(>\e,F#/"N,A=##3TAdIN^_GSpfA<MQNNGZu/M
%oji^qgY?a$R>'^;o_*!a#1k$)L5p)"]JHioI/T:n28J:+*G_/h\#RTQZ"6>9LQ(Bj49\eB_3K57ka]c!7*]UsjTJXC_:<ag^aeL6
%MZ'm\W_RRDQ!A>+QIp*Zs-.LB=LG8eY%j]3lo6Lm/h+F7MR]Z"?H%S!h/WRmRL@W"@!/+$CRFm34&49h(\g[E02`X.b-,:FCX9Q:
%,XqT\_Q([&:\jZolr\b+*J!9032JRC/eC4`'O;,m(F.g*(nhV9=_EKECHliL#cL!<)L2ptZZEO:Kp7;>$+FU_#a,B[5X]UQT+V)Y
%27Z-^!RKO%/e]m=m0O&uZqnfl85)i7Q_qhIJ?-g,!OO53=\'.Ghqr"^[;k4R[]fbG-t'mP*O%[2.;ZUbb!]<TZ?AYqb02e4H51nM
%VXKmZ6fQ=%S\@kkAU;n>jF\ju:M;_MI*!WU:W^12=SB=JUnL[k\n*(/N8ej-ePHPUkqS:]5S)>7GDX#@QiSARL<sah:2l*(AA[ZG
%@8Els6UnQjad<0r+aIY$S'XeI7[39G@q<l9f@IM>]s_G;JkH%N0`??ifa5?$6>pZWdCADm?qWW.;s'K*8(6M7f<sF>AeE&1.L?`k
%S&F(+'Qk>%bO%AaRnhg?PBWMb=?E0j.@a9$&rqu$&9lUAh<k^W>W\..9YQ<Xg/X>[F2tdSE5A=m@$C9@&8>3!ddG+7Yp'_f"PgB(
%$h*F_";V+*m6j^H)`.o-H-2At"kWtNMPBUQM0)(cFqD/5TFc_i!2>U_eB[,G&0-ThH7P=(,+#"g(^ZIq+>q#aAbIfXD#Y"#Fch2n
%DFOPBMRpdt9XICTe5<:%`XR(G3c&C$/?"\&;B;A*WBXqn3l2lb:?P>8Kb\Gk_NZ4pe_(6udu!":GqA&9IVdU"b<Y9W@?tB5Mn3#6
%<iJ[#BtZOXbE"807SCf:C!rm7Y)tE0lQPS5'Che"Z2qPs5+*S\^kDJ9ZXe#A:LR<uB"^4o.IDT$amK.2Ca/4I0CFRO]=d/,(.o.O
%&eY#pS@fdfn+r&cR6H<C'(j=_YV.qd[p(*:40V[:UQ@An-*Ke%G]h&_b3_eIO3P`BF<YXja;\>Y/-492'Fo:6nsYEJ/`/hD2"Vif
%Q0e-jaLi3ek/Aq45dh+>!D]c.TuamD12je+^oh4CnI0rUREJ(^m7'K?3Z![H:=[4/=79t[`^gHL=a;-+dI-9?nu2?0oJT,MH54g_
%&UNZ_$K18C(uM,7!.BAs=k@hYW%P?,Z<_q#PT](icqo;T'tDW;`s0Bjj@'r);ef\e4)-TToa4o7)$87"E+[rfB]"?k@,GP@Oh_6q
%2Y<_Pr\W$X:=c6.>sVrk1drU$Kt0lHJ!XnM-'EK4Au35i[d='W\;<?cB7"8r1M7[bVV$c68>hK\Q-+2Y-</;@YuMNc6[VG72:3<b
%V@>J#>C:'k0gj'@G&`CHXdNP`c&ke_glFI00@H$act_ST\JNL<\*$07SC\FYhWi0WmNn-FV=-D&)H5l(,cVcRgbZ4E*>0\h/1S>:
%\eqp0gi@a:1oK_aj/.`S)cc>!Z/b2>ZRd`hGmJ+T^1`Z_DE1QU9APM&6R=a008nm1.SFZL"&5%oBu1Plc26m&gY32uOLN/4X:odK
%Q/DS_M3%udJ`%&DqYMH5hV#M3+W7q$1HPs9]76sq)b:\1V<2H,XfAXI:hPk0o;0JdV(?1VdJ_L8,jJ0=bqeSGLU=)SLN"KEVcG96
%Le(Vpk;"fK^mZS-Sb]ls7H,MFPWf0$mrWTea=LK%2?\M![d=kW:O[6fAL?Uph&RQITY(Da,]D7GM&[<pZ15_b"31^[KF+::oQ;'Z
%'r[^nkX2P6XiAC%b<NpK#X]`len;ec!=5C9Cai>9,8ER7+5Vsbcp6h'@1XL8;#.I57[%q)"n\PK->-o&5OtN=rJVCoJI4jh@*L.r
%>#WO%l])SJX3`p;h!*n4HIE;X[N0A0YLMc<6.EVD0DMD:^=frb&0(8$XS\5F64_1NnVB$1N0+!@I7)4&3Wre*(M)9KOt)a/oL!8U
%+iRCH72(#Z44V.U",]7=U:H@R1*\_pa$`0o5c?22+/9KrLYNhga,)'kp)_PA$r\*<LtldCnnlE8F!Ba)_2h]nFl%@]j.^0jB6n"k
%&2^%gYB$i)$L[0g/*gZQej@e>LK%t/LTD0ZI2jL8$;,@ba:UfS!`co)LBMsnWbVXAKai9oVu]d'!bK:of0$WXDAc"DXOV,$Uqh<X
%H6Yo#bS:/X5c+E3F"Ub<`MY98:qK`]fKeT?&@htT<to&h%1tlNDhSk2l/kE_-!Eo6quU#;=lNetQ23PD%ughF/TVYT\A\-MDE#\X
%RkNnPC4B[1)P'0]3'P`$Yr\.GI/N<a7/JWW,@-_2nY)-]Z;"cletA"&`EqpY]\XS#Zu^`<#NR@`+66HKDrmG/PH_o`O+"1PLD6EB
%D-VW(KZMmW#`uU<"![Wc#;V`>]X21EUI?j)=lUt"C,$*?DYOco&4I+k>Jl@\e+:$.!CU+-EHhOgn,_0Znnu@S^2D9HJh+Q'o$T.[
%H(0#:.+r!E\fh6eGTC^kH+RQ+bQLrkF^uT/\6?@#2B4lkV?Rs/e8d$`5M`<?)'Orf#"VC%pO3SP(`RLAR:r=8%Ok743@[VUqc=CD
%&e5Oc"u&Y[iuC9O?(-T^=@[?)KIjqDJ.taUnN\C$1^."4W0hm7=L8.I\7!9DihDQh(oVu*RkeJAcZj!)5&knb#84_I(cE^lH'66c
%;qX+g(rYHL1bmcqP[SJ\ojoTo+UoL_MfjYiXP4mjQO#YDNj,]0*#rW^#35sXDZjTT`GUiV+r!2NIo+SH`eJbq3d_ZQKf&Y!EfEi3
%1Y:EO".oqWNu=(q=a4RJVHHYAm4<oFgPus3,":9'^i<+hUZ1qu,G^jcCX"ASLOQ_o"8j%_4l+KTU>MA/0?l'r$C2sb$"te)"]'af
%.;Y=U?*6W9@e>+Hn^9kFHZ3.%_9?eB?H"^gQh$.K3@YGhB(he,BQt<5OJ($SF(g+tmP#E+T]+]ed<gY>5EW5fd])3=ZZ-Q^@8"Nb
%q'M9hm_Oh^jR-gb=ps)Z>BNXYUFcb+0_KpO2]n;2d"7?-/7"l'Rs^*#&'YE-;7!bu#F,_PCmHj1O+C87n>,N9ME=o[idQ^)+n$:6
%AYBYEU`>hdH<%3f;'=cGps-[l!\%b:ZcuS^P=W,sh4c%d];2f8nGl21.[bAF@X'0:]%Y2:XhIKL@l`%.p?cm?O_@"p'<jNSe[tMY
%>RKgP9EfWS4_rqYY"D'.fuP\-.B@#t\<1-Ri*2b@X-,<3EG^(qXnP:a=ne?eGnX0e_e^=P^FSH]gW^7?!_kXgph-4C>:j`TG+9s3
%@FoI/0(h2Pib`_h.2u$Lh!3<P!Zp@9l_`5"peUrUjSd;_%+V93*k<_Fb6bCX3geY9Pi-t-b*009`4LjrXH)Q$GMRkYA]oqu[WH!g
%.T"BhG1le;gG*Ju'5NCG/\r10:JTS^@dt:!$g@>_\D;)k<B)u@OiGs_Z1$+Has@a0:tcIZ>D*uRX@9Dp]+tj$;.W\)"5t/N:BdOp
%,S(%cO,/]"\1\<D7Pqls#_fs')8h/^_3ta<5R6Pc(B*=N/jDb#gXN0@/o5Z+jNa\K+KL%*-r[V>20R"Mm,4Ao-(k='PQEYK&[=d"
%"<FsMV.XJNBhET),"#79Y01=K^/2\?:@omji.0T%Z0&ca*BP`KqL1^L^"Nbj=L35`&rPX!Nu7)n7C'@1h(X/(B3oTgED6.`)gb'W
%o^T:tbm!k(\>L5A,=['>//Lm@)M!6Rb(C5%5P^t3L>bM-4uMHDf<Cb/R6pmeI2/`00IC0uddUZ$;Lagto&QiepJ;0HQahfPW@8@t
%9Ru+Gk$]pWb.spP4Sdn@@TFI5VTVY)/huJ(7U'YCe<:?GpPC=p`cYK#l7Z'tg?]JO*fL@s&kf[+UTtg5mql(u;da@g1'XT=o.&m3
%"s+@&)IXep<C4YO+c$+AeQ>r$Rg?D-?SEtfOIoTS"c@7+IMZ=Mj<3Uq$7lE*ctkmB`$3A'7s1Wr;C^;!WER=QVeDjDjX?,?39qJS
%$.<H(`$N>RDm"/18GEsKN$-5BFu@_l/obId"YFKe'nMqe2\RJ0NM:?2?)fQaA)RChiqH`FgW@#Z>mViN.&kPu.K:l6l7,DMOn;5p
%TAlfJ;MVL$j9BAc=YMei;!NSt\X'6=RSA3!K=!BfQKR(T2+II!`qApKq[ZPe&s!T@kYcK/5),l&h)Q.Rk`b<#kn&'eHO]?Bjc,mk
%%=$f2"Q`$gV96EgJmD?tE5+RsM$-P8Np;ccNlm3E`&90irnf:ZmZ,_@RhFfLB]K>`jqQc*VW"'X!=Ch`XU1AQaumO5s$H0LfhSuK
%JH@X;cj?l?IF+XnYtGs<a,fW1U;j=`O@<+@E/;3G/!2d\fR?M!"74]oLd@W$3s`AuOIseOh6pU]`oN.''!hWGq2au_>]aW#[-e93
%=1G_`7a5Vt!!MngPL\&ZNZT=O#jh.jGo`)H"P0@pR)!2+Y)FO)bcFXF0S1"HT"-ImY(U+$l+9W#Q?)e,`!'qXn2Gl^dSqZLU4..B
%[Vbk&aX0T8%%0UTnrZdr`!2Dq]Yo'J@e<?'@:.bud0scrcXlr."V4uhB[q)9HUq)kS$5E-79l.V7-?)S<:I=?cl`0n&][[9*a0Hs
%Aokg,6:]1N)^6s88lu=1BHq`XS$DDml:oru>\i4&=(8W7VUD3b*FhDFGgQ>dG@,'((peM.#S$@/7FE0i7dO;nn_bD^.U!?Nj^W)N
%4rMPTJ<=Z"/DuVN]TB`[]4"*?6HS@aa:%Olh6kVhcA@X*j77;&ndf(TFr7Q4c=&SP5b,=-R@>qCgGkpEYu#6c@VK_$;7>?p.C2o]
%L+^"o*k<]flrPIYaMoao$.\LAlr'%YPV&ik+)f'XNM\NXT?4O'Lk,^A5ak-ZV[7cs^'gu`S2k+*'X;`dEPN/lRjWWNR>d:"m>#@+
%G:/6\lN.8]q!'Y@+q'fA=IPSSnV8TKfe$$OX.X.M=!JVVZ,lGRpUIEUQO,\gL%^9R$eU)UZLH4"G=YEA%l(W[?j&.`noj7J7nC'e
%Y@XB-SV\,R)hA@iW.?h\fIl;t'&Lq>I[,T\hulq0,sk#qoVL-u8A`P3cHJ[UmOU97o#2@[R$Ar04"!+N'MW0hor'kC8U/u5$1H)r
%&k1O5LrVWAnEugJ%&*P/CHP74K(#.]pY\FTK+q'[aZ4d7KQlU4q&F[-TI6Sp/'P.fGRmQbF>,<Rcf#/dMg%b0]/+V0rmK9QOo%2K
%:;#t0%KI%pkm"Q'&-RK1J*YZ'YlA+,!,LNO_a>7mAdu^8Y61s1(c%fd1-gn:?h$:$9+ul=%MEUfb.+F*+rg2KeIH5gJ%$RmI"&Tl
%'ZeF7"^sn>$PQ?7]DYS&JR1m1qe%o4&:O%hMeg7O7l\/\WQ[!r0O(IoTfqsCda1a\9NXT55)_11]qi%ufBLI(?^'^(?,LHi+9cM1
%,nhR[hZ*mG9'^\'EDlj]L?,[`M"@sg9QGcR_3mo4)eNc/^cY-X0tYE8U5Q!"-#\i[:;!2RU=78\4G`e+jbQ0t,-&U[Z/TZ0L^0.h
%mU,j*.MgS.C/Jj1cIa9C1p<_$HIeH,1dnT-gNH-[DTZ+_YY1BSlsaY&a3rKq?fTFgF>"PMBId?5P)CL.EgLIKdYTJ!\hI,9q?m"W
%#sIuRXFt?F1I;B=mRHVJkbkjJV*8G3gTZ+Lp$K)]huVU-XK!jD3g<*bpY.AsA<06#+Qf@)-A3F5\01F$`FlBEYY8aq6@PbMKP02q
%[V4\]Qu!%Hi0'3]ZPF*QKZXWDlOY5m:DttJl3aePOZW(iVSsEQOc>:ob6f^\'SI57]mX#BHK!*_7b+Q/+S&F#03Ol=U.("kO4)IT
%!0bMS/_N'$+?I:Bj*b7@SqLBFDuh\ni+?(PJ^28NlI&%rXW7UaYrO!YYCds&.)dcu:qgdJbi,&5U;G8UU_UA;&Y$LJfOl=@+3/e8
%:O;_4LNT2FW*I8,22ar>@8:qQQ.N%bc#IL&Z4!6,U6,ATI?RXJ`*S*%(!9Mfgkg[US?h']rMr0]eK=e\TDm[(J,cF]s78JQh*:nb
%O+.78r:m<WrqXn?j5Vflq@EW!5Q'b1rg,kJVa(+P?iT(\hu;b&s0mLXQQQ5G5P_e`03]!\;b:#Q?]^.NOYoA:UOOZJEuj?d.bI",
%JF8um8DfK/48U*hr%N;B*'>2H"ZO!8gfpI`MdT^qG'@<q]AD`T2,`H"ThL/54*A<#NML\e?%oK\YbOX15+a`8YrZ*'\'OYN)VIkV
%rTuDt:Zg*$!ZQ#Rc::n?0s?.P#5h5=?I#%'GhrYkZK?WR!$`SlHQ:`^'hOJ[CPKi%@[[%U"h0t#XX=+9co$a<`699WHQ=OKDDFQ;
%Othuah9Q)*/Qit^/?!K,S]Ed//,!58YJ_bkG!Lsl+,MCfm]S`JlUCk(3-Gbb(#V9.5V.M6gBi@JH"-+>$S6769@a.YTl.B:pp1$X
%Y9CG;+FidI2"AkIf;+6N#:`N&@nZkFFD#OfUkpI37i%Rn)k_0<jLcd5CcIR/73+E3#pT7?=H>oCj@%^"@!EW7aPirgDPjY/m,1-L
%:_R4Np3rkd,Pk`cWd`H(?"2Fm7^W&?W1]*kb-"B2^;/Rf9Pc]9m[HZN0Xt<Z(%+7uilN&=+%M/aMmUjeqjB@4Llt>k28Q@KO8<'b
%[D=o^<lfg2k>o*k*e/7E53];oFqrZcX&OR7/'2/Z9)<_AhCI;%NSF-/6oTcrcD`5RgNJ$Q-s^:'peL9KQO!*7k0t1aG/0hWdQ4aE
%RJ3Z&-]5jj)i9He4,lnY:dN2ocC4*=r!NAgSWQ]4c]:(*,)5/`_L<?b:%%?o(=4"teg`PtH%SB:a;pQQZcG67Ib!1n#J]FR#^"[g
%]q`W*Nl#tJlgeC08lWbFSH)I-;]H.u7e5Ik:Q:%V'%r)4SH(q`KM6%dk'",,-N9$Y[M;spMgYdd"r1<;.'sFrqj":i&[C[ONqXjG
%OuEMB@Yq[%#&eD9Q4VO.X289Jhs<f&r1@`/NJ_7F$n9(so[FO9&J3fiES4FC'2`c@gb4jL-r\5h@Imt[eo&@%)).oG;G(e?,JZiZ
%;GAj9#/EmUEF"q2`)"C:q3SAs&YKm>`eo5H\Tom[D?Ak3EDK0t6UkIg$6tXBN)9^P1-nhtN5/m;`\m!cK$TN60NNF7SrE#.U]P;<
%mPCXK0\3O<7,L\Sj2/V=dq)&bX7Q_1GF\:s;YNZ),'>8DP'N6M;ams3RMtN!LAGrn@SJpJPX7<'[H[LKC61-g,YZuI!erQAb>0*f
%3WTmg_!FMn$7gIgAjlV,XlC-)X()8>CS]2_FHSUX^:^d\)hL@]+=5Fe+l&4&i!F0U4WR?Tq\%C?;R<9m8)?I=:]4b$k$Lrm!0jbo
%$L9&"F9OPW@<Y$lZP]mP?$eZNl]&rKiCY*h-SI7&O?:U<,$KM.MeMn:Y\3OfO86@H:X];1HhOb]Tc$$K30?j#aZu@KDtu6=5g"fl
%C'7=O`g`"X$Hqq\Lhn,%k)k.ZI!C'!,f:uO(0dkW31m7\H^Y$lHn\=&?tFXtRRcc'/\9f1Hk\!g`'PN\F9jfA&Aok;@P@"cCE`N/
%aWn[0=W#5D-.3NC]>^.EkT*I=JRTD-?pg#<*N3:_m*pdRM:>t-!iJ44@F4ltCA=d'7dr@1"pu#?;6V6%.Urg>\[5NjdMti:=b=Fq
%+2;#AQ\kAX%A[=:*Iq\_+X_LD-`fk>6VObX0abLJYU#"[1uTkn==Daq,g@Sd9qcP.9;hH,"2NVoh,8pUL^8_jR*p),;2SB#jI2>N
%,Y\mYg5t",_Ldcf14<<b,h`N_8)E<qpDX='e@I"60>aIk7-uabqX,OoH6VJq)HAP)dKbZ:HJ*6^Xr`]HOZo*$Jh*bD(C&JQ,OZ)E
%-YFg$!7S.)\_S30*c_%u3M<^8L5pYUnB0\CE5F?JW)c8P;1E.r4ZQAT7R%2A$8^"0#1nTN+No`Z-V,[Y5-jScXp6=X=@>_16q1%!
%AT'^L,<mQKV,?m4%Li<J]sZfef*m7/#BgW-AT'^liG`DVB8K/.l<AmV[m3W#c'$>;+eu19q5qmLVs[_tbS\kUrLjfH-bWE@i-A/3
%IT&c4i(8]3?riEJDC*D!Wfd,DB_5CU&(YAk-tbj:U8*=JIpGs^i3lc&gqQdfKpHTm*D,e3ejc^L*t!<R.#+uqZis:1G%=k0=;TCN
%19/36FdYWfS47M3MS;>1s#*`eMS<dP9Ij#l'sN%X&8&7>?PZ]j=D[BNeB(dTcWbm^;-#9D$tUpSoB3'4e;dA!8A;J7NF@FHH#PR!
%%5U+@=<5IG6pKhX0<Dp4`nd,6%o/EE#q&oFO0d3P-PY)O-RtsHZN+e4;Bg1THL5#Q:<6SLqC?3[*kp0/J5=IT,ka_:Kj))=IQgKA
%m;1a6m38C5J.1m`^aCLmoI9rs./lr_!ucJ9E5RNa>38&/aJAco)7\]o-N2#Sgf&7b@a>pC)od``$[$Bn>L@5cGNXVn&M!sKDe>6K
%[rE!*.9'n'C(nTMSHtU]F(iDK9U\]Z9Sss]>f99)qBA=c6fmGI*f+r6=GHsT$Ig3\F/+L5+@?G#b'%VE"a"HeF7Bf)8V(!?/WooR
%/o@W0J?EQZbCY)7lED.NFc+,;NuQ0$AKF32=m!n&*DAubShJ$=dZWcg+f:,KEQe[o4%2+U2?Wg.XO>],4k-OXLX6Ft\C[QT$D3<C
%;Xm*]Qg!0lZ]BKuaj=lW(FG#UC?Z[T=LGZ.(4Ri.Aa?P,]lus&CO8iP<#>lgJr&Rr]=ZZRS>^WL$:C4%kG&ghcA@(!Vl,7D+1])3
%p,8FSR3n&%"IWHKBm\V//?o-kSc`rLS1g,?%HCP_0U)I(<]fZU]dIG]$UADBi[i,U1%^*>!'6@7BQ6q`Q$Y*;^2l3Lp1XSRT&l6*
%qrG[8B@AX$C*%ma2_Vdn=#mTS2rGFp&2(@Ie8CdkkQ42W$bej]M?6&Q[.:A#."E"f8]Y']R]DO%$>6ja-ECF1U(8Ff-F"lEE$].J
%6>U7+PGFk)]Z2Y>98"pmac5@_iX.GhL.5h+6uW2=::!^#OU+mAj=P"(,B&l^@l/=*aJ$8!G:[Uj3/W?'"DIqYFL+qR.fRjRH%AtI
%jTSh;1m_Nb=qNE,^2`DPi\$TdM1P7)4W[;r!CMOFiBH4aY<-XplID`9!@[Qke/d2$q<$NSp[IJHKJT2"^*jl%cEGhnqTZD-"J15G
%aKZ\$SYu+L-N2YA9]YOI0RA:o-i)a>b9ER$`sH"8&JQNFQ0P"bWb"&`ZK4J0'GHbY_^H$#jdJpAc+`3h5gebAY,s`oE5q;HBt,/r
%H(1#^k@cd%POn]"PC@N>35n99&un$?+TUuN9O52k*fTU<dq^ukY[Mo[6SlBE\Dr8!-=MdgjB0U'Hu%ad)08C\/iX`*$$;G\B_mk@
%,V2LcVsIo;&@5EBBf.tJXjABPV_f?$OU:CRXSD[/8trJrhO:f#a[F+Ab^_H#Mp\FIdHX+EP^<3Im;*pH+'@e[MuK^\Z]U*0daZC*
%X40-A0GK`:BYQ$&9'TB^\YufjDC/=1n?0=KRQ`&R&GOb"\1Z6s3VbG!i84;dYr[33pMHq*PN:0s1bc#jP=uV\-Ocf.]dU9YfKDlg
%+#@cD+nh"s$ubYs-0TqAIo%0aPCZa"q^LP>TO[+**f0MCWhV5;aMj@]:r"cFZZ\eN=/A$*pRX'@PCT[.D4;g]]dSrUEXp7oVVe9k
%0"tV:oS&KW]t=./A!fb]`MPcob(p,5WW'umg(DogPt,1@$W4.8O<ql`cn3I1]iIX1),[QS3o#in3:^:!oTlg-\"4N'>aeL6Vp;b#
%O1oQk[,r,O4hqJhe]th8F2aTCcp<[4Oa6BqLR"QSaMe2D#J?/6$<EuA,2o0uKU0W1Lk"-JHBD%1XF8q.bclHW+<_75H<GU+Q^/("
%YrgBXR7o%ih1$8W\WJY*cjp`s#>nluFc[2e256jfQ0*B"E6&+jKO^N;"ZTcQWpc83VGY"E/0q7kS!Eh2Q#Bgh@m!.$Pa6O)QD>YN
%+4O*Z_-Goq9b@qt$<BEEhW&]=/E=!+o=cS2r-T/0aWUK3CtAE#0ADfjI,m)JqdWCpP*MO?[)r`i@/<.*aW!u_0Sq:u\HUB#52);b
%376VEBlZM/h4n'g#DVj2,a&LU4TM[UVb:U7odtH.2RI+r@Xj\ZJ7Dj\QJ=LJOBrhC9b^R>DHua?6k#I98q9[ER_pX$cLri0,6p7U
%;-=MbkoS)./pT-;r/80>,@eZkHl$>F4!0V6Uff>`nhk7Uk.X:^Tb0)STQguY(H9HKE6pSj&U+[1T=2l"QkT-`MCu#O0!_*f6-)#i
%"=1"iGMlIWL&c0N6+*"ta.sV#kgtif(t8VMIK#*pg>tq0[_9hmouLr\+gWGZQr2R=!0gY9o7C8mOMruh%D*O7V=I[.b55!`m-Nil
%F-413kcON4.JP;0g]R9]Q6'P^=dP\(e5$g&_A6&Za\Ze4W\SK8/3(1aegN(s]/)h8ThPP3)n::MC$!L9B^tZUW$^t^`X'd``Y_N*
%eE3I1V'<A*\thZ=1*Xq&V#h`8f&K":>k5:<`F.P^Lj6uXdM4R5OQOc&)au@6C#,>_N6j#A*o:j&c5+8a$]iIZ>K-fBU1j('kh4Jo
%7]R>).-_`rXu:j:-OT6D,i(>P0f9_ejb(r6SXoPTO+QeQ+se!4L@*D3gSGN]@YP8XCIuF$"`rKR6E_)ii'aB^[1McQ-!2Z7Fu(`6
%RNP?[A?lnBfRIPC6:!.25Tp9#cs5U3*t:G&ZC!%4%t>7m[I(>7.Zd6%q!ccc,`n"A(M>00n7I"D;.+CDZHc&>/qc;YQ?R(LgLpr>
%Nl>-g'NTC-3+K%H=OL&;%;qm.qAuoA3]Dqid#E(&cQ42g*$C4C5Y#!ed$4K*:`Om<#mrn`l,uJ#C-.AA5kY(<8PaZ^'Rp&lB,E*G
%ep^P=O*R@QHIl95b\OKf6,^?SA(.(W+I_+/J#2:#=#uslpWgkW9YDh:5[B6m[5WpuSEaDOSVJ;GYg0-1BY?BlhBcCpaglMZan,u)
%BZ]0QDWuJZ0i;79V+RupGl,:aH+"cCE74%#k!Lq3\u$PeHZdAcE-5]W)VW/a9Aai`Za\muT-?jKZ(J:_?0gH2-dR9AQ[;Mpf',A:
%Do7EB[B.M=2_B1\M0%]FR#+AXKq2^G4E\</DdI&,11jQB@MAEPh#]0.TR[Umc0EhH#d7eKX2ZWfW_%g)#dc?p&<c^B1X^Ir04gj<
%q6P2K[\+ij/?Ar.72YfMGE";k/RFqlJ!Y6*&F,EOi[bF*+q<a2DQ'j+=<&**`R,lCCXTFW8ke"j^M<IJ7#*mWL$_`Z7Ke`2!Y?6E
%?;UunDq=.<o(F3BT7Ao_A`M`aJko&20:`DBA*nA=-TuhilI/B5WP4>k,hM:E)i8o<MudEo$:+!b(OXcOf:+"WK($aMW*0hZ]"[:Z
%$>@kQXFdYD3!Z5j4mia\4$#d"BnC8@):?C"M1mt,n-'6N65ad`#Z$_9D5.%%d]+R\f]ua2p/o1t6BfWVI3<`;,\+aU%im-qRucTQ
%PBqRN^na`MTP`N&]UD\:G;"f9H&5SNm@>ma@,6dq[,meZ4gd[ZLXGRE?N!/O:>c:t#3FGQ>8H7ML@a!1--DM6b8&T&h=F_+8hA5m
%Ik?NcJ5nLH+B?2YM@44&X%i+f>P'2[HCYu/4ar2l"q(dEC7[VN+BfrHbZ"]GO^M_E^5M?q6t_AAK`V0H_-F)\R*J&4Q6kss9!Mpk
%Tccg*K-(KH7:Ns!L'hlB`MCSSl!/PcjNLc<77Io*;]dO_FW)@'\m<MP=*5B^agWNWIA#pp%4M?C]jNJ.R8ZoAG4L<g"+VVp]tLSm
%d.ipl1o;[KTo\hDmeq7_=(:X782%uI*4dh=Hn"dWS,bm<?602lB7)#umX/i>-]iqY@ST"a\)fsr9dXkR@:(VRV:<+sdd\a$EW^"F
%]l'Y&fT""#I7!&2i,!E0AE@tHH[!b+KiE2Sj&4OO]a&17OtP>Bb^&X;hNfr`1fFk$\LfmnlTH=>0IUiPbDQmThE/=bme=Z`GfbAL
%jUtHA3rdiN67laok=629Y(!4C*hE%b"sX,_`1XN10qh'"GK^UFH5Ie6Bmp7$4p!NPr^++F"H6#'P7T/JnqhRl.;IJR",H0+*gE#I
%%0Qf-7m6cq`!WR1I&,Y\G[a\1<.'>E7J]'%#6>k6]&*>/kSU.)Q`_n!USrC<U<r)-E!()rf?Q\2Q8geHfP\nrWM8U13F.Q?7p!5C
%O*f$]+7_^2$05;V9?lPAgV^Vi42uF39=PY&%g:*:`LXgd[dB0TP\?R;gE0..hDQ$lBu<N+5fsae`+ef\/!d#Z[%t<SiX.K^>RA,k
%ag3GPKlc);ll[eqWkI#DU/uMsb=6@)@LtCm=.Skt96]KN)&^p@MDP)cja$;fGMtqLY!tQF#mhKQ'YQRQb38)JLPC%sBR4IO1/bnI
%FNO#Y4aM&[5ZJ=W_k=an;<egTGU_TR9>?[*o-%)PD-_2W&o/3n=S95d"$h#f[Ik2:T.4$Gp3o-`_h(%P@F[g2MS5H8$cc_T-V3P@
%Cd"Fr>t>aQ0GJ/dfI\rD%i=1nqHd5PX^U/b3dmQI4/l<;1KMr)hBgF24>gi/ftuNtFmr5,'tZ;UJ`Q9TQA5r[WTih"Xi1`.U`LGd
%5j5K.Ab`3@1M,suJPWQF'2Djs$L1U[f2M+F*TOFBf<Qp.9>Y$T\[PumhUa<9,re6Ep>OdY&5gCn4X'-$/5=cBor>jAlG:,QZL",A
%l^].$cE!:+l>;<8"#2p=ArGnr0?tMHii]/.MFp-[/bSP%#[WBA0H4>TaLlMXGrIp?TuN5DQL!jSS2WnSV,H--4O8>>B"YHc;4/02
%(b&Adr=<9H*G,j4MIpL3"-/P+\X/9OWDJ66dgTuD/!SCnO>C0Tb8*^S*E.emfstEe1GbdCYt!/p3@tq-IL(?F0TaJuTdpH`)$i?]
%EL4'Zpd>*[*pG^ULKa>%8p>h/+.b_g7WiB97e/(*Ui5"1H[m1^c#I&*nM_>m-7`#/OEChTNtO=Y?Q&[%jmjZqMj(*7p-YXXQWj@J
%U]F24it<7HH<BhJ__="YZ'4gMoC%Nb89rU#$Nd\%_-N6%F7&6q/Q]9PjNK95P.i"E#aZV792Vm-X@&2IpEoj<rIPSANJTNAVZ>;b
%!rW.N"Y%udKVpHDj)-Xl8`OhkdN7b!OK>h.oP(OhOo60\D(^m'Oj/R?T.6elI`4XXYTVGNaY#]snEChn8>0>O-kr73>R+^El-DDs
%5E85C67]"Xda&K=!1&"<<spsU]O42cWc@t>jVgfl#]Y@dL%8N`H:HQY+;.#'\L-mG_?a3fNh)faAkfuNQ`N&^U#-0C%-eheQN/BX
%U)$q^OfV8]IT\m&J&!X>(G][OL-D?d#.dP%_qY03FKt#Mqnf<A-iT)So`<m.U+[>UKi:cBoXbi5A8"!KTAl$-F=BfqAVBE*0,ORA
%/fBO7K-Z"5AIfh:aHt"e:t4DUQHjrXKZ_#6e5oC^n^jQN$->i:H>&B^_ih..f-Hgf67[-g)W]*&[t'UK1dreY?7#Cj-lHQeA3^a@
%Ven/@[_#p&ZVKNt@ie1bDs^f&W(kYn-QiS%r?3.)RNJ5.pU;XfU;#FND'cc/>:Juh<m(*`[P=ojM+7._)!O&q0=-4klr$Y9nU$*5
%5Ug(c-"p3?bU-esAB7Po41),#?u.?9i9FY6BOc+PHK;6C+Zg_I^FOGWH6[,h#g+(K4&Vt#gR4S1C2ob.QTC(M0_5^LPMpp(eo_8)
%A4^@^Z/fc4k$I>g,:X^gRT,Na.s617[4m4=3*ANEHX#c#8eG#C$2&G$\"sS]gD_<&;.^@mTL;#,3tRNJs$1Xs']6o=,lg"i35@[K
%jp$3OmfHp6m6<'P$2^q+^0lafD3S(9W$T]=`5gZ+DA(OELn>Jmr&"lDADWDCeurhi1R=>NM5CRbi[06!qWWfl0bh7T$l?'q'VlTS
%6n_4pUgtGkiS)j(<OJ#CWX&9]0s'OC%L1ICl;8+N$&UYH5"3\V3L?:!MKF@4MS*UHVH>s_ml;OZ,]C>j#hV]c6c#]_4uBrfN&2!N
%#u8d\/8_m?@!2oWJ5=N;\Yf;9,a2#rZK1ebSLa@08c0"X;]^^Bad6ZA[D&3uT^o.'%\FYX_I^oDKJN)KibQ&Gd3oa06*ba-S7qCG
%VhA*#mDGb3AFm)lc.F_E5+:/dkb:+d-nUp!ko3+S+\?JTm1a"iMBUm1Z>AdJ['XCCY;`S-fUpAeP@g_^E^>m<rII1)kCNB?H`FB$
%(&hW8=5Dm_r8F>r^nN)$*$I7TbJKAZ`R0e^'Mq1a6K]m#P`#fA1+VA(N*X5ja@IEYbWWcUY$/kmA)7o[*RdE:GgmGOHj)\*]#L:<
%l4OOG3*p#(4Yjs>EW&fOE+&=&H`:^A(_QA]Cu`<k<P,Dc-b,f3A*K1^^EqJ$6HaWC+jHn2[cp='ciV@fQLS>sCj8t-CUki2<YZX`
%MuX\@c6BjTU\EB>@sCP##9s^5iFeS)(Lqid@QYN*@7eNp`+SY7@D&pBl#!.&%=(LPl7R3g!4BhOM?]4UPPXZ=>q_'23]:ae=$"d<
%&.t7P&X#Mb,d"EerQP3O7=$+`*d<ch>idj.&g<('qSuG7?\T:&3R?sCcd$_oT(R?]Y7$=7bO)=D@-7MVj<s4#A#\eF@(JH#r1d66
%($a3rMa";<.S@\<g&gV,+:Y6Ob]$t+]eP*$J3n]m4)VElpVu#;0,mCCacrcBNb45/h.=ccg'C7g7g#`^pU\P#O6L4t3%VIOq?4lt
%k47T&BE]HrA3c!TP?=+X'R#EAqE9fm5_m;Bio12ffB-j6n:\gRa,YK(R!4G2PA<<`c8CNCZVU?kVRQ1,j,uGHE6F:k&5jI\AaUE*
%E/@,Y%)'=%>98`">GZAL@2+?tH"X1p:0maViKf;`p!"Ou+RICFEIdFO*V!*/7m-['o[O]d]DU4hXSXN+-C[PNk]]J\-<WsKe?c!#
%*!O*u=-DA=!=1/!:-Q1]ro+!47>%<OB`NP%KPX0U]n&tIn3]Z]$t_^Lk-6n&0ME[,fq=8MW(0%M+\#<Q(j5n-PYY&A1Lcdt#W5f?
%$&,9S+p`!bJl[hDGpf`8KXcM#(c-Ri'N_W<$=_7^V/P7>&-,E`d78.bVsBZc"YX\?VmIHX-B/.E:rHP<L\*CEn2-eq[bPE--N#Eg
%]4@=Gfn";C8RTuNT"/DhNu9T=_h/P/dmZ=%")cEBDr09V37/nu!tL<;K6)!>Y^>VRU:>R7i2A+44Ssm*jjJ_I^#o@"=[StejtN[/
%jNP$=(;j:p!/9i3RT$r*C=)CB,KeOJj.qV/k>oi>aIcZoO<\$lYej)uQbL:#Zt^/"&]U3*amlN6K3hbfO:"f$3F@=V58Y>jPGe[/
%]dS2ccQAT59EAms>WD;:B`(f@AdOXSfes5[Kq\=bru]rP6T^C7p4NhEVHktp\uXhgC+8p_i?-c298lEU(YhtAbuZWh-R7P^L17Hl
%K5uW]I_J[15!NTh9OKQN>7Sd4i/dBt\,Y?3ooHl_bE'F:J,f!;l_!tpA=%t1s%!&oNYVQ^DuWT'+dNP6Y(Zc$V2ntLLS^(Qp%(L=
%:O3^uOUAT4[Kp]Zi_mMh[c,\NElUbR8<I$/MkQp8CEiPtQ3dJ%6)LI10UK&)T)r(.]ofKd^dobkf:6ckVn0?cR:#J#CL`?881al9
%=9%BSrpfIWiP0m?`?5-TL[X.#q7$D%kC<=ir:]E<Amu8i>upC]JRF9PSOCqi!1$MI0@\:IkU)4cW=1G9!)RNq!<B5H4I57,.A.$1
%G'5$$$B2(B3S-F%!Mqq*qttM!5QC7X'PA`H5`[et>o+D&bMVP]6,"3L31@!flC*S;:ej@H_K"$,8rg-5KU5"N--+,`f@"?,/kaag
%D<L@K:ogBP]035',*3`Y0U!e5,/upN8:?Cr<jVmGkS:A]3m,FmILp5p"(b"?IZA,JLM'+7&\o17S`)Wso7t,&(ikhnj!KWelGko$
%7gIM?rETpXEa,F-"2MfGbj#A>UER89AbQZ-<;eSelV:V&Bf[+=!K'-HR+/4NUhm:$DPH/:Z9;<i-=urS0(#s\qXpbB7G6ocLgD3q
%j6rtO,D"7Y#6:Zi.0VB'5Rkpm)!WcnMm0,=*=s=&52c[q8_%loHg2Eig;`hBo-S8)J0eA8[R8W;<%h8ki#G479nhJ3;\dZ2CIi$e
%QAT9+7A],AKGRSjo<h0N3O:m!bNADUpJcOoU65LJ22&lWDaaOU\p&A3E1\ZV03_mqeKm]g@9^83I_/FiR)GFa@!>C`9i0T/RN`29
%!!8pJ*u/;f8qAhO>J-X<5Xrf:0(n7oXJ,S(X^i.:;]jVD'LTBMEKdjho5BuKGY*1pcO6b:PaIsdT'iSj_c/ebgkYDW'kLXLgn1gK
%lM?!J^WMm9CZOJI4Uhl0C5\`t,MZI;FB!oCgLO)upk]T&KEjJ[Ak&mKCN//R:C1W>@m=?8"i87*7-fS.7s\u`&));Tfg(/fLrOm<
%M1D''Wr%RS:^O5V"(_o#/n@ADU*C9>TE7o/?@GFYlu[O,8]lYJXK@a_C'HMX-_YPRP^7sC]"UZBJsftJHmpgUeMt3\k[!pR'9K,D
%lnd2b)t4eg]g@kRP)R9=,;Hm3(5gPW<io;E+IF[tf9EkM$%U#>f3P@D*Qc+qR#\!2(YcV%OQl%-*lf=(^`=kfBre21BF6Q8!Zo`u
%?oe_L`2n^9MPsG#7YB2Cq2u0X`F+,I$2\R2J&'`'h,u6sV>18>0^J`V=u;*\B4R:Fa7%As<tn&gmp@K!/2]lAnC4k/l1.2$.ht+?
%6tY"-IPgH?Ks2t,!pUp/eBmh[0Ka?&ObcF?Xk?]>29_''<<[MM2Al'OVX!,0MQ4-C^b4psc>&Y>-ri?TNSr.Dk*Z,r[JbSN*@N]G
%MFT7r4J`!#G&=9W(!B]k4*G'KFTAZK!f6mmWi=k%9>=5+8TrNS.$l%H+Y(573h0W`a5HAPneCXX\[9>+K5O>OV:uYW>9HIuMF*E+
%8pWts$&=gWF_LMcDLie@W`DO6>2-mE\O1R4Y=,/h#"H%\'C*5lc;!K$aO8uVA!=&D>F:iXI]$C9!&D9an`TEmapE>kbXnh#U4>1s
%0b!?h^W@g[`3-sFf$Woo.V$P2*5R**<QKr+;+]!1I]mKEV8Vh*2=6hM^:@JpMir1e!jc_R.QdQaW[j+;-3B=C9[Itlrp"F-jarAO
%X7.W;-Nt0rV0ZAi2<\<c1Xkb>i5&C\VN<X<TbqM+H1oKuVN?isUqpB>;T4nt,NT72=u`LHf^5su71fSN5XkWgUa-UYRXh&1?51k+
%Z8S^6<@rA!cB;^DOFAg;%ND6>=b4TorKjWt+t%pI.EpEK6N(i.=UT;QWBE+-?=eGY."n.*-H$$a@6:U8'Ja8'("Esg+j_Bk(C`mX
%Q,GK]3L2$)>C]jUe@/BbMeMQ(k;%=Gl4m1-KUb70k)8S2FQq3-1lE*2,h;[ZX9&3hiF`IV8G0>]jqJBX!sLe$fVAa!(IHjFYRO+N
%(!-$8*`TdTA/ud68%:YncSfUY?IiDIW_P663T3OK<Pp\&9ncbC<tucHZD^e/e/:R:?FOJU;,`OC36[jkNd+:IXRm.uN2)%qJCf<m
%_(h%ne(#<oOkmpaNQJh%#T_W!0tM,saPj!!lqIrj3l\M8`(At1mFLdTW5(SUAPaJX[$3bK*o/%_&gUcE&M?;d.[Lat!/>6c.PWSu
%Q6m#E.CFr[kgM0-WeUNbF@,e^lL1]o$cu]-*6A=baSkZso[fc^jjUU2js4sYFmbZ7kOk7mh9_%Rau-l?0k41=TcJ_;$2W:CECU>F
%\-f'cN'cA?V3j#3\?b;nr`uppS\7oF_,NY%hPFI#0%7kk]nBE+?*"(&XK))_[,'Z*aJ/?s]*3MNCg9b($RW;5_3V/f6KM"0O:"9"
%=;^=r68&7nH:149/Y:T=$oN;8<K:`ce*b_k'Si@mBMknu!W[k%%$p!a#;1m1@>&ao0L$?>$QM`/6-590ll8S##.hU#3Ca]J&Ia`%
%`uo/Lk&XD&quPK8m.K%8NNt]:Fm\64kPjbb6/?*s\9?4KQ6Bb<&hs@\[/`N=Xp0hcos]Uhd$^0KNXD7)D+FM.,b1ZMGEO-JpJ;Xj
%%*(Q%;*Kr:51](Er@i6oB=,&dC9Fl2&jB!hek"MnSG\K"_fBNf+[.";"ktCjO9W%c+CoqbcTEL^_PjqH0$V$N-gLDUJ#S;;Kigf!
%@P`-3q-bbkqO#B"2*/,f/[.Z$=4YA(&GE,-7V<ZSXcFM9')!q=7-Okick?G;gseu^])&07FH*G0W_RXmPdV2c!RkIq=D[g^]o?jb
%hrH3X+@gX]fqS*Na^R>-G_Q@$[l;dZQhITV%.7e+Oe%7;W5HTYm8#2O91A8$U1(*Uk[C8K[6\lE59R:BgUL1U]U4RR;ELh:]uKOG
%"0Pol1o^@a!rYB!`,6[fGJ+"<$q$tL22$lHgDT-6E;HJ)RaH1u5Q0A$i*Yd6n2L?I^]3!d'*7MIJM9Is[6&@rp5WrZUOHOK?1aN1
%lP'!Ao*Jc(YHTR?"!q_l"u)6.IDTNgk5]F!3!:Ek=Oud<L_27o8>d%q0M#nmK;2?.p-Y-\mI7kX+?[/`.00"8#1O8k#ZDW]U!K_I
%qWjWG1/HpX>XUm<eH][NjB=<+@IC(smPo3jK@WS8a#TmpC?7cuU*h>:HJ"\q=iYS5hH_<H)J5^MK+2<Z2_8E`/TnP`W^ACq-k/^Z
%jjg]rm,gJa"ThtL52#4jH-4=Il<@!`51/kpcCK*X,;a+F)_2L-2ghiJ,Z1HA;HV>2;/S&6en?D9*tcjg6cDVca&q:/JCJ*o[C4mO
%EP5NiG<`8;`?"::?=Q-<AYe_1U=G!mLD9jLr8[Z92HKV7BTAaBAt&Odo#Uj5lhUaSM<ri+75I4EPmG/_k!.fda!olcALmq00YXEY
%mT/ClKMB_\_1`08&6BWTRpC.9AP'eO=C+qriPj=`ET^B?B0W=[9P"tt&lCagN"h@1akQKt!*KnHq4;iVTG919Y=,/m`dE1f,a:pQ
%k<8??//4J.\'Ydb3_XoE0=%:J8oSN@oG9eI0B.\CetVgq<(mFSa>YU>bTpcB4X%Y.7,Y"F<-Q/@\'a@JIg8&E8/?l\-[-KO5%R1<
%7]G_)B-H?$MVqL'[uKs+Xplu)UIisK2^grjfhfM+F>d^A%>fHJ_P2;7o9jJ]ilQAQ^2#h66-JZJ!%s2kNdeeUcYN8THp#f9"uu=7
%$@pM(i>HN/*XO:S\'GOH*4^A8p$kR3*-@2rUL+N?#[m[Y?TA*cL>,ddm&nb)`5b7DO?cnqKV'>A7^`pLEeQAubS[t#\Kt\jW^'N9
%W!%oDgfY6NA)(;Omf3bAVrDr)!4]<N@,GMo0f/XHmn5$WcmcI>3GKsr%X/N[I%AI(U7a3)lZS8Q?sNGS:LLGL59l"j#0*51Gci,G
%",!3qK>.L$\sURqGC'P(nfchG9lSL_1?&%2)&1DYN8Vm(W+7BeI1EeCHb<.+AUa#i:,\13.O>nUbL7BG/%G\B^ArNVZ'J$^.VMs0
%#d+hIL6t[AmSHFsd;iZX&Tb,VIZi@1:ZeM8&l!CqZj[CZ9jjm[^+nh@aaJ1q=>PX]Td8T-]4e`bc\c[A-/qckjKQ?rF.]OiH:`XO
%0h_bpId4H_:1c0=\-=q&%A3Hqk\aM7WTA4.\)K7#ju(sBlbM"`W^l&0QWM>tL)%].3"nPVB6pE@DE-U?aC7SsOC%.^:Hi=%"D]Dk
%/.m?+lu#qQkTZB30sm\;c(1>S&>r*Z;7GI(K]kj23tp<skb>F56(WZGb+mO6cos+i0pY]llQIU/HVZg"^W&f6VlN\c_ar)!i]%Ml
%W";:q#Qjt3*24>]j^[5$o;4jr?*g+GL$\o&bLGH<@D2;m',V0G0!kgbTg;MZ6[Z*f.D@h).6i9s"tXFZYCb*hA:sgD-9oY:%9`iK
%0)FJ#2j'$@Nl/@jfj]bVVjaW#BKeug_^RN`M*0EeG!L`oIH7K5]1@op;PS.)`ijMC_[hYg3g#P!A3:YSidX<L06L@?'Tj3bj@.el
%+i>aD:27mSMB^KCRC(Vj1BeWDl?96boi"sXpCq>H@4T-HdE7Ob'pr>R75d`BGs/sQMg@A0NRXudhUnGSr_&Sa!97-I_L/m[m-G[R
%$u@g'$`V=@0WN9R:pgq&+GacWM;!.s17,"Jq+l'L90?_rI%7$=`0t4NcKcmd=:42^8@[oa-HsP1X$!Yck)[#kMeX)i-K'n[)GnIq
%Q3?Hnrh.]ea\dUOX8(G*AP!.=7f5AfbE(NjUd%EIL)ngh!.G(H(nObBV:WHpYONbtBMWd.LhV8(r]-['asfCfhsHOHc$dg:"\d;7
%3'R8*"h9Kj^UA(Fd4@ejgCH"<+ZBLJ;shae\XZ74Yi#XHY[p+(%2u@'Cd=g/7Zn5\Hh3a5?3\OK<M^L3KgHP!q7^C$nN'O6)[Gia
%(u2iXJ0*KhiniZ=X3j%<\&_V_4'g]T%`!CE1E*ALgLKd>9mSX0j^*]9-TefoQ_4K+2CeX2[bgoL%MC1!M-G&0-b(^>]6D"fH;@5M
%Cqhd]S!\6;lk@=kGdid[#&S9Pb\Bn'#eWnuIa+aAo;DAq/6']#AN`=LS+a1V,89#^W[<85"E@Z+E+%&+BrQn:N!b^7@"sBV)sO+$
%fL.!d5jItqEjlX;T9:r-\[*lC4S3?%$PI9TVU'GuG$WoAb/7IB@9;6@kK6]=/=J!A:4FFAbO;>gZ-BY]J\=q8+e3k+?G@d4+c1P$
%XX*\Dan@Y61-7&+M1rOMW_tJJWgmWJm*89#h=Vc^,O`NrgA8=,>+,@WP<\DfMVL#hYPV8:4Y^6V-fP=U9uk6@q#XObL)==:V;R^P
%moJ2<r:^B/=mu`srKUQRVV?Moa?@-5P`Qi8G)LR<LElY$lOu$+i31,7pL9`:c\o;]K4j_P^saYZ>f:8C>^RIsYWtt\Bp&4EL^QFJ
%:$ip.->oFlEH?YS/erXCrUT+t>ju)ln'iG'AKXiu9#QENCiV"D@OE';f6plGKl7gUW#uBlYCafmUtc$=$(<e6;i(*q^4'tkir'M>
%Sdm/#k<:9UT'#!MKQ?*RA\(q;h6\:GA4Yds>['/WK1S,:\7?aD"lU%9G2>sDbVRXGVf-4lYDA,GoO=MLCXV_MM!@i\(X0+mKXMLl
%(1_3/h+G7n6\KL8'gk=ig03%3[EChg;?1MQkd5/^?&1c<#,+]/[i#uq^Y[m_+jN!M`C,%NSZAcL*=o_J[fftXT>WmO.H-ejIB]@d
%NX?9ljb0KJ-BRI\>mq6;0qc=;$m84t86emf`uOYA)p0qL6+k.>T/bCH:9^@kn7L6M.IR6?!=jK4`",M:G@&]W0I29U5NXL&0<33t
%1p[0="QoK:#Z#U$=30MtU;Jb)F.pjb)Xr$HBg^^WnZ=Y&*lOmBK`"n/jNQnQ=QiRb%'_KB!K/[Eb#sVt&<dAW;O;#j;`^(__!c>?
%bp+TB`A3oc6]!S<+QsPmL]B(743Q,:6q]7ESA`4q"k++2K_nM%*@g0!)4D1&T#N:Q#!<@MW[Nb9NZcI^R7+t+Uk40+&2Zd2irR$a
%l3m\<E16Xj-@T&@SLMShB&"2:Pt=!omc;ED@FdC`hf*'iQQdjnmS\:goo!@hKMYCA7V@3E4R:HW17\@i*jHT.lQqY^Obi3c5>8rZ
%95]P3%_+Ap^!JcdUEN@Mn5kWO(q#9BA6_LS_K47iHb2L:cB%S?I]h0RXRsOrGN(d^6!U;:="A#bLT*Io"fZ^P1IPp>YMm*S,jCLH
%LGW^6+9kP%3fJ-en+T"nE4CXocM:*XpHAFd^5@"OjKK+D,b@*aPMuQDIO(s??r-hndX)$r;@.fBC%4VZ>XD8s]H!rmeF;oEJJ`dR
%U=7VThL9]VR_^H7(Qn<PDoEE3#sjL7)I-_5F%k9Q1t7gNCD?$un1<]cQ,$_IKB4"[%FM4;$ZF?21sYVh?41bY93$<3$\J:a*51q$
%V@=[OB&&%2MsA0L>7:;">#Gi0@\oC!Bb1t$E_7$=/(!:ZD,j$")ojP`Xu$h+=b&+4P)*URZ"lh%6pV*/);lY9U-9bQ2d9,Le>mM/
%^gd@;i.KK$"2N-nbIS*+/bEIbs&o`4L^a5X]%[,#[IBVgB]Sf<)Z6FoK?0l?e0I%oa:T><7NI+eK/^F;@Cr!jLKU+4c23cq2rBXt
%9P5Y53nN>Pgk#[i@7sr0R3j-(VgOF81PqJE3rku<Q4?(qU6>_;l8T^oI7)o%=EW=#4B3tej@r(@<?Gh-ME"-KFlbFW_V7`K!+s]>
%5+H>ZWCT"N.ST&.dKn%1Oq0o%'/Y^ZO[KA:LS?\@*$(f5lqUO.05@BlE@KKM7Sks*UQ.XNo"^_CLmraX6ZFh4W.]('<QH@Xi9:6P
%S2L3eQ#orQ(m%AkM/;fdBaArJWW<;@Cud)U(Ys'+rSWmXcO3B_ZW&;\3E>j16\r!WY$\_m!mpc6nBXo9kcDT5qL-Q;"s7VJ^Jn.C
%d00`liq95>A:S[XG=hZ/m1$16<_:'IN,.sl+@GM$?=j'@!t.r<KRhC!H+if_<+ar5&J!>5:FBqlNd/\2(j,B[$Lt=*Ed^#PWad+@
%W1gVI7u9R9$TrY&\Kk.J,DpQbm,OAb=HBLt/7#iOIlE5S7`6=kgh&6moS[N0aW,M'qgu15Jcm#ZV239cob!MKJFQCSd(d-n%/%;6
%hoJb2mAM6-QX$E^4'h9T7Kn=V_Cf4soToD4gt"7_>JP@!h$+bublA")>H>p:"#cG"1f5>g&c"''/-ea*X"MFun6WF&Qd..2]"5>+
%<(3+cD8ch?2fuc63dr?kW@Xi+^5[19qr<M?d"HN4S2_^5/$,C+AU_Sijl"rM6RCu@D"9KO"e#0;#^_+'oaRL"DBO/6.T.tCM=2%B
%*s_n?n51Xl#SI+S88*/CQ7OH3C';3g]qtfm`@QU/HRL-<'kll9FeDSTN[(<[-kYA!@%8T8*jH6Z51m>Me&\Yb,D"H7^K)rZA"h?D
%,aMkqb(;N;WBoE8ZYUt+rD#3W%/=#USC1%[>3MJLW!MO0DX2/*`Q4c[B82<)O"#lNC/"Dbpn6*OW2mkA)5RNW23P#0>/O1!<.;>b
%_4.7_r0hq'#!PrTg3]9^QHb)&9H2OG.a3.0WG(6'3Q5!m2*QE$C*NC=hPdL#@Bsbn_ULQ,*26iE>3^fW<\@IPl;Q%`i7.TS3#t6S
%mp%ig+CtkS2_q?a#a6Q@Gc!K3dcu5,oUDgYQ-3Q5NPsTo;=HZL0<*mgSJ_dB$Yn[GPr1ijQDV2hDDj,Ci(*"n4`XI4_DWB<9QNob
%<2O$,Ei4<&:oC+ICjX!HMlL.Dj73"o]OD:k.7kFP3i#("Qe#PXRKlu@DngOF*RU$0M>]WTaF1eudG/7<CD'JRiI,#X0W<6%:hJk+
%&HaSUfnb6$?rI\s=VRbm%Cq23&Voa-/.HOP&PWOc%HU%\nD?..KS7li]]_lDTp#cX3R\8u`*)op>V[O$GXB*rY/!H`FfIA.j"ruR
%-<AJ[`F[PAnaRNB&:J"iQ82oA+X`Z&DeUED[UNbWVHe:Q2No8Ch1B,L+VVfPb8;"m%n!>Ba$M41%+0/rEK)[#T`]+%W!OXj>d'i[
%Kf<ZeRcI5WT9SKMcDN%123d3ZMA5Gt1t:Ca*g3NF(JX"("\g_\0JLPbI!u'j0qFjG0a#$.=Tb3@,"hIL,EN)44QJNs6Q&pEL\1S.
%m6It0?ia78go"$RBaalP!QAPpp(=[Ue6bOY2c,L[U-M-9U28`dp2#.KqWKcs@u(b=&k:r<i<JEb`UZgh\m*%\-kP7Y\6GCe8AIb5
%g,^u3n>7,T3CIUB8+`rr5E#S@(qWn0*te%nZEJBC&2!!Y0e7X##]kaYMAc>JH\X,q="_]np%><$\ejub4d?h\eZ%Upnij,K5ct1q
%mMQJQ,.gAB;^<=;8C_Wo!2a^bZ6gq:*^N)g\,nr"aXkAkEi=DP:H$]i80oqY;1jZA<Un^O;nXFB6pXj_LHN&%$+l3<G-'AsND=jT
%l,\-@#mH%D;I]i[jh[:MBTaP/8Bh+g+rFaLBBK[X+B.mI6Y[H:!%,&p0T^<,HK<t^6S*gHYZ(BN)+sPH)f`3KHJR-f#qJJ"09%jZ
%q*9J;@"I6=&c;DL$*D!]6XO+f3uNR.Pk>pX;a1FNQ3b`-480/C:^"MOSF8BKR2jCpAU4EE&:WU+0T$pB7ZVn$rJPbmWP0N2G,,cP
%[cB>8'U.RrPsD3[W*r:<Wtg.!Z@BgeNOLA'$"]X1gaYn2GR#r'<^5g,m/Qp6GW7"/7gMMAGIlai0.5U+OK[WJR`6V7i@H+i05Zn<
%WAXb,)F.p:;/#U@'QRP+3,L*2'RXf[/cr>6=(ZU6F>@!sJkJtJ\Yj(N*J!jp?jkAiaI@>sepKaT<VU[LdpXJuE0#jWZ!Ag9j0#&.
%aT?U2-l/;e=2CZL,Ym:':k4f3&@0';du=k!)OFIu@#7U:MW;l"hsZnMWU]NF<0,6PcrG+GqR4I(P6c65l=Akk-(9$MX9(LA92^lc
%<gjWSB'55n=h?n0CFO8hjt:<PFNhd]Aedi:6V\Yb)7"MP.s6^uPDFuh&/bVLna775>nW[8LtR7jNCYpRIjEb5r=#_nc?+/p1da<:
%[)lE@+'R./ZGu_<C5GE+W<lbSn;93*$h:fGX?>]/.W,]n,#6#pPo5@3E=d;MG7Je\6;2[>g.b4ggZQilAqrg;p>50bN6F%)nP%Ht
%nhi$WaGaH*E$I0%L4$&VG\=!1X4bpgq6@[&Y='Z2T)*DC%OPI8m2'"8l]*i%ZahA_^%le\R'Q>%(o#QDbTT)I9`sn8NWTW$p2q0W
%`c]ML.RZD*h>6fs_4a"<kLZhOW+MAX`$<lT/9b6<Fpup$1ZfOGWCmV\8^:>MbM&)LF5)s"Siaop-dY\l!l9*V-!g<meJpm[&kEl.
%fS^_C9?q?UCkH2AQF`L0Ek;3dCO/HD\)o)Bl9'6%3\RH'1kOG/?G!5H:X_J"->6QJ^h:3)K!Vk3)3,G]I3oV][^;Ss]W>jagR3^f
%UOIt"EB%c6>F'dID/Wi\$WCf`n\Z$](hn--c*G8DP0=VpC(G9*6dW2>joW9h`X'@#>cCBLHQA]WFpu`["R!5`cE_V2kPAB-OMXeF
%:M:UJim[i+^:bE%UdE<]9SKIfqgTR->o!LT-8[GVb6!bB89DDg<;=uGr^<++Mf%"1L"r;9I7^hVJ0)^;@K4i$=Za)a[HdhF[c5G&
%.\$R(e(Ef2H$A+u7'1nt%4&lVIpK"=$RIh;[$ObEC)-Eu+oY\&.^gmU4j17B0WAOj8p.V`MSJ*.!2PH,7">WN0i*FHB,W+*au-i,
%hJ?[-NC#\Nfdl%tP1iP;eZc;=RqF4V$Y4I_LFG;doEA78T\It_/).le,]@"$KO\!dWo08S.5hs_1cCZir8t2n,LAd\fQo:H?oJPi
%^72UJ`0W)V(,AN@Gt#]>nkOlI't78U@ku=-+U"V@0X@FkU:(4JX!g@qCgu!*N"W9/2g3/^%+ic[JHNZN+F9%4aU^0s^DW;O\uK_Y
%)&RJW%^OehbOR\Z>$k@cQsC_@DY>nC1+)>,aJ_KVr*@@LK_YC)BG\\Y\Q!j1fl_2n2P(%*:;J`q<+;.0D8B:bgk,'"[bfA$Cu\--
%nW)hS3OEW=FFr.Z"FUcs0"T\Ba4<h!p_ho;F2:&;QGSn<ROu'fi.ZmH`2M2]<N0f,@342U;6V0-*a>k@MiN>*d%#\9]!/=t%j?n]
%XaTEH#5)Zg@o9)]1T*"`#noRGolNWZ[,ugiTaRGS@G%b-oI!`r0*jD=pNf,\G4_gB45Y`Np8s:cWP-UjMook=P^%,$CS1rF[*-@e
%K=l/`E$Uo@^Q!6JbNFn*0W>G9h&s*fhO1UJ0Q'03bsBsXqHE6nFOcpFiXj[CG:Fa+S`9MAUqUVHU!hpi"XO(U!Q-oift35Ii*g_G
%lr:t?$t19:QTi\RO;+Dt]U5"sj"hTjR\T>gV>b>ZM*=XXN;E!L?EMa;#I+J3p>`E3O%52TpMo`[IfD&tAQB74oQU_[>QP?V6q\LX
%O.\)7-3k`jU>O8_+a1ja,W9dqbO6]qHgr?`<e@6;ckOFmaPJi,jiPSgT[E(+<N3F]5rqO6ro5bK#0(RgDZk=e&#HSBS<*eZ?mA&J
%'Xfb@cQ*(uqegts'`@iZ"jmV=m>GH.,%Bk2QV@`dL4ku!\%l?oYFDc5JZh#01aMWU@U?bKOG^`Ge'I]E:n-q*K5m4?_S[,`Y(qsg
%?B>m?>Z/jnnYa`i8KqjXmX"hdL)W1*dX=7D+\Wmr%(di7@,DbCmcW/N$h/#C+!%cI/ml/!@-cCb-g'C+F.2kPFGei=+cdG(3M*Lm
%rZ5T:-!,Y-H;js343kDJ(oot1HjS"nTAKnt+!191o-RS:LLnf@]<@(pf!&(=n\*QF9Q,R4msuA+1h#U7.-g5RR!pa>UKU($(slf4
%Efqd#rBe^kpp^q,q>B"hIK[0O4M5-%)IMkFHdc&@RWGB3ggTGGL]Yr^UsSCN&I$tEJ,I3Vs85Z2s5B$Rs-s&dVn`6"J,1h5s5P2N
%s/5Vkn_a?>YBCmbE\nmn_E?Xu4<-.?NTEk+g:Zo)-3jBuCB5!MGW9#+nS"'G+UB:YT.4[,fbqZB'[Rf?=J#Na/6g(t%1efZmQLP7
%`>B;n+Q.Q_EMK+(qtP/E9T=</%-quY#*?U=qA=)MFKgu5k`>4"Jd2h$I,o*?Y(oECO>h2hDFBIiY]Wkd^e`#UgR0,F)cGCWhIjE(
%g"fL--\d'g?T]J,mi!^Ob@eMG2ZW<f>*jQ$d=m@%8Rg8bi8F7jcSMI\X'Ll6L4#NJ3=hX_T(S24J4K[S+C;OKSBa>uK"jr*'?BFa
%^L21S4XM[+>6T2D:J\Xk@7g;W]Of@tib0pi]^DkU9L8`Wo*G#DT^^%gNdAVHjVN\HI:Nfde<]`KG@97BrO"@A"L6G*_ts_JYceFs
%>',=d$k.e;)qFEkLhB/h59.<Fou0i^0uNkkLXo@1;fr59!b!_#QUH(kMk]+[J#:Z-6.h;e_WSQDbm],U;j8O#]p;-9M/tAonjJt\
%"&:#g(]5"j:?q`W5E8*S(6<D;_]^Z=?\"\qk)^H#&h_ZMHo)5IU#I$d7h`OWKZQKL(bDsb2@(M^B#pc<A[o/J7%7PdYY`.WAU%bS
%nP^GH-MaAC/-hCB&O^_Bft$0HYtHg6W"0rkAk^1/9g2MbnAQM\!0X60T^qn(4=Ute*=DEk9-BfT=AB`P:AI_KcPKW(Lpg*C=!GcG
%i0FlgiMl4dRpgjgO"Ok-Btb":MM\m^Wk9BX;cI;dQbX\BLA=XX#'?Rnj<tOia4K9I0@FbOlmj5uXoup']s>k[HAJ+#b%hn."8q-,
%>I5IcpgrFlMIX8$T".Fj!k_7O.n&,n&P/&GJKDD<"Ng`AJ@*rGB'U$5co3+YO%Pt1n!o66Hmhu]%DkOTe.7[\P;W^>.)]'iJXs7d
%4QZGD:\c28!RZW88enfJ'Vq6+pY-+X+>fE8'G5GE#%U+EC'qVaTen<,]NNS6r@%[;KuogeKg-^s**dnunu$q[>6"0ubQTDU&O0=T
%0M7-2CcA#]\XPqug]ke93=Z+"m'`@uXFRl&38LDcha1Qc<+_2`k]5WZ05E</,g)r=X0$b!*S'/bpOt_CX'%(:cY?;$o!T_*qitOX
%W3$sXW#1!DC$[A?M*mQ7>0oYt4qJ5h5Og+F<:a)\"VD%KhHA1[Bs37"+I#M=hE8>4nYUA!qut,H4:3(8>0V(7,k)_RBr_I),g)`E
%"3)N%^>s1GZr]TT.Qg!Z@V()'qM.jabAbk,9TLk-?ak5!c?#cY240,u`<*Bg/?AuX1Zn6"8=W]=@#5Fs+LCa'+fAkqlnK,"!+?oY
%N9acG8hX<D8<+VZGZ`AdmgDH_Y1>UF+:8Ij+p*H!4Rk,F+/fJ2dX(rYL6k<<86k%tlX5)2:4R&no2@cD04*p797u:Rb"2A\<QKA%
%=bhkWs/^>VY,jmt<<VV3<&>UkSaZ<^^N>JSn6^qY#PcTGEBJ@:HH>VSGT1eFA*\"#S>.,Vb&B3>k@lm<3EX@/%uDlOo)e5$7*5$N
%kGSV5.hQ/#$[oQ%O.<nT,C#dKSh;mR(JNngL8Dn)H?-Udidl/MlX,55nbjbhr'KcS(YS+?79B9tlN\rLfUgtZ7lC'a<i;"0(</H&
%'AJZg2f9J(<M7L<S>:576uXKr8H@Boaa4h!db._Te3"nJ?PP)s-kLYa0q0Ei32k)rnprffo@lVk5E$H_!^.=B%,fk.l^<`E@0ZK6
%#d$FD6]#_*'08=Hant)B$p;0<+GW$(]BZTE]l"X5(]^)J$ikV%ikZ&;hqu]fNZ(G@S@lM\B8qN]m.HH#N?A:oBi8QVN>W`/kZI7@
%d#DUM1_+-%f5hAt9<&;4;sUhGK;0K^(kda]Pj.H@B!Bkh.W6)&G^ob&+V#LIi2DFDRq-]5m?O`ci!)\/**YVNq3H$^"ZP*!Gsk"5
%[)k,Q=O,7Ji2?h^[bUEn;S'ETGP<EEj=!+P)LH;Z"qg\g$>pXg1KP.P#4]8Ra`G;YXi8>P(JY1trt*<CZWp4_GZ,m1IhQ`3f?G<a
%l)h4Y&Rdpi?l[nQ8846/VnZW$$1_BA_Q]^e^`lQ*#H'I`jRLMF^fu8T`t)]>`EgGeG*A>Fm7[n\m&$`o0&kPcTK.(8gZZs3==Rmi
%&sOO#juFKCE'D1di<32+YFD2;]m-#hFpoh,3QlK4)Ugn#X5Q1uWok\qXbbeW4lJV&q+j*<1&d%[&4?ZNH0p4`7--Z/Tj@^77_R.@
%_LJ$FT6f)SV'D-eb.745=!RX@#le>'m9U=g??mSK8_l/0e!F/8P90!pJG:R6YkunF=oM?Qs$V(^o)RV-9hMKfDe0jXAMBd4FWn88
%OPBJDC!jA6iBR=83sQ"1;(*^[D)M5=:Li0W%rW7n-mFa;h'U$8Csp*9En7(QYAD>s`jhm7)aXa^pN5pE'1%j*j\:#\'lnmM,Y0oE
%RNP^n=Bg0Z%(R\ta\gqH);P1akJ.%:iX4[Xo#`^m"G_HB19.Vg?3c$X0h@)P?XSQc@-V7#lOn5P.a%gl334BRZgoBNUFq_\+cZsd
%94bEi=tIjqHLsGPX'ln'W!B^:;2t&ZR.Z,D"D&JDTcOqbe:8[+C>Q4')*qCp3pRq_R,Lq>o0l%g5-U"::p7'WcWLAX%nos?1:"3E
%ZPq7"<TqakP.=n"HpM#;E/aQgY<Q3[W!8a,0:`l\LM@*+:qJ]MLFi!hG02K[<lG.e+X]8t>thKn$_PW#(_>.:$;bR>o_u@&[*iJ%
%HTbG@mns>rj`\61`"p<rY0mUo*fK:2C_[HrXhK9n$<mpB%TkW(S-GVu4m3Y2h$/6<KkE#8j%<b4oj442:=Gj:Fsk`$dmIrQigOI?
%HR-H`-eJdG,4pI:1\c3^eIU-G,-=_YNa3(XRAmI*X+k2oVg]f*W<Nl__(QI%HGg+?K,7t\;W"(Vhi!:4%nBp$"%J`!5$oLS8O)NL
%5LJYh-MFOm=#No;LO1<-KbM"$'mnG_,;QnYaVenXE$BMl@aB@KY7on&\qV3r_MO$:o["]08m*4^n4-d.7H%:eT%/>sS+YTC6S^hn
%<Z?D8"'ZONmY0gi92DilIAdDG%-Q^a?L+sn6$TE=55)(52a^-Q)[IYW+?Vg20+c#AeJnY:h4mI5XQ?_2j<f9s?GjJ81E.#HB?>Bf
%BPFu%YFOf#>$3aW"2*iLSY2gE_'#(FDR$@gaI'5>:iBr"NT6),a^/fNBBnP]^(t,7\W)rHoD2nN#^WWjgM.CZ[*O-CX![q9'iEd%
%n%_1O>9qK2XL\m#Y4/,gOVQOA;q`=oSSaUdC;PF7Q'lIsi[e:o]Quchh<*7/f'iYI!n2(SWNg5Vp3KOQ1bl)_Ygcl72eP:p+`R=4
%_p)38$b)_&*it(VObi\@ndEF]=Ufr==k).hhkt;\l8^>ZL@_$+[8$;+8$1$=%t;6'aN+kMDWC2_[Q3XsE1'0,pgTJ&eMblII8hEo
%PPA_kb&Ab==07I/W7Q_[\`_p6(N0NRrB6!_WFa>8rFIu"XO7[s\_:mf'(fMcW%HM0W$#Mj6?0q'!5j"q6hWf2#!`WdJLZHf&L<]2
%o)]Rl((tg9^m?N=mpF!lYVO?Ce:M(f5i@%3T7m85."jrf#?$YpPbs6Bd-:<T<6'n+,Su-]GNh)g'Iof`f:*U0:).d99l4RO_B_"Z
%$_WOBa&F_5!^]?RT:IIUDa'@1W/r-U;Z4s3NFd\hrZq`C(UXuFO8Q<%KY2?#hb:/@,7d>]I[pl;TT#[E7n?O>cj>):U.Kl[!UBe$
%T>oAu;Tt;OCos/KR"t<bi%Takb^g=l@Ee$YEQ$_ZG%Sh<:e%oLIl^I%IA,YV&t1>.!(EOtRrnt8NPXEmL]O9IfaeDZX>p*b/`kh'
%Q7.(bPi./L?t__^B6L"M9t>S^ANP`0"gbJYJB\BSP8u$i/CZXTArY'O1Z)i8:`/X%M/&(@ESQ&2HIF`K.[qq+5CIdQWu)ua#qRnn
%9!:dsh,bKpJXLH"#XFhm;=Oc6_s7]Z#P-MR2pjjJ&&iuN"8U)Gb9KjA;gls'q-2C"2;OF7lWHq7kTgsdG%WtV!>1L9"!%Ye;!*@)
%H9p/<HI-S,LPM8iW!W<F5o75+gK=oEg(tK`Y/rKKgs9!.']G`,U5G>feH)`+/W.fG=*-Ig&^mMUE):UZHo7q(.JuOr`95NjmIF^Q
%1jY%P=7jD17(V>);>02:K"[n2l7!eNKB7W_HZ1N!5]b0j?0<5Ve3e<l=TQAaYM6ARrV_RDTKiqr_X8%1Z"qdSJ(KWYLj6IL]2Jgc
%pO\a4)EE?3BMfq4ne*.lIZhP>='AKZ&Mk$X#Rm"?LA)X?RP'[K/jPT3V:(FVM0Y69Rio-<VNAAl;l*C*!qCiE!a!jE,_W@OjI;5B
%asSTP>ihE>RL4^S!_lZpmh3MJUl3R*S+MVt\M,;U'ZB=>ke^lG:HbeE7'".<8CW1rOCK3&Y<qn^>hT`_:2.9`]UoA,)fI"dZ9"Y_
%aW1Ic]gT;5M;jl$`K,^Z/g0sl\Na=+=m?3pb2c="QP=P)Y^iP!Ut=1Y4t3)F`>KSp_1_G"UdZ$J<`p0/oXsQ@Ot&=bdRDX;T]h1f
%6UkZJVuuW>GX3eLYY[RNVLYNI__a:U@*O5Ss4q?F\0a&d.XZq!"#+jL19`ATs8(5["+;&+6[bP'[#04dK\2(2Z<S+Mbj`rpBV4M\
%0c9;VQXTTa]c$QbGZJRGLO.%T,gJ#NWFqLMnZ8(M'29Y\>gY]LOrh2ecnA-7SY+_U^j@ch=fibZg'HVNkJQs0NHWg'i]X8*=NnZm
%DGt5@[9tqn@^br@)AJNG[%eCCqO*Ztj(f^s\;+dLQTBD@#+XSi(WV2Am.JFKU9LHZR_Cc=hjAt/'X:GqNKj2>7q+/lJ>2<HC"dW,
%cIV`Q]G1Z/p]8=MGiBJOn":RJmibeX+>+kA34!KIA/C(H5Y3er8Z&g>n[#K_.jD.*Ij(p3M-(-paA)eC6h+?_^Rt*a!`Y]*Z`_d\
%@fs?&]]5Z<!+_'00g(?!ej[TnW)R6[dp#s[%LWqDAm.h0!<PLn6.":NNS\I,^j!E2V8TtM,e+Q8"3+tj/r$#L"nZ&&HY+E:J$eK]
%'N/sKl;kdIPGB')BY,!t"m#"VHkPA*)OjK^aHf(!:9![Q`K[)pM*sfG;Z_U$YDDZpBt&6TJtQe-(7>3@8a6kQM?IAh`C&Sm;N_F$
%5^/@]kVU8U%7]NV;i)RT2fmbc0Onho\_hh1=$c0X[GQp@/3*$k#%'::g_Q*"miO%/la"^rLs9h]lChs9m<JZVXZ[KQ*eF-,BJE^U
%/0l2WQVGj='iOc8"YlUf4Q1J-=Zd2]O)oGt!I])Ln\h$tr[!I?pL=d!9]LBR?&XgLat7_:_nQYi9#YQ^i*p!q#[:549pjHo(BD5.
%#X;Y#hsL")K&(3R_?$\ZqlI42HQUc<-/g_gfiD<e^%Z7JJK+5VJJ7A:a+!5EpM)uL>4lWdh8o-^H9J:E=.\s6%fOuVFM$t+\gSNJ
%eV^%cp#1''B3u@N6juFRA#bUAlWst]YpeI9#U$1o_)t4>qP6pjUNdEDYLgH+5gr,H#U,l:gUH7URhDn&J\-RtLp"YA&f>HH5,^k9
%QclR!]nf>kYpTTZN[/4;'!rW$[_j^L.QV+e7])StEJQ"?22E;o4sP-93FW>'GTc(A10JBB#f/!SLB*&ZT!#AH]i#Pt'.I+#_<\*(
%GX&j!@t/YR=SW>JRp5m7%JEH+hSa"s^W;3;Df3_VnN08J`hA0A;XqprAeTG$7P,uC/A)Fm/;"2B%<O=fS3RdJ1A$4;a/DjHW6T?n
%4ACD^NVqmp0<V)hpqVI':^*u^,jc"rePU`$.+77r;724Z%LL7\-IE)84UscXG`T']0rgF09[-/<U,/utKs4YJ:YmjZ1e&I;/a&50
%->Q$"(&0AAL&,d*6_?/>l0Q@hQ\YDE%&?QU7!L-#2]TM!\\o^ihuH]l1OaX6=6P-SK'Ol4C::.!_:"TtcNUk<SUXJbIAY%`96\qg
%806]EktEpLX\-12(6gq'hFBi=WF](Ojf!q/LPD.RVfjLQB]tK<J0RXA7:@rDEQb1d4:eo90F^"h#/Us+fLt1H4?R6lU:f3Y%LdP<
%rT\TOp*R$'C3Fc>jaV524;Yp\>`LFE=8U+YYUJ[hgYkM<Ycl2li[*iU\JU3X!*Q<^+?YKP#1&hX!qErUa^?Jgor9k'204kjY,5@b
%(AlcR)"bdrG/8cp[@i.t#p)]Jb?o&cn3Il!HQ*>F\=n3pM+Ia,=7l8mC_-$@:2R7fJY^`Z0P)f2gZ5V9`AGFKYG=W+Z(IC<X.eW\
%lLsE@@Zc552\"N"fPN7>P_R:qfQXPPcpo!A&9`c2_s0[3d=p69TWR$^V$i)fIMf(uJ&9A*\lcg%3i;800W([?g>_4>OTClrCI+",
%(Q9TR%;*(TaZ6n)c+5$aU'/HlX1+2YAR;>+4[9@nIPg2[bI_<l#W3nZgOQIe[qlg9A@&<j[rs@X%gg'e(^?b?8[mORj)1Cng!9!E
%#R'8X]!C;rKqMC-75?-7`1)*C^`^,r%Qs$bd0P6^E6'\hMr*bdgYI&W[*ej7@G(1X-gN-@IIq&5lT'O4P__AH1-^&i*q^_e2a\[K
%Do'q-4^$*WK[!ME-`T*I4^!hl;!3b'2l31O30;sfXCnq#6JMVt_kgnIT]sREeFS38UlH&0UB)7:l2An2r;g3X:bhh.#+C"BB/M'_
%Ek/_a>-=OQO7fHk(Nq=o':uDh$AqkBg$0_SB*^i'NA($_m4#7RCAtq^3?SNF8H/$!If#TsTE[ehq6)9SGZkk"i5dDnnAT7DF?rNP
%]?9BLrS:%s[EfD55tsm$GqG>t;:``68UG%)8T"%2\'=TjM9)pSWtJNU%dkr-Vf4S<b]R;-@O9t#'7JS8_GL-fJ_^Q/c/OjFV?j";
%O_C)hJ81"b<DsGXZ`gdI8MY'iW+5V"\M6\)Y?;;j^q8Np`nfE)?b75e6I"r-eM,MC.=lPCpjBb&#rg`+p76b63i+Hed5__SFgEqm
%ZAUH:pZV(s`Y;.NAhD6rmXfKmUU>0Ob?D\m,OS3E'CV2ONa#kVPmG;AgK"CNX%\7`$3IuFetooK1.u&SpY]\*pCq8TFtMhVmt19b
%mah*Rb"C#^N9RX7<A;oWDM2seiFZSC#_BO<gQiut(k:.h[I\CQ2E+3>)%:Wrgb^s%BDOL/?j:ilSC>!;46HFXhE!>^_>L^6%.no/
%F^T2g=8;np4@1t.0daC#-7U8"CE[%Ym4V^mlbEW'77<K`n?VDIk$FB<We&H/rN-_E0=!]`U,ou;W`SfEq*mN[j_7j&Vk<YCZ(l6.
%peWP5IT3nL<qq]C[uNXpgeeO=P0A.VL/M3[&"R`&b+H)']IYN^>kVU2DgGF!51K`r2DJ@%Ot88J"'&YgB<;N6@E&08r`TAHU2").
%WZ`gb*u^'A!"K]gka[n<S#mTepf!Zt.WCNRWe!=B$.5?o(C=-,b??l@)a<g_[7h"^&M9CTB^'/Q-;i_IE5cmJePk%jH<A6tU=M9)
%b#4M6KEd:T?:b/A<\7nE<.UtOd4GNSUt`2W:"&*%QE%%*2Q$u)p,b:");e_;:?$0YR'!p2!k^=H">$%M0[qh']X2EZ('>K;<n"Jo
%Q+?M?;@jW.lBgW[aXi1?No?Ji`["9nAhhL0mt,U!GB:fPm:sH!aV6eZC)H4Q52KJ]X.#7=0=&=BrO*WKb?`:AQpC%\\MC3?8Tls<
%FU[.a2^W88261-iGScn!\=5SB];u4`:A;64V<S_Z#s$f3p1KW=YneDMi+oTHOCMK6Rj><UL3aAZ2Kqq/*`:VYJTi"%(uAP;:?$0Z
%R&sX%]$0s:O_:ZR;Z_3h]7h'nCZ,WtlX+[W0<]jP)U.sA5AVUO)MU;-DjhW/2#Wl6@0UrmSC>!;46ERj(ph.Am&s%Shtm>%s/OH"
%f&-J:Gf/+cAbc:N7*TtoostaT;B=FF4Qin0cDNT/+@--r<Z'opipV"''e0@oQ!EQ5\!SX=jPVD3I>g-JlBNiM*XXR+#5uc%_m<Yd
%\FXZ9\^mFG)0'oN6dgW\@u=o\miHFm<eIE(2^'oPf:\`REHp&e9B8(hHso-,*$4ba'$b9T=ZRY"Ia67e<h(GtJ/[%4T,DNk<($(G
%#loW^or='T/J"%46JWtH5X^j?;*XLE/L:EF+c+T!r;,lTT209"EAhCab\`Zk\($^4iD:`sqje`t<CrMu1&V!^T=^0g?"+tE%,BlO
%-%NK2jWBog+F[E:4Gi#(7&#=R50KO89sU&.U+e/6_#ZJ_#Euj@//%pPTY_mA^,i2hZ<!i/7JL[D[$;d8m(-d@)fI5(U="j4%\ZsC
%E]3k+deg<gKDP,J7OIj:H>/>>_qQ0bb-+^^dhI1.58Iu6N4l*p2aak"-:r,&'f0p!(jka+`%MR6>Co0.:UL+)Il#?cI0)kC]C\^A
%\'l55%nhR.3!CTPH104[f:p=t*W8SeX"fctJEA'uN:;E&.egN+K=\3.*990<*\40@/6)E6;:ZXbilafj?D,eS8S/,R20d4YBpotC
%H5QIih&(2hq4HkjoQ?_,;K]&n$KS'^0a&k=6mT6phSG;^Ymr7g?0dtoc;XUIhpsY/C#/92qXHQ92&VKn*Q@C;8_idV(M^2(O+l:H
%&!14QMH!J?L"S$:?9lI*5j@eKJWG?oQ>UND(rd=3"X-==i+rnNPVKl)IKB6bPLR:F5^p5_(m..q`g9ZSMFsF\?`5ZL&rC*pM2@Ic
%N&'BRS.tdH9b-J`KTf1D'P)&rXQ.3M^[EP+8=P/S^L6i)i@B&A'V#q/4Sil&Td'?b2a^$4m$4N=JbbqneWB.)DCUb3@?!"dN<)2$
%r;Bh+TV9f4oY+Y7.tC&I^0g8U25uOh;>p]@9l,]Khs-L$Z7p?TYYjfLKI=<D*1s2=i!?W?O9T7!R*JB&_!$KZ;'Z%!A@Q6gcd[^h
%#q7lJ`a>ko!$,]]^=XsX;#BLY'&4!,FHK;n9FXSceiLdn*E/Isl-?[q?n[j,gh/*?d,]&j'JoR<p@W$#HsK=cp94shMoiM\%UCp^
%?n$Uss!jdcRAu*/&M;FA:kDVAdNf$L+98ti#I:JElhn+,^a&=k1lXN2E2YBrHUWh;-r5mq[ELH"Qb+BH4]Ba[Mg8,P5ojH#&g'h5
%Te&6tcn8212qRUYE`3N]4/hjHF,2L/iLg(gT*g/ahj;_mk#m#rM+WsJe3:mL?Y[mbR6&(-a/e!V9_H2cU6[IZH)65^*G_TuU-u15
%(D*A$\B96RMdFbQ[>eoR9n9!>JK0&'S]l]4a=2hp<7A^Sg,%9>%+b%4p0!cgB#<_o)'2+_S)Uni/K@*XA.gRdb##ofZVr?*15%C7
%Z-9N3//uhrhh]cfW)e41S]h.S)@S0B5rA8t]Ul*D<'^9ia+frbbuE$.g,KNM+^&3hoHO5`c90SpRk+616*@5S)`/@_^'#tW8(0]&
%B'"Y=1s0)A6pAM=Y;lHc7R<]JQgeUVMhiF"S"98(5SSW*"#6\irXW/Y6_C?Q^4+S6P5oc)QB=R(5ZibW$BD[A`l8(I:3EDiQ_>sG
%g>IY]%I.K+k!M9EBDiX*#d;q&1Mdp@oJV;r@N!Rh!ba>qaoqeD;qb=fkP):'Z7;hf%Ft$33JM1HD#sGRneAF;2cJ:dm$sR,(^SHE
%H%:2NNkt$Ga1%=D9PP\0I2ZV+Y.P9V(57sD*nX&l-[lQaR;,qkN7i>+o.4Y]G"um=hai>Hq:k`iL$J?;hc.4W+JgeAk6pQg6)g2Q
%rdkgGcbTn@/K`P=!gbt"[rWFl@9P?UEa%4&T0AiB[U5gX\\^W!<N84HF$@q"d=Qfj(IZOh?1B(>QN?(DdV@E(D@2CQRca$l37e$+
%jfqKRF#Yhn''Yk''u_4e+IP6fY:J=Z=/mh[TU69s;fUcnOY[NaLFm=(cBLcU6.h"e"NNUcOJO/$<rh!JAZ9RF/nOK_Gc$oQA?:/Q
%gLs;Y1UD.F/Rs;QLDW''@n;u]0GD>@-5H8j).VVu0V2blAH?rrpD,:j8GIM*kBNd89s3!NbfQcR[kOeY"C45im22e,C\r?N=YmNY
%[HeCoq0[HZoruie*0/S*GnXN^^8S'NjX?MQPA7W>U+a1:H./QU*/+!>U[`ksfZO?qBBOMl2Ynd1afimL<a8[A.[O,!N.;?NCo1UD
%Vfu:M;%O)-+FlGH\c1IT8[*KCnLB*jp:D3!j^3'McVt%8VAT&m0P0EN5#]K-8?J&AcO;YHf]S]o%Sfu_I[deq3#9Rl2jX"3hQQ`!
%JuR3Y\LdtD9Zs+=gjN(/l0R2d%mi8OKf@-3*gOk/!NZ\]7N9tE<<dJY(2"F)'5$''WKnJXn%3p@%J8SF9-!c6h,(mnW_&>YpERAY
%fg69?MqkO:XPT@Zj0>d4,2MU;.#D!n$96V5+MuW[gps1?OBV1Ohfl'clZecR@q=8][eWUsSNDE697BUCCKgUdEGf-5Q5rbCIOh6!
%Z*]R1M?#\3Kf2-m\O2=9)n*VNQI#M05&>4f]V>&7[1FRU[0DnI*Z0MS67ALnih^k!LE^g\"A/7/!+L)M[U;P`"+cd[c%0t@,hOca
%b!I+9"JUNZi)gb5(1m,Xg8O^/!2N:;qqX!+BL*^HN'oo)`@RJ9-Ws5[N)uNK&Q,M^VHZ[^EiJcs1OR.mSW_K^_c9d)Jk5<lCh"T4
%gZc<iUIi-(=NKn(adBAGhD`h7dG,bg<4hecVVA::5Uu&e,>O<([7Rcm'7A5DgdSqK%8>Z";r-!Ddu]YVLdV\lfQ6!9K2^PB^89j'
%5%"^!X.)j\ZT4#RYl,b-A<Z2dTd'&3XD4%.9G0`E=&fkh[P9K*<Am*#,kV11='Q(VOC,NVh4,X&^Z=pKWakrDQUWKK13!";1"e#M
%YFeemDUufA*/eL!)bY&EeShaR`dY[MX#ZfO@p^Wae#&fhicJSgV/'abS(rJp,A5&6MBPtoHa@S*["6.BVUPP$<*q%@1gb?&ER2Fr
%M?OAs\F&as$P;RrM^h</TaN1"Joeiec'ac(^8RaJ&=(-n2//&LJE`nFkDMDINX+:nla**4T4r'lnTdT25#WZPJ0_`H/g7n!kUB[=
%9O7lu9hmXH<[;H%rYr&?>r]H(`m?fSPUgXqb`kOeU>B7@C@C<)@+Dbbbq+\2-A$8[i"gd*aeDE6qK"<h(kWV)Gm?1)\D:>s.,V+?
%URGc0&6s"SLg41,[OI.G@3iPM7^.X[o['FMFV@R[[I;!7&YIQ.,i!5dUMSi-=5@(72b$3VA\PTgfrdGR_<LqkieqZW*(3I-.se(%
%#[STW%<'%'UWg$Z'@P+XPA2C)Cm5]Z3H%gS@hH]S_6/2N3o8cK8(O2!`Q3=RM!]eQNqojFZ.2Vb6dgDc2J)nBiXj10g,kABc8MRB
%UVUR7Ng_oWYhOtU1j.ip1(EC"mU@q[UcIO!nqgIth<5gPMAQUh;TJ@ZS5hdA^c_hA-C;__qCRE=)T0D09u-hB])$#CMfA=Un)2m"
%qYS%^TiejD:?@o/q\=+9Z7SP!)aF\`\s]9OdBmZ>rL$9)W7/(;5:(:Nn9*n!8%st3B0>O>f@&\JVi4?N#)r+NL\,gqit7h*+`K]?
%.C+:48k;&.7dXPe,(FD:":YaNPoi?.Xc^1/hAu\2XpjIq,Z<0)9+1S9mIuZbL+G['VG%!=h/;:libPOk2lQBSg;i2BB2s\:R*b`)
%%5l3b5?H(u:I*]]eKYo*g#XL9I^.X[7?k>)LWKo)moegZRP#sC)Pf+VN;R@b3a_sU`d$Eg8d`4b$>@^>n(P^u!tZkP?cUIaErbiB
%=H-N5CA+bo\_TH(U/`71$PhNH;6c^q-L9f^H!gp9PBs=^L[g6&Wj4)Ze.mrdZWR;<('c]bjbaERTLUY@j.cYPYprXk(1m(IG2'4+
%Du.KFL:T4&A3s!rT[!a*<\LMfL"nPmqEZA%J::@Nk<VRJ3YnWjX<6HEE4'E$:iY_e(Tu&jeFuaf8XP)%-9rb-)95&IP#0RB9!.j>
%nZ%FWb!JZK(o$fE;''E[EXFDNOh]*6AgT]e4GLRYR#XutnKTYI+fWKj*/EWUM"BCoh:N\ceGNkc2?)Zob-;\L^NBK4oaeCY0(2I4
%3m4N"+`c2B]8/=h.D'nEm$f0J<:gJ8E494R7eJhFi[XjQNXoip\#R\tHQdCnf<Jh?RoX^XNG8%F*DG.I`tgi[SZ#lns5OX)rQXe[
%s4?L2J+_.fnF?,MrUhgN^3%6\rqQ(Lrq\R'q>#O=e$"8sm;N!o?[r(4^V9[Eci<q+J,B'!If5W4X1*TVbHLsBDh%c0YAaI;5QCY2
%5XD6Y_XDsJ=9%qXrUr2M&&0.B$3~>
%AI9_PrivateDataEnd
